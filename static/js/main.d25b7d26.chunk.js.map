{"version":3,"sources":["Components/Dialog/index.js","Components/ErrorBoundary.js","Firebase/firebaseConfig.js","Contexts/DatabaseContext.js","Components/Timetable/utils.js","Contexts/MyModulesContext.js","Functions/apiFunctions.js","Contexts/MyGroupsContext.js","Contexts/GroupModulesContext.js","Components/GroupManagement.js","Components/Body.js","Functions/urlFunctions.js","Components/UserProfile.js","Components/Timetable/Legend.js","Components/tutorialGIFs/ImportURL.mp4","Components/tutorialGIFs/CreateGroup.mp4","Components/UserLogin.js","Components/tutorialGIFs/FullImportStep.mp4","Components/VisualTip.js","Components/Timetable/EnterURL.js","Components/Timetable/TimetableModule.js","Components/Timetable/TimetableCell.js","Components/Timetable/Timetable.js","Components/Timetable/WeekSwitcher.js","Components/Timetable/CreateEvent.js","Pages/GroupTimetable/index.js","Pages/MyTimetable/index.js","Components/Layout.js","Components/JoinGroup.js","Components/tutorialGIFs/AddingMember.mp4","Components/tutorialGIFs/DeletingGroup.mp4","Components/tutorialGIFs/ClickingWeeks.mp4","Components/tutorialGIFs/NameChangeVideo.mp4","Components/TutorialPage.js","Components/ViewArchivedGroups.js","Router/Routes.js","App.js","reportWebVitals.js","index.js"],"names":["GenericDialog","props","React","useState","open","setOpen","title","children","handleClose","buttons","Dialog","onClose","aria-labelledby","aria-describedby","DialogTitle","id","DialogContent","DialogContentText","DialogActions","Button","onClick","window","location","reload","color","autoFocus","ErrorBoundary","state","error","errorInfo","this","setState","console","style","whiteSpace","toString","componentStack","Component","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","DatabaseContext","createContext","UpdateDatabaseContext","LocalDatabaseContext","useDatabase","useContext","DatabaseProvider","database","setDatabase","useLocalDatabase","firebase","require","default","firebaseMemo","useMemo","apps","length","firebaseApp","initializeApp","databaseURL","app","Provider","value","baseDate","toDate","getTime","getCurrentWeek","today","Date","Math","ceil","getModules","data","map","d","undefined","startTime","endTime","eventName","eventType","studentId","week","floor","type","String","getHours","padStart","concat","getMinutes","padEnd","day","toLocaleString","weekday","Error","date","getNextStartTime","currentTime","minutesInterval","parseInt","minutes","slice","generateRows","modules","result","modules_result","isMidTimeSlot","moduleStartTime","moduleEndTime","push","suitableModules","filter","m","MyModulesContext","UpdateMyModulesContext","MyWeekContext","UpdateMyWeekContext","MaximumWeekContext","useMyModules","useMaximumWeek","MyModulesProvider","localStorage","getItem","getDay","myWeek","setMyWeek","initialMaximumWeek","maximumWeek","myModules","setMyModules","useEffect","eventsRef","ref","on","events","val","err","off","shallowEqual","object1","object2","keys1","Object","keys","keys2","key","getModDetails","moduleCode","a","url","apiEndPoint","axios","get","then","res","response","overrideStudentEventsToDB","eventArray","set","getStudentGroups","updateMyGroups","tempStudentGroups","studentGroupRef","once","snapshot","index","element","members","values","forEach","studID","getGroupMembersOfGroup","groupId","listofMembers","getStudentEvents","addStudentId","studentEvents","e","studentsRef","getStudentGroupEvents","updateGroupModules","myGroups","anyGroups","arrayElement","Promise","all","studentGroup","Array","isArray","memberId","group","studentEventsPerGroupPerStudent","flattened","reformatData","r","MyGroupsContext","UpdateMyGroupsContext","GroupsWeekContext","UpdateGroupsWeekContext","useMyGroups","MyGroupsProvider","initStudentGroups","groupsWeek","setGroupsWeek","setMyGroups","groups","find","GroupModulesContext","UpdateGroupModulesContext","useUpdateGroupModules","GroupModulesProvider","groupModules","setGroupModules","buildGroupModules","myGroup","member","oldGroupModules","conditiontrue","prevGroupModules","toast","configure","useStyles","makeStyles","root","margin","display","paper","backgroundColor","media","height","cardColumn","padding","boxDesign","transition","boxShadow","transform","windowLocationHost","host","GroupManagement","classes","setStudentId","setStudentName","createStudentRecord","studentName","child","setRefreshKey","refreshKey","setItem","studentGroups","setStudentGroups","setGroupId","groupMembers","setGroupMembers","reverse","groupMemberName","setGroupMemName","getGMN","name","stud","modalMemberId","setModalMemberId","removeStudentFromGroup","removeStudentId","confirm","removeStudentRef","studentID","remove","success","getGroupMembersInAGroup","tempGroupMembers","i","membersList","j","orderByKey","childSnapshot","createStudentId","prompt","search","setSearch","filteredStudentGroups","setFilteredStudentGroups","groupNameTextboxArr","setGroupNameTextboxArr","tempArray","disable","groupName","readOnly","allowUndo","g","toLowerCase","includes","selectedCardNumber","setSelectedCardNumber","editGroupName","event","groupNameInput","target","newArr","enableGroupNameEdit","cardNumber","updateGroupName","undoGroupRename","deleteGroup","sizeOfGroup","warning","show","toggleShow","archivedGroups","setArchivedGroups","archiveGroup","log","addMemberModalIsOpen","setAddMemberModalIsOpen","addMemberModalGroupId","setAddMemberModalGroupId","addMemberModalGroupName","setAddMemberModalGroupName","setLinkCopied","openAddMemberModal","selectedGroupId","selectedGroupName","history","useHistory","addMemberDisabled","setAddMemberDisabled","Paper","className","square","flexDirection","wigth","float","clear","placeholder","borderRadius","outline","border","onChange","Tooltip","width","variant","flexWrap","marginTop","minWidth","maxWidth","minHeight","maxHeight","Box","Card","CardContent","textAlign","fontSize","groupsRef","fontWeight","CardActions","to","paddingTop","position","Typography","gutterBottom","component","overflow","disabled","size","memId","opacity","onKeyDown","code","class","fullWidth","marginBottom","flexGrow","marginRight","onFocus","select","text","onCopy","alignItems","WhatsappShareButton","WhatsappIcon","round","TelegramShareButton","TelegramIcon","JSON","stringify","marginLeft","skip","groupMemberId","handleChangeAddMemberModal","newList","addMemberToGroupUsingModal","Body","getUsers","userList","convertURLtoArray","URL","split","mod","findCorrectTimeslot","modAndClass","specificClassDetails","semester","classSlot","semesterSpecificTimetable","correctTimeSlot","typeAndSlot","semesterData","timetable","classTimeTable","lessonType","substring","classNo","weeks","convertWeekDayTimeToTimestamp","weekNumber","time","basedate","dayMap","Monday","monday","Tuesday","tuesday","Wednesday","wednesday","Thursday","thursday","Friday","friday","Saturday","saturday","Sunday","sunday","setDate","getDate","hoursOffset","minutesOffset","timeoffset","UserProfile","setUserList","enteredURL","setEnteredURL","errorMessage","setErrorMessage","modAndClassArray","setModAndClassArray","modAndClassDetails","setModAndClassDetails","userEventArray","setUserEventArray","currentSemester","getModuleDetails","apiPromises","modAndClasses","allSettled","details","Input","timeslotArray","modAndClassDetail","status","correctTimeSlots","newtimeslotArray","newEventArray","timeslot","startTimestamp","endTimestamp","convertModsIntoEvents","Legend","IconButton","aria-label","background","UserLogin","setShow","theme","backButton","spacing","nextButton","instructions","activeStep","setActiveStep","steps","handleNext","prevActiveStep","handleBack","userNameModal","OutlinedInput","required","defaultValue","dismissAll","notify","POSITION","TOP_RIGHT","toastId","dismiss","getStudentName","query","triggerNameRefresh","Modal","onHide","backdrop","keyboard","centered","Header","Title","Stepper","alternativeLabel","label","Step","StepLabel","stepIndex","controls","src","urlTut","groupTut","getStepContent","VisualTip","tooltip","href","autoPlay","loop","muted","exportLinkMessage","EnterURL","helperText","setHelperText","setError","existingEvents","setExistingEvents","functionSelector","setFunctionSelector","mergedArray","uniqueArray","addStudentEventsToDB","triggerLayoutForceRefresh","TextField","nonNUSModsEventArray","clearNUSModsTimetable","pickColour","colors","getModalStyle","TimetableModule","moduleInfo","initialState","module","setModule","modalStyle","body","for","startTimeSplit","endTimeSplit","studentEventsRef","studentEventsQuery","orderByChild","equalTo","Number","databaseModule","updateEvent","deleteEvent","TimetableCell","Timetable","test","timetableData","showPrivate","flat","filterPrivateEventType","weekTime","allModules","getStartEndTimeByWeek","times","timetableDays","createDay","_data","filterModules","align","cell","fullData","ul","WeekSwitcher","handleChange","justifyContent","Pagination","count","page","siblingCount","boundaryCount","CreateEvent","handleInputChange","createModuleForStudent","createEventsRef","createEventsQuery","limitToLast","lastEvent","newEventKey","catch","saveModule","preventDefault","myMembers","newDate","todayDate","moment","format","timetableTypeMessage","onSubmit","selected","hidden","step","min","max","GroupTimetable","updateGroupsWeek","setValue","handleWeekChange","legend","createPersonalEvent","weekSwitcher","Tabs","indicatorColor","textColor","newValue","Tab","TabContext","TabPanel","MyTimetable","updateMyWeek","topNavBar","sideNavBar","sideNavBarActive","borderBottom","buttonDesign","cursor","Layout","useLocation","forceRefresh","updateStudentNameDisabled","setUpdateStudentNameDisabled","studentNameTextbox","setStudentNameTextbox","AppBar","Toolbar","studentNameInput","editStudentName","pointerEvents","MenuList","onSelect","itemID","MenuItem","Link","pathname","JoinGroup","groupIdToJoin","setGroupIdToJoin","groupData","setGroupData","toGroupManagement","setToGroupManagement","isJoinGroupDisabled","setIsJoinGroupDisabled","joinGroupUserInput","setJoinGroupUserInput","parsedGroupIdFromUserInput","setParsedGroupIdFromUserInput","params","triggerGroupCheck","styles","alignContent","addMemberToGroup","keypress","TutorialPage","bullet","pos","heading","typography","pxToRem","flexBasis","flexShrink","secondaryHeading","palette","secondary","expandIconRoot","expanded","setExpanded","panel","isExpanded","fontFamily","Divider","paddingLeft","paddingBottom","Accordion","AccordionSummary","expandIcon","aria-controls","AccordionDetails","nameChange","urlTutVid","weeksNav","groupTutVid","addingMember","getCardContent","ViewArchivedGroups","activeStudentGroups","setActiveStudentGroups","activeStudentGroupsDistinct","Set","add","from","getArchivedGroupsFromDB","setForceRefresh","path","exact","App","Routes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d25b7d26.chunk.js","sourcesContent":["import React from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\n\nexport default function GenericDialog(props) {\n  const [open, setOpen] = React.useState(true);\n  const { title, children, buttons } = props;\n\n  const handleClickOpen = () => {\n    setOpen(true);\n  };\n\n  const handleRefresh = () => {\n    window.location.reload();\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  return (\n    <div>\n      <Dialog\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"alert-dialog-title\"\n        aria-describedby=\"alert-dialog-description\"\n      >\n        <DialogTitle id=\"alert-dialog-title\">{title}</DialogTitle>\n        <DialogContent>\n          <DialogContentText id=\"alert-dialog-description\">\n            {children}\n          </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleRefresh} color=\"primary\" autoFocus>\n            Refresh Page\n          </Button>\n          <Button onClick={handleClose} color=\"primary\">\n            Close\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </div>\n  );\n}\n","import { Component } from \"react\";\nimport Dialog from \"./Dialog\";\n\n// Error catching hook is only available with class components\nexport default class ErrorBoundary extends Component {\n  constructor(props) {\n    super(props);\n    this.state = { error: null, errorInfo: null };\n  }\n\n  componentDidCatch(error, errorInfo) {\n    // Catch errors in any components below and re-render with error message\n    this.setState({\n      error: error,\n      errorInfo: errorInfo,\n    });\n    // You can also log error messages to an error reporting service here\n    console.error(error);\n  }\n\n  render() {\n    if (this.state.errorInfo) {\n      // Error path\n      return (\n        <>\n          {this.props.children}\n          <Dialog title={\"Something went wrong\"}>\n            <details style={{ whiteSpace: \"pre-wrap\" }}>\n              {this.state.error && this.state.error.toString()}\n              <br />\n              {this.state.errorInfo.componentStack}\n            </details>\n          </Dialog>\n        </>\n      );\n    }\n    // Normally, just render children\n    return this.props.children;\n  }\n}\n","const {\n  REACT_APP_FIREBASE_APIKEY,\n  REACT_APP_FIREBASE_AUTHDOMAIN,\n  REACT_APP_FIREBASE_PROJECTID,\n  REACT_APP_FIREBASE_STORAGEBUCKET,\n  REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  REACT_APP_FIREBASE_APPID,\n  REACT_APP_FIREBASE_MEASUREMENTID,\n} = {\n  REACT_APP_FIREBASE_APIKEY: \"AIzaSyBlguR0aN3CmozbwbH03T3WM_CNA6Gjiwc\",\n  REACT_APP_FIREBASE_AUTHDOMAIN: \"is4261.firebaseapp.com\",\n  REACT_APP_FIREBASE_PROJECTID: \"is4261\",\n  REACT_APP_FIREBASE_STORAGEBUCKET: \"is4261.appspot.com\",\n  REACT_APP_FIREBASE_MESSAGINGSENDERID: \"808274074688\",\n  REACT_APP_FIREBASE_APPID: \"1:808274074688:web:5065d5ca0645b6e41293a5\",\n  REACT_APP_FIREBASE_MEASUREMENTID: \"G-S636RREEHZ\",\n};\n\nconst firebaseConfig = {\n  apiKey: REACT_APP_FIREBASE_APIKEY,\n  authDomain: REACT_APP_FIREBASE_AUTHDOMAIN,\n  projectId: REACT_APP_FIREBASE_PROJECTID,\n  storageBucket: REACT_APP_FIREBASE_STORAGEBUCKET,\n  messagingSenderId: REACT_APP_FIREBASE_MESSAGINGSENDERID,\n  appId: REACT_APP_FIREBASE_APPID,\n  measurementId: REACT_APP_FIREBASE_MEASUREMENTID,\n};\n\nexport default firebaseConfig;\n","import React, { useContext, useState, useMemo } from \"react\";\nimport firebaseConfig from \"../Firebase/firebaseConfig\";\n\nconst DatabaseContext = React.createContext();\nconst UpdateDatabaseContext = React.createContext();\nconst LocalDatabaseContext = React.createContext();\n\nexport function useDatabase() {\n  return useContext(DatabaseContext);\n}\n\nexport function useUpdateDatabase() {\n  return useContext(UpdateDatabaseContext);\n}\n\nexport default function DatabaseProvider({ children }) {\n  const [database, setDatabase] = useState();\n  const [useLocalDatabase] = useState(false);\n\n  function updateDatabase(database) {\n    setDatabase(database);\n  }\n\n  const firebase = require(\"firebase/app\").default;\n\n  // critical to put setDatabase as a memo because re-render will trigger infinite loop\n  const firebaseMemo = useMemo(() => {\n    if (firebase.apps.length === 0) {\n      if (useLocalDatabase) {\n        const firebaseApp = firebase\n          .initializeApp({ databaseURL: `http://localhost:9000/?ns=is4261` })\n          .database();\n        setDatabase(firebaseApp);\n      } else {\n        // online database\n        const firebaseApp = firebase.initializeApp(firebaseConfig).database();\n        setDatabase(firebaseApp);\n      }\n    } else {\n      firebase.app();\n      setDatabase(firebase.app().database());\n    }\n  }, [database, firebaseConfig]);\n\n  if (firebase.apps.length === 0) firebaseMemo();\n\n  // this should always return value 1 because we initialise firebase .default\n  // console.log(\"firebase.apps.length\", firebase.apps.length);\n\n  return (\n    <LocalDatabaseContext.Provider value={useLocalDatabase}>\n      <DatabaseContext.Provider value={database}>\n        <UpdateDatabaseContext.Provider value={updateDatabase}>\n          {children}\n        </UpdateDatabaseContext.Provider>\n      </DatabaseContext.Provider>\n    </LocalDatabaseContext.Provider>\n  );\n}\n","const baseDate = toDate(\"Jan 11 2021 0:00 GMT+8\").getTime();\n\n// TODO: since this can return beyond week 14, ensure weekSwitcher works in\n// this case\nfunction getCurrentWeek() {\n  const today = new Date();\n  if (baseDate > today) return 0;\n  return Math.ceil((today - baseDate) / (1000 * 60 * 60 * 24 * 7));\n}\n\nfunction getModules(data) {\n  try {\n    const weekInMilliSeconds = 1000 * 3600 * 24 * 7;\n    // prevent dirty data from database\n    if (data == null) return [];\n    if (data[0] == null) return [];\n    return data.map((d) => {\n      // prevent dirty data from database\n      if (d == undefined) return {};\n      const { startTime, endTime, eventName, eventType, studentId = \"\" } = d;\n      return {\n        id: `${startTime}-${eventName}-${eventType}-${studentId}-${endTime}`,\n        studentId: studentId,\n        week: Math.floor((startTime - baseDate) / weekInMilliSeconds) + 1,\n        title: eventName,\n        type: eventType,\n        startTime: String(toDate(startTime).getHours())\n          .padStart(2, \"0\")\n          .concat(String(toDate(startTime).getMinutes()).padEnd(2, \"0\")),\n        endTime: String(toDate(endTime).getHours())\n          .padStart(2, \"0\")\n          .concat(String(toDate(endTime).getMinutes()).padEnd(2, \"0\")),\n        day: toDate(startTime).toLocaleString(\"en-us\", { weekday: \"long\" }),\n      };\n    });\n  } catch (error) {\n    throw new Error(error);\n  }\n}\n\nfunction toDate(date) {\n  return new Date(date);\n}\n\nfunction getNextStartTime(currentTime, minutesInterval) {\n  currentTime = parseInt(currentTime) + minutesInterval;\n  let minutes = String(currentTime).slice(-2);\n  if (parseInt(minutes) >= 60) {\n    currentTime = parseInt(currentTime) - 60 + 100 + (minutes % 60);\n  }\n  return String(currentTime).padStart(4, \"0\");\n}\n\nfunction getStartEndTimeByWeek(allModules, weekNumber) {\n  // default timings\n  let startTime = \"0800\";\n  let endTime = \"1800\";\n  const weekModules = allModules.filter(\n    (module) => parseInt(module.week) === parseInt(weekNumber)\n  );\n  weekModules.forEach((module) => {\n    if (parseInt(module.startTime) < parseInt(startTime)) {\n      startTime = module.startTime;\n    }\n    if (parseInt(module.endTime) > parseInt(endTime)) {\n      endTime = module.endTime;\n    }\n  });\n  return { startTime, endTime };\n}\n\nfunction generateRows(startTime, endTime, minutesInterval, modules) {\n  let result = [];\n  let modules_result = [];\n\n  function isStartTimeSlot(currentTime, moduleStartTime) {\n    return currentTime === moduleStartTime;\n  }\n\n  function isMidTimeSlot(currentTime, moduleStartTime, moduleEndTime) {\n    return currentTime > moduleStartTime && currentTime < moduleEndTime;\n  }\n\n  while (parseInt(startTime) < parseInt(endTime)) {\n    result.push(startTime);\n    if (modules) {\n      // condition to check if module should be pushed\n      let suitableModules = modules.filter(\n        (m) =>\n          isStartTimeSlot(startTime, m.startTime) ||\n          isMidTimeSlot(startTime, m.startTime, m.endTime)\n      );\n      modules_result.push(suitableModules);\n    }\n    startTime = getNextStartTime(startTime, minutesInterval);\n  }\n  if (modules == null)\n    // [startTime, + minutesInterval, ..., endTime]\n    return result;\n  if (modules) return modules_result;\n}\n\nconst filterModules = (data, week, day) => {\n  return getModules(data)\n    .filter((_data) => _data.week === week)\n    .filter((_data) => _data.day.includes(day));\n};\n\nexport {\n  getModules,\n  getStartEndTimeByWeek,\n  generateRows,\n  filterModules,\n  getCurrentWeek,\n};\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport { useDatabase } from \"./DatabaseContext\";\nimport { getCurrentWeek } from \"../Components/Timetable/utils\";\n\nconst MyModulesContext = React.createContext();\nconst UpdateMyModulesContext = React.createContext();\nconst MyWeekContext = React.createContext();\nconst UpdateMyWeekContext = React.createContext();\nconst MaximumWeekContext = React.createContext();\n\nexport function useMyModules() {\n  return useContext(MyModulesContext);\n}\n\nexport function useUpdateMyModules() {\n  return useContext(UpdateMyModulesContext);\n}\n\nexport function useMyWeek() {\n  return useContext(MyWeekContext);\n}\n\nexport function useUpdateMyWeek() {\n  return useContext(UpdateMyWeekContext);\n}\n\nexport function useMaximumWeek() {\n  return useContext(MaximumWeekContext);\n}\n\nexport default function MyModulesProvider({ children }) {\n  const database = useDatabase();\n  const studentId = localStorage.getItem(\"studentId\");\n  const [myWeek, setMyWeek] = useState(\n    useMemo(() => getCurrentWeek(), [new Date().getDay()])\n  );\n\n  // controls the maximumWeek to show during the semester to be 14\n  // else, will show the current week as maximum week\n  const initialMaximumWeek = useMemo(() => {\n    if (getCurrentWeek() > 14) return getCurrentWeek();\n    return 14;\n  }, [new Date().getDay()]);\n\n  const [maximumWeek] = useState(initialMaximumWeek);\n  const [myModules, setMyModules] = useState([]);\n\n  useEffect(() => {\n    const eventsRef = database.ref(`Students/${studentId}/events`);\n    eventsRef?.on(\n      \"value\",\n      function (events) {\n        setMyModules(events?.val?.());\n      },\n      function (err) {\n        console.error(err);\n      }\n    );\n    return function cleanup() {\n      eventsRef.off();\n    };\n  }, [studentId]);\n\n  function updateMyModules(modules) {\n    setMyModules(modules);\n  }\n\n  function updateMyWeek(week) {\n    setMyWeek(week);\n  }\n\n  return (\n    <MaximumWeekContext.Provider value={maximumWeek}>\n      <MyModulesContext.Provider value={myModules}>\n        <UpdateMyModulesContext.Provider value={updateMyModules}>\n          <MyWeekContext.Provider value={myWeek}>\n            <UpdateMyWeekContext.Provider value={updateMyWeek}>\n              {children}\n            </UpdateMyWeekContext.Provider>\n          </MyWeekContext.Provider>\n        </UpdateMyModulesContext.Provider>\n      </MyModulesContext.Provider>\n    </MaximumWeekContext.Provider>\n  );\n}\n","import axios from \"axios\";\n\n// obtained from https://api.nusmods.com/v2/\nconst apiEndPoint = \"https://api.nusmods.com/v2\";\n\n// will have to implement some way of updating this information\nconst acadYear = \"2020-2021\";\n\nfunction shallowEqual(object1, object2) {\n  if (object1 == null && object2 == null) return true;\n  if (object1 == null) return false;\n  if (object2 == null) return false;\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (let key of keys1) {\n    if (object1[key] !== object2[key]) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n// converts valid NUSMODS modulecode into api\n// /{acadYear}/modules/{moduleCode}.json\nexport const getModDetails = async (moduleCode) => {\n  let url = apiEndPoint + \"/\" + acadYear + \"/modules/\" + moduleCode + \".json\";\n\n  const response = await axios.get(url).then((res) => {\n    return res.data;\n  });\n  return await response;\n};\n\n// (studentID, newEventArray, OldEventArray, firebaseDBObject)\nexport const addStudentEventsToDB = (\n  studentId,\n  eventArray,\n  existingEvents,\n  database\n) => {\n  // merge event lists\n  var mergedArray = [];\n  if (\n    existingEvents !== undefined &&\n    existingEvents !== null &&\n    existingEvents.length > 0\n  ) {\n    var mergedArray = [...eventArray, ...existingEvents];\n  } else {\n    mergedArray = eventArray;\n  }\n  // TODO: checking if eventArray contains null or undefined elements in array\n  let uniqueArray = [];\n  // remove duplicates\n  mergedArray.forEach((event) => {\n    for (var i = 0; i <= uniqueArray.length; i++) {\n      if (i === uniqueArray.length) {\n        uniqueArray.push(event);\n      }\n      if (shallowEqual(uniqueArray[i], event)) {\n        break;\n      }\n    }\n  });\n\n  var studentsRef = database.ref(`Students/${studentId}/events`);\n  try {\n    studentsRef.set(uniqueArray);\n  } catch (error) {\n    console.error(\n      `[apiFunctions] addStudentEventsToDB - studentsRef.set(uniqueArray)`\n    );\n    throw new Error(error);\n  }\n};\n\n// (studentID, eventArray, firebaseDBObject)\n// Overides list of events for student\nexport const overrideStudentEventsToDB = (studentId, eventArray, database) => {\n  var studentsRef = database.ref(`Students/${studentId}/events`);\n  studentsRef.set(eventArray);\n};\n\n// takes in a studentId,\n// returns an array of all the student's groups.\nexport const getStudentGroups = async (updateMyGroups, studentId, database) => {\n  var tempStudentGroups = [];\n  var studentGroupRef = database.ref(`Groups/`);\n\n  await studentGroupRef.once(\"value\").then((snapshot) => {\n    var data = snapshot.val();\n    for (var index in data) {\n      var element = data[index];\n      if (studentId !== null) {\n        if (element !== undefined && element.members !== undefined) {\n          Object.values(element.members).forEach((studID) => {\n            if (studID == studentId) {\n              tempStudentGroups.push(element);\n            }\n          });\n        }\n      }\n    }\n  });\n  updateMyGroups(tempStudentGroups);\n};\n\n// Takes in a group ID to get the details of the group\n// returns a group members of the group\nexport const getGroupMembersOfGroup = async (groupId, database) => {\n  var studentGroupRef = database.ref(`Groups/`);\n  let listofMembers = await studentGroupRef.once(\"value\").then((snapshot) => {\n    var data = snapshot.val();\n    for (var index in data) {\n      var element = data[index];\n      if (localStorage.getItem(\"studentId\") != null) {\n        if (element !== undefined && element.members !== undefined) {\n          if (element.groupId == groupId) {\n            return element;\n          }\n        }\n      }\n    }\n  });\n  return listofMembers;\n};\n\nexport const getStudentEvents = async (studentId, database) => {\n  if (studentId !== null) {\n    var studentsRef = database.ref(`Students/${studentId}/events`);\n    const result = await studentsRef.once(\"value\").then((snapshot) => {\n      return snapshot.val();\n    });\n    // guard condition for no student events\n    if (result === null) return [];\n\n    // hacky fix for dirty data without studentId, append studentId to\n    // each student event\n    function addStudentId(studentEvents, studentId) {\n      return studentEvents.map((e) => {\n        if (e.studentId) return e;\n        return { ...e, studentId };\n      });\n    }\n    return addStudentId(result, studentId);\n  }\n};\n\nexport const getStudentGroupEvents = async (\n  updateGroupModules,\n  myGroups,\n  database\n) => {\n  const anyGroups =\n    myGroups !== null && myGroups !== undefined && myGroups.length > 0;\n  const exists = (arrayElement) =>\n    arrayElement !== null &&\n    arrayElement !== undefined &&\n    arrayElement.length > 0;\n\n  if (anyGroups) {\n    // hacky way for array of student events per member per group\n    let studentEventsPerGroupPerStudent = await Promise.all(\n      myGroups.map(async (studentGroup) => {\n        let result = {};\n        if (!Array.isArray(studentGroup.members)) return;\n        const group = await Promise.all(\n          studentGroup.members.map(async (memberId) => {\n            result[studentGroup.groupId] = {};\n            const studentEvents = await getStudentEvents(memberId, database);\n            result[studentGroup.groupId][memberId] = studentEvents;\n            return result;\n          })\n        );\n        return group;\n      })\n    );\n\n    // hacky flattening\n    const flattened = studentEventsPerGroupPerStudent.map((group) => {\n      if (Array.isArray(group)) return group[0];\n    });\n    let reformatData = {};\n    Object.values(flattened).forEach((r) => {\n      // hacky method for dirty database\n      if (!r) return;\n      reformatData[Object.keys(r)[0]] = Object.values(r)[0];\n    });\n\n    // this is how reformatData is supposed to look like\n    // reformatData = {\n    //   // groupId\n    //   50: {\n    //     // studentId\n    //     16: [{mod},{mod},{mod}],\n    //     17: [{mod},{mod},{mod}],\n    //   },\n    //   70: {\n    //     15: [{mod},{mod},{mod}],\n    //     16: [{mod},{mod},{mod}],\n    //   },\n    // };\n\n    updateGroupModules(reformatData);\n  }\n};\n\nexport const loadTimetable = (updateMyModules, studentId, database) => {\n  function addStudentId(studentEvents, studentId) {\n    return studentEvents?.map((e) => ({ ...e, studentId }));\n  }\n  if (studentId !== null) {\n    let studentsRef = database.ref(`Students/${studentId}/events`);\n    studentsRef.once(\"value\").then((snapshot) => {\n      updateMyModules(addStudentId(snapshot.val(), studentId));\n    });\n  }\n};\n\nexport const getStudentName = async (studentId, database) => {\n  let studentsRef = database.ref(`Students/${studentId}/name`);\n  return await studentsRef.once(\"value\").then((snapshot) => {\n    return snapshot.val();\n  });\n};\n\nexport const getGroupMemberName = async (database) => {\n  let studentNameRef = database.ref(\"Students/\");\n  return await studentNameRef.once(\"value\").then((snapshot) => {\n    return snapshot.val();\n  });\n};\n\nexport const removeEventFromStudent = (studentId, database) => {};\n","import React, { useContext, useState, useMemo, useEffect } from \"react\";\nimport { useDatabase } from \"../Contexts/DatabaseContext\";\nimport { getStudentGroups } from \"../Functions/apiFunctions.js\";\nimport { getCurrentWeek } from \"../Components/Timetable/utils\";\n\nconst MyGroupsContext = React.createContext();\nconst UpdateMyGroupsContext = React.createContext();\nconst GroupsWeekContext = React.createContext();\nconst UpdateGroupsWeekContext = React.createContext();\n\nexport function useMyGroups() {\n  return useContext(MyGroupsContext);\n}\n\nexport function useUpdateMyGroups() {\n  return useContext(UpdateMyGroupsContext);\n}\n\nexport function useGroupsWeek() {\n  return useContext(GroupsWeekContext);\n}\n\nexport function useUpdateGroupsWeek() {\n  return useContext(UpdateGroupsWeekContext);\n}\n\nexport default function MyGroupsProvider({ children }) {\n  const studentId = localStorage.getItem(\"studentId\");\n  const database = useDatabase();\n  const initStudentGroups = useMemo(\n    () => getStudentGroups(updateMyGroups, studentId, database),\n    [studentId, database]\n  );\n  const [groupsWeek, setGroupsWeek] = useState(\n    useMemo(() => getCurrentWeek(), [new Date().getDay()])\n  );\n  const [myGroups, setMyGroups] = useState(initStudentGroups);\n  // custom refhook for go back 1-step, see comment about usePrevious fxn below\n  // const prevMyGroups = usePrevious(myGroups);\n\n  // load database listeners\n  useEffect(() => {\n    const studentGroupRef = database.ref(`Groups/`);\n    // subscribe database listeners on all groups\n    studentGroupRef?.on(\n      \"value\",\n      function (snapshot) {\n        const allGroups = snapshot?.val?.();\n        updateMyGroups(\n          allGroups.filter((group) => {\n            if (group.members === undefined) return false;\n            if (!Array.isArray(group.members)) return false;\n            return group.members.find((memberId) => studentId == memberId);\n          })\n        );\n      },\n      function (err) {\n        console.error(err);\n      }\n    );\n    // unsubscribe database listeners on component unmount/re-render\n    return function cleanup() {\n      studentGroupRef.off();\n    };\n  }, [studentId]);\n\n  function updateMyGroups(groups) {\n    setMyGroups(groups);\n  }\n\n  function updateGroupsWeek(week) {\n    setGroupsWeek(week);\n  }\n\n  // kept comment for potential undo groups feature\n  // function usePrevious(value) {\n  //   const ref = useRef();\n  //   useEffect(() => {\n  //     ref.current = value;\n  //   });\n  //   return ref.current;\n  // }\n\n  return (\n    <MyGroupsContext.Provider value={myGroups}>\n      <UpdateMyGroupsContext.Provider value={updateMyGroups}>\n        <GroupsWeekContext.Provider value={groupsWeek}>\n          <UpdateGroupsWeekContext.Provider value={updateGroupsWeek}>\n            {children}\n          </UpdateGroupsWeekContext.Provider>\n        </GroupsWeekContext.Provider>\n      </UpdateMyGroupsContext.Provider>\n    </MyGroupsContext.Provider>\n  );\n}\n","import React, { useContext, useState, useEffect, useMemo } from \"react\";\nimport { useDatabase } from \"./DatabaseContext\";\nimport { useMyGroups } from \"./MyGroupsContext\";\nimport { getStudentGroupEvents } from \"../Functions/apiFunctions.js\";\n\nconst GroupModulesContext = React.createContext();\nconst UpdateGroupModulesContext = React.createContext();\n\nexport function useGroupModules() {\n  return useContext(GroupModulesContext);\n}\n\nexport function useUpdateGroupModules() {\n  return useContext(UpdateGroupModulesContext);\n}\n\nexport default function GroupModulesProvider({ children }) {\n  const studentId = localStorage.getItem(\"studentId\");\n  const database = useDatabase();\n  const myGroups = useMyGroups();\n  const getGroupEvents = useMemo(\n    () => getStudentGroupEvents(updateGroupModules, myGroups, database),\n    [myGroups, database]\n  );\n  const [groupModules, setGroupModules] = useState();\n  let count = 0;\n\n  // build group modules\n  useEffect(() => {\n    if (Array.isArray(myGroups)) {\n      const buildGroupModules = {};\n      myGroups.forEach((myGroup) => {\n        buildGroupModules[myGroup.groupId] = {};\n        buildGroupModules[\"length\"] = myGroups.length;\n        if (myGroup.members && Array.isArray(myGroup.members)) {\n          // set length property in group object for members\n          buildGroupModules[myGroup.groupId][\"length\"] = 0;\n          myGroup.members.forEach((member) => {\n            buildGroupModules[myGroup.groupId][member] = null;\n            buildGroupModules[myGroup.groupId][\"length\"]++;\n          });\n          // check prevents override after database listeners update member modules\n          if (typeof groupModules !== \"object\") {\n            count++;\n            setGroupModules((oldGroupModules) => {\n              return buildGroupModules;\n            });\n          }\n        }\n      });\n    }\n  }, [myGroups, studentId]);\n\n  // set group modules\n  useEffect(() => {\n    if (Array.isArray(myGroups)) {\n      myGroups.forEach((myGroup) => {\n        if (myGroup.members && Array.isArray(myGroup.members))\n          myGroup.members.forEach((member) => {\n            const eventsRef = database.ref(`Students/${member}/events`);\n            eventsRef?.on(\n              \"value\",\n              function (events) {\n                const conditiontrue =\n                  myGroups &&\n                  myGroup.members &&\n                  groupModules &&\n                  groupModules[myGroup.groupId] != undefined &&\n                  groupModules[myGroup.groupId] != [] &&\n                  groupModules[myGroup.groupId][member] == null &&\n                  events?.val?.() != [] &&\n                  events != [] &&\n                  events != undefined;\n                if (conditiontrue) {\n                  if (conditiontrue) {\n                    setGroupModules((prevGroupModules) => {\n                      return (groupModules[myGroup.groupId][member] =\n                        events?.val?.() || []);\n                    });\n                  }\n                }\n              },\n              function (err) {\n                console.error(err);\n              }\n            );\n            return function cleanup() {\n              eventsRef.off();\n            };\n          });\n      });\n    }\n  }, [myGroups, studentId]);\n\n  function updateGroupModules(modules) {\n    setGroupModules(modules);\n  }\n\n  // {\n  //   \"50\": {\n  //     \"16\": [{},{},{}],\n  //     \"17\": [{},{},{}],\n  //     length: 2\n  //   },\n  //   \"70\": {\n  //     \"15\": [{},{},{}],\n  //     \"16\": [{},{},{}],\n  //     length: 2\n  //   },\n  //   length: 2\n  // }\n\n  return (\n    <GroupModulesContext.Provider value={groupModules}>\n      <UpdateGroupModulesContext.Provider value={updateGroupModules}>\n        {children}\n      </UpdateGroupModulesContext.Provider>\n    </GroupModulesContext.Provider>\n  );\n}\n","import { React, Fragment, useState, useEffect } from \"react\";\n\nimport { Button, setRef, OutlinedInput } from \"@material-ui/core\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport Box from \"@material-ui/core/Box\";\nimport { shadows } from \"@material-ui/system\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport ArchiveIcon from \"@material-ui/icons/Archive\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogContentText from \"@material-ui/core/DialogContentText\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport { Mouse } from \"@material-ui/icons\";\nimport { ExpandLess } from \"@material-ui/icons\";\nimport { CopyToClipboard } from \"react-copy-to-clipboard\";\n\nimport { useDatabase } from \"../Contexts/DatabaseContext\";\nimport {\n  EmailShareButton,\n  EmailIcon,\n  FacebookMessengerShareButton,\n  FacebookMessengerIcon,\n  LineShareButton,\n  LineIcon,\n  TelegramShareButton,\n  TelegramIcon,\n  WhatsappShareButton,\n  WhatsappIcon,\n} from \"react-share\";\n\nimport \"./Stylesheet/Layout.css\";\n\ntoast.configure();\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"2%\",\n    display: \"inline\",\n  },\n  paper: {\n    backgroundColor: \"#FFF\",\n  },\n  media: {\n    height: 140,\n  },\n  cardColumn: {\n    padding: \"10px\",\n  },\n  boxDesign: {\n    transition: \"all 0.3s ease 0s\",\n    \"&:hover\": {\n      boxShadow: \"0px 10px 15px #ff5942\",\n      transform: \"translateY(-7px)\",\n    },\n  },\n});\n\nconst windowLocationHost = `http://${window.location.host}/mix/#`;\n\nfunction GroupManagement(props) {\n  const classes = useStyles();\n  const database = useDatabase();\n  // ========================================================== STUDENTS ==========================================================\n  const [studentId, setStudentId] = useState(localStorage.getItem(\"studentId\"));\n  const [studentName, setStudentName] = useState(\n    localStorage.getItem(\"studentName\")\n  );\n\n  let createStudentId = (studentName) => {\n    var query = database.ref(\"Students/\").orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key;\n        setStudentId(parseInt(key) + 1);\n        localStorage.setItem(\"studentId\", parseInt(key) + 1);\n      });\n      createStudentRecord(studentName);\n    });\n  };\n\n  let createStudentRecord = (studentName) => {\n    var studentsRef = database.ref(`Students/`);\n    studentsRef\n      .child(localStorage.getItem(\"studentId\"))\n      .child(\"name\")\n      .set(studentName);\n    setRefreshKey(refreshKey + 1);\n    localStorage.setItem(\"studentName\", studentName);\n  };\n\n  let getStudentName = (studentId) => {\n    var studentsRef = database.ref(\n      `Students/${localStorage.getItem(\"studentId\")}/name`\n    );\n    studentsRef.once(\"value\").then((snapshot) => {\n      setStudentName(snapshot.val());\n    });\n  };\n\n  // ========================================================== GROUPS ==========================================================\n  const [studentGroups, setStudentGroups] = useState([]);\n  const [, setGroupId] = useState();\n  const [groupMembers, setGroupMembers] = useState([]);\n\n  let getStudentGroups = () => {\n    setStudentGroups([]);\n\n    var tempStudentGroups = [];\n\n    var studentGroupRef = database.ref(`Groups/`);\n    studentGroupRef.once(\"value\").then((snapshot) => {\n      var data = snapshot.val();\n      for (var index in data) {\n        var element = data[index];\n        if (localStorage.getItem(\"studentId\") != null) {\n          if (element !== undefined && element.members !== undefined) {\n            Object.values(element.members).forEach((studID) => {\n              if (studID == localStorage.getItem(\"studentId\")) {\n                tempStudentGroups.push(element);\n              }\n            });\n          }\n        }\n      }\n      setStudentGroups(tempStudentGroups.reverse());\n    });\n  };\n\n  const [groupMemberName, setGroupMemName] = useState([]);\n  let getGroupMemberName = () => {\n    setGroupMemName([]);\n\n    var studentNameRef = database.ref(\"Students/\");\n    studentNameRef.once(\"value\").then((snapshot) => {\n      setGroupMemName(snapshot);\n    });\n  };\n\n  let getGMN = (studID) => {\n    var name = \"\";\n    groupMemberName.forEach((stud) => {\n      if (parseInt(stud.key) === parseInt(studID)) {\n        name = stud.val().name;\n      }\n    });\n    return name;\n  };\n\n  let createGroupId = () => {\n    var groupName = prompt(\"Enter group name\");\n    if (groupName == null) {\n      toast.success(\"The creation of group has been cancelled.\");\n      return;\n    }\n\n    var query = database.ref(\"Groups/\").orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key;\n        localStorage.setItem(\"groupId\", parseInt(key) + 1);\n        setGroupId(parseInt(key) + 1);\n      });\n      //only create group entry without other members\n      groupMembers.push(parseInt(studentId)); //to set this will always be key = 0, to prevent error undefined members.0\n      var groupsRef = database.ref(`Groups/${localStorage.getItem(\"groupId\")}`);\n      groupsRef.child(\"groupId\").set(parseInt(localStorage.getItem(\"groupId\")));\n      groupsRef.child(\"groupName\").set(groupName);\n      setGroupMembers(groupMembers);\n      groupsRef.child(\"members\").set(groupMembers);\n      toast.success(\n        \"Group name: \" + groupName + \" has been created successfully.\"\n      );\n      setRefreshKey(refreshKey + 1);\n    });\n  };\n\n  const [memberIdToAdd, setMemberIdToAdd] = useState(-1);\n\n  function handleChangeAddMemberModal(e) {\n    var memberId = e.target.value;\n    // no more than 1 per input\n    if (memberId.includes(\",\")) {\n      toast.error(\"You are not allowed to enter ,\");\n      return;\n    }\n    if (memberId.includes(\" \")) {\n      toast.error(\"You are not allowed to enter blank spaces\");\n      return;\n    }\n    if (memberId.includes(\";\")) {\n      toast.error(\"You are not allowed to enter ;\");\n      return;\n    }\n\n    setModalMemberId(memberId);\n\n    //check if this user trying to add himself\n    if (parseInt(memberId) == parseInt(studentId)) {\n      toast.error(\"You are not allowed to add your own Student ID\");\n      setAddMemberDisabled(true);\n      return;\n    }\n\n    //check if this member is defined in the system\n    var newMemberName = getGMN(memberId);\n    if (newMemberName === undefined) {\n      toast.error(\"There is no record of this member ID #\" + memberId);\n      setAddMemberDisabled(true);\n      return;\n    }\n\n    //check if duplicate member\n    let skip = false;\n    groupMembers.forEach((groupMemberId) => {\n      if (parseInt(memberId) == parseInt(groupMemberId)) {\n        toast.error(\"You are not allowed to add existing group members\");\n        setAddMemberDisabled(true);\n        skip = true;\n      }\n    });\n    if (skip === true) {\n      return;\n    }\n\n    var studentsRef = database.ref(`Students/${memberId}`);\n    studentsRef.once(\"value\").then((snapshot) => {\n      if (snapshot.val() === null) {\n        toast.error(\"There is no record of this member ID #\" + memberId);\n        setAddMemberDisabled(true);\n        return;\n      }\n    });\n\n    setAddMemberDisabled(false);\n  }\n\n  const removeAllOtherMembersFromGroup = (groupId) => {\n    var removeAllMembersPrompt = window.confirm(\n      \"Are you sure you want to remove all other members from Group ID: #\" +\n        groupId +\n        \"?\"\n    );\n    if (!removeAllMembersPrompt) {\n      toast.success(\"Removal of all members has been cancelled.\");\n      return;\n    }\n    groupMembers.push(parseInt(localStorage.getItem(\"studentId\")));\n    setGroupMembers(groupMembers);\n\n    database.ref(`Groups/`).child(groupId).child(\"members\").set(groupMembers);\n\n    toast.success(\"All other group members have been removed successfully.\");\n    setRefreshKey(refreshKey + 1);\n  };\n\n  const [modalMemberId, setModalMemberId] = useState();\n\n  let addMemberToGroupUsingModal = () => {\n    let newList = [];\n    for (var i = 0; i < studentGroups.length; i++) {\n      if (studentGroups[i].groupId === addMemberModalGroupId) {\n        var membersList = studentGroups[i].members;\n        for (var j = 0; j < membersList.length; j++) {\n          if (membersList[j] !== undefined) {\n            newList.push(membersList[j]);\n          }\n        }\n      }\n    }\n\n    newList.push(parseInt(modalMemberId));\n\n    database\n      .ref(`Groups/`)\n      .child(addMemberModalGroupId)\n      .child(\"members\")\n      .set(newList)\n      .then(() => {\n        setGroupMembers([...newList]);\n      });\n\n    toast.success(\n      \"Member ID: \" +\n        modalMemberId +\n        \" has been added to Group ID: \" +\n        addMemberModalGroupId +\n        \" successfully.\"\n    );\n    console.log(\"newList\");\n    console.log(newList);\n\n    getGroupMembersInAGroup(addMemberModalGroupId);\n    setModalMemberId(undefined);\n    getStudentGroups();\n  };\n\n  let removeStudentFromGroup = (groupId, removeStudentId) => {\n    //Leave Group\n    if (\n      parseInt(removeStudentId) == parseInt(localStorage.getItem(\"studentId\"))\n    ) {\n      var leaveGroupPrompt = window.confirm(\n        `Are you sure you want to leave the group? Leaving a group means all members will stay, but only you are removed.\\n\\nYou will not be able to view the group related information anymore.`\n      );\n      if (leaveGroupPrompt) {\n        var removeStudentRef = database.ref(`Groups/${groupId}/members/`);\n        removeStudentRef.once(\"value\").then((snapshot) => {\n          snapshot.forEach((studentID) => {\n            if (studentID.val() == removeStudentId) {\n              removeStudentRef.child(studentID.key).remove();\n            }\n          });\n        });\n      } else {\n        return;\n      }\n    } else {\n      //Remove student\n      var removeStudentPrompt = window.confirm(\n        `Are you sure you want to remove ${getGMN(\n          removeStudentId\n        )} (#${removeStudentId}) from the group?\\n\\nThe member will no longer be able to see the group related information.`\n      );\n      if (removeStudentPrompt) {\n        var removeStudentRef = database.ref(`Groups/${groupId}/members/`);\n        removeStudentRef.once(\"value\").then((snapshot) => {\n          snapshot.forEach((studentID) => {\n            if (studentID.val() == removeStudentId) {\n              removeStudentRef.child(studentID.key).remove();\n            }\n          });\n        });\n      } else {\n        return;\n      }\n    }\n    if (\n      parseInt(removeStudentId) == parseInt(localStorage.getItem(\"studentId\"))\n    ) {\n      toast.success(\"You have left group\" + groupId + \" successfully.\");\n    } else {\n      toast.success(\n        \"Member ID: \" +\n          removeStudentId +\n          \" has been removed from Group ID: \" +\n          groupId +\n          \" successfully.\"\n      );\n    }\n    setRefreshKey(refreshKey + 1);\n  };\n\n  let getGroupMembersInAGroup = (groupId) => {\n    setGroupMembers([]);\n\n    var tempGroupMembers = [];\n\n    for (var i = 0; i < studentGroups.length; i++) {\n      if (studentGroups[i].groupId === groupId) {\n        var membersList = studentGroups[i].members;\n        for (var j = 0; j < membersList.length; j++) {\n          if (membersList[j] !== undefined) {\n            tempGroupMembers.push(membersList[j]);\n          }\n        }\n      }\n    }\n    setGroupMembers(tempGroupMembers);\n  };\n\n  const [refreshKey, setRefreshKey] = useState(0);\n  useEffect(() => {\n    setRefreshKey(0);\n\n    if (localStorage.getItem(\"studentId\") == null) {\n      var studentName = prompt(\n        \"Hi! Seems like this is the first time you visited MixTime. \\nPlease enter your name and we'll tag it into your timetable.\"\n      );\n      createStudentId(studentName);\n    } else {\n      getStudentName(localStorage.getItem(\"studentId\"));\n      getStudentGroups();\n      getGroupMemberName();\n      getGroupMembersInAGroup();\n    }\n  }, [refreshKey]);\n\n  const [search, setSearch] = useState(\"\");\n\n  const [filteredStudentGroups, setFilteredStudentGroups] = useState([]);\n  const [groupNameTextboxArr, setGroupNameTextboxArr] = useState();\n  useEffect(() => {\n    var tempArray = [];\n    for (var i = 0; i < filteredStudentGroups.length; i++) {\n      tempArray.push({\n        disable: true,\n        groupId: filteredStudentGroups[i].groupId,\n        val: filteredStudentGroups[i].groupName,\n        readOnly: true,\n        allowUndo: false,\n      });\n    }\n    setGroupNameTextboxArr(tempArray);\n  }, [studentGroups, filteredStudentGroups]);\n\n  useEffect(() => {\n    setFilteredStudentGroups(\n      studentGroups.filter((g) => {\n        return g.groupName.toLowerCase().includes(search.toLowerCase());\n      })\n    );\n  }, [search, studentGroups]);\n\n  const [selectedCardNumber, setSelectedCardNumber] = useState();\n\n  function editGroupName(event) {\n    var groupNameInput = event.target.value;\n\n    var newArr = [...groupNameTextboxArr];\n    newArr[selectedCardNumber] = {\n      ...newArr[selectedCardNumber],\n      disable: false,\n      val: groupNameInput,\n      allowUndo: false,\n    };\n    setGroupNameTextboxArr(newArr);\n  }\n\n  function enableGroupNameEdit(cardNumber) {\n    var newArr = [...groupNameTextboxArr];\n    newArr[cardNumber] = {\n      ...newArr[cardNumber],\n      disable: false,\n      readOnly: false,\n      allowUndo: false,\n    };\n    setGroupNameTextboxArr(newArr);\n    setSelectedCardNumber(cardNumber);\n\n    localStorage.setItem(\"originalGroupName\", newArr[cardNumber].val);\n  }\n\n  function updateGroupName(cardNumber) {\n    var newArr = [...groupNameTextboxArr];\n    newArr[cardNumber] = {\n      ...newArr[cardNumber],\n      disable: true,\n      readOnly: true,\n      allowUndo: true,\n    };\n    setGroupNameTextboxArr(newArr);\n\n    if (\n      groupNameTextboxArr[cardNumber].val !==\n      localStorage.getItem(\"originalGroupName\")\n    ) {\n      toast.success(\"Group name has been updated successfully.\");\n    }\n    //To update in firebase for real logic [now is just update in client side]\n  }\n\n  function undoGroupRename(cardNumber) {\n    setRefreshKey(1);\n    var newArr = [...groupNameTextboxArr];\n    newArr[cardNumber] = {\n      ...newArr[cardNumber],\n      disable: true,\n      readOnly: true,\n      allowUndo: false,\n      val: localStorage.getItem(\"originalGroupName\"),\n    };\n\n    if (\n      groupNameTextboxArr[cardNumber].val ===\n      localStorage.getItem(\"originalGroupName\")\n    ) {\n      toast.success(\"Change cancelled.\");\n    } else {\n      toast.success(\"You have successfully undo changes on group rename.\");\n    }\n    localStorage.setItem(\"originalGroupName\", null);\n    setGroupNameTextboxArr(newArr);\n    //To update in firebase for real logic [now is just update in client side]\n  }\n\n  function deleteGroup(groupId, sizeOfGroup) {\n    if (sizeOfGroup > 1) {\n      //logged in user himself\n      toast.warning(\n        \"You are not allowed to delete a group with members inside.\"\n      );\n    } else if (sizeOfGroup === 1) {\n      var leaveGroupPrompt = window.confirm(\n        `Are you sure you want to delete the group?\\nYou cannot undo this.`\n      );\n\n      if (leaveGroupPrompt) {\n        database.ref(`Groups/`).child(groupId).remove();\n        toast.success(\"You have successfully deleted the group.\");\n        setRefreshKey(refreshKey + 1);\n      } else {\n        toast.success(\"Deletion of group is cancelled.\");\n      }\n    }\n  }\n\n  const [show, toggleShow] = useState(true);\n  const [archivedGroups, setArchivedGroups] = useState([]);\n\n  useEffect(() => {\n    getArchivedGroupsFromDB();\n  }, []);\n\n  function getArchivedGroupsFromDB() {\n    var studentsRef = database.ref(\n      `Students/${localStorage.getItem(\"studentId\")}/archivedGroups`\n    );\n    studentsRef.once(\"value\").then((snapshot) => {\n      if (snapshot.val() === null) {\n        setArchivedGroups([]);\n      } else {\n        setArchivedGroups(snapshot.val());\n      }\n    });\n  }\n\n  function archiveGroup(groupId) {\n    archivedGroups.push(groupId);\n    setArchivedGroups(archivedGroups);\n\n    console.log(archivedGroups);\n\n    var studentsRef = database.ref(`Students/`);\n    studentsRef\n      .child(localStorage.getItem(\"studentId\"))\n      .child(\"archivedGroups\")\n      .set(archivedGroups);\n\n    setRefreshKey(refreshKey + 1);\n    toast.success(\"You have successfully archived the group.\");\n  }\n\n  const [addMemberModalIsOpen, setAddMemberModalIsOpen] = useState(false);\n  const [addMemberModalGroupId, setAddMemberModalGroupId] = useState(-1);\n  const [addMemberModalGroupName, setAddMemberModalGroupName] = useState(\"\");\n  const [linkCopied, setLinkCopied] = useState(false);\n\n  const openAddMemberModal = (selectedGroupId, selectedGroupName) => {\n    getGroupMembersInAGroup(selectedGroupId);\n    setAddMemberModalIsOpen(true);\n    if (selectedGroupId !== undefined) {\n      setAddMemberModalGroupId(selectedGroupId);\n    }\n    if (selectedGroupId !== undefined) {\n      setAddMemberModalGroupName(selectedGroupName);\n    }\n  };\n\n  const closeAddMemberModal = () => {\n    setAddMemberModalIsOpen(false);\n    setAddMemberModalGroupId(-1);\n    setRefreshKey(refreshKey + 1);\n    setModalMemberId(undefined);\n    setAddMemberModalGroupName(\"\");\n    setLinkCopied(false);\n  };\n  const history = useHistory();\n\n  const routeChange = () => {\n    let path = `ViewArchivedGroups`;\n    history.push(path);\n  };\n\n  const [showModal, setShowModal] = useState(false);\n  const handleCloseModal = () => setShowModal(false);\n  const handleShowModal = () => setShowModal(true);\n\n  const [addMemberDisabled, setAddMemberDisabled] = useState(false);\n\n  return (\n    <Paper className={classes.paper} square>\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          height: \"100%\",\n          wigth: \"100%\",\n          padding: \"2%\",\n        }}\n      >\n        <div>\n          <div style={{ float: \"left\" }}>\n            You are currently enrolled in{\" \"}\n            {studentGroups !== undefined && studentGroups.length !== undefined\n              ? studentGroups.length\n              : 0}{\" \"}\n            groups.\n          </div>\n          <div style={{ clear: \"both\" }}></div>\n          <div style={{ float: \"right\" }}>\n            <label style={{ float: \"right\" }}>\n              Filter Groups: &nbsp; &nbsp;\n              <input\n                type=\"text\"\n                placeholder=\"Enter search term\"\n                style={{\n                  padding: \"4px 4px 4px 4px\",\n                  borderRadius: \"4px\",\n                  outline: \"none\",\n                  border: \"1px solid #da337a\",\n                  boxShadow: \"0px 0px 8px #da337a\",\n                  backgroundColor: \"initial !important\",\n                }}\n                value={search}\n                onChange={(e) => setSearch(e.target.value)}\n              ></input>\n            </label>\n            <br></br>\n            <Tooltip title={<em>{\"Click here to view archived groups\"}</em>}>\n              <Button\n                style={{\n                  boxShadow: \"5px 5px 5px 0px grey\",\n                  width: \"fit-content\",\n                }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={routeChange}\n              >\n                <ArchiveIcon /> &nbsp; View Archived Groups\n              </Button>\n            </Tooltip>\n            &nbsp; &nbsp;\n            <Tooltip\n              title={\n                <em>{\"Click here to minimize or expand all your groups\"}</em>\n              }\n            >\n              <Button\n                style={{\n                  boxShadow: \"5px 5px 5px 0 #bbb\",\n                  width: \"fit-content\",\n                }}\n                variant=\"contained\"\n                color=\"primary\"\n                onClick={() => toggleShow(!show)}\n              >\n                {show ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                {show ? \"Minimize All Groups\" : \"Expand All Groups\"}\n              </Button>\n            </Tooltip>\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            margin: \"3% 2% 0% 15%\",\n          }}\n        >\n          <div\n            style={{\n              marginTop: \"1%\",\n              minWidth: 310,\n              maxWidth: 310,\n              minHeight: 280,\n              maxHeight: 280,\n            }}\n          >\n            <Box\n              boxShadow={6}\n              style={{\n                margin: \"0% 3%\",\n                minHeight: 220,\n                width: 300,\n                maxHeight: 220,\n              }}\n              className={classes.boxDesign}\n            >\n              <Card className={classes.root}>\n                <div className=\"cardRow\">\n                  <CardContent className={classes.cardColumn}>\n                    <div\n                      style={{\n                        margin: \"auto\",\n                        textAlign: \"center\",\n                        fontSize: \"x-large\",\n                      }}\n                    >\n                      <Link\n                        style={{ width: \"fit-content\" }}\n                        onClick={createGroupId}\n                      >\n                        <AddIcon style={{ width: \"200px\", height: \"100px\" }} />\n                        <br></br>\n                        <h3 style={{ fontWeight: \"bold\" }}>Create New Group</h3>\n                      </Link>\n                    </div>\n                  </CardContent>\n                  <CardActions></CardActions>\n                </div>\n              </Card>\n            </Box>\n            <Box\n              boxShadow={6}\n              style={{\n                margin: \"0% 3%\",\n                marginTop: 10,\n                minHeight: 50,\n                width: 300,\n                maxHeight: 50,\n              }}\n              className={classes.boxDesign}\n            >\n              <div\n                style={{\n                  margin: \"auto\",\n                  textAlign: \"center\",\n                }}\n              >\n                <Link\n                  style={{\n                    width: \"fit-content\",\n                    fontSize: \"x-large\",\n                  }}\n                  to=\"/JoinGroup\"\n                >\n                  <h3 style={{ paddingTop: 11, fontWeight: \"bold\" }}>\n                    Join A Group\n                  </h3>\n                </Link>\n              </div>\n            </Box>\n          </div>\n          {groupNameTextboxArr !== undefined &&\n          filteredStudentGroups !== undefined &&\n          groupNameTextboxArr.length === filteredStudentGroups.length ? (\n            <div style={{ display: \"contents\" }}>\n              {filteredStudentGroups.map((group, i) => (\n                <div style={{ padding: \"0.5% 0.5%\" }}>\n                  {archivedGroups !== undefined &&\n                  archivedGroups !== null &&\n                  !archivedGroups.includes(group.groupId) ? (\n                    <Card\n                      className={classes.root}\n                      style={{\n                        width: \"100%\",\n                        display: \"table\",\n                        // minWidth: \"25%\",\n                        // margin: \"0% 10% 10%\",\n                      }}\n                    >\n                      <div>\n                        <Tooltip\n                          title={<em>{\"Click here to archive the group\"}</em>}\n                        >\n                          <Link\n                            onClick={() => {\n                              archiveGroup(group.groupId);\n                            }}\n                            style={{\n                              position: \"absolute\",\n                              borderRadius: \"10px\",\n                              boxShadow: \"grey 2px 2px 5px\",\n                            }}\n                          >\n                            <ArchiveIcon />\n                          </Link>\n                        </Tooltip>\n                        <div style={{ clear: \"both\" }} />\n                        <div className=\"cardRow\">\n                          <CardContent className={classes.cardColumn}>\n                            <Typography\n                              gutterBottom\n                              variant=\"h5\"\n                              component=\"h2\"\n                              style={{\n                                backgroundColor: \"#80808026\",\n                                padding: \"2%\",\n                                overflow: \"auto\",\n                                minWidth: \"250px !important\",\n                              }}\n                            >\n                              #{groupNameTextboxArr[i].groupId} -{\" \"}\n                              <input\n                                type=\"text\"\n                                disabled={groupNameTextboxArr[i].disable}\n                                value={groupNameTextboxArr[i].val}\n                                onChange={editGroupName}\n                                onKeyDown={(e) => {\n                                  try {\n                                    let keypress = e.code;\n                                    if (keypress === \"Escape\") {\n                                      undoGroupRename(i);\n                                    }\n                                  } catch {}\n                                }}\n                                readOnly={groupNameTextboxArr[i].readOnly}\n                                size={groupNameTextboxArr[i].val.length - 2}\n                                style={\n                                  groupNameTextboxArr[i].readOnly === false\n                                    ? {\n                                        padding: \"4px 4px 4px 4px\",\n                                        borderRadius: \"4px\",\n                                        outline: \"none\",\n                                        border: \"1px solid #da337a\",\n                                        boxShadow: \"0px 0px 8px #da337a\",\n                                        backgroundColor: \"initial !important\",\n                                      }\n                                    : {\n                                        width: \"50%\",\n                                        backgroundColor: \"initial\",\n                                      }\n                                }\n                              ></input>\n                              {groupNameTextboxArr[i].readOnly === true ? (\n                                <Link\n                                  onClick={() => {\n                                    enableGroupNameEdit(i);\n                                  }}\n                                >\n                                  <span\n                                    style={{ color: \"black\", float: \"right\" }}\n                                  >\n                                    <CreateIcon />\n                                  </span>\n                                </Link>\n                              ) : (\n                                <Link\n                                  onClick={() => {\n                                    updateGroupName(i);\n                                  }}\n                                >\n                                  <span\n                                    style={{ color: \"black\", float: \"right\" }}\n                                  >\n                                    <SaveIcon />\n                                  </span>\n                                </Link>\n                              )}\n                              {/* Undo group name */}\n                              {groupNameTextboxArr[i].allowUndo === true &&\n                              localStorage.getItem(\"originalGroupName\") !==\n                                groupNameTextboxArr[i].val ? (\n                                <span style={{ float: \"right\" }}>\n                                  <Link\n                                    onClick={() => {\n                                      undoGroupRename(i);\n                                    }}\n                                    class=\"undo_rename_glow\"\n                                  >\n                                    <UndoIcon />\n                                  </Link>\n                                </span>\n                              ) : (\n                                <span></span>\n                              )}\n                            </Typography>\n\n                            {show && (\n                              <div>\n                                Other Members:\n                                {Object.values(group.members).map(\n                                  (memId, i) => (\n                                    <div>\n                                      {memId !=\n                                      localStorage.getItem(\"studentId\") ? (\n                                        <div>\n                                          <div style={{ float: \"left\" }}>\n                                            <PersonIcon /> #\n                                            {memId + \", \" + getGMN(memId)}\n                                          </div>\n                                          {\"      \"}\n\n                                          <div style={{ float: \"right\" }}>\n                                            <Link\n                                              style={{\n                                                width: \"fit-content\",\n                                                float: \"right\",\n                                                display: \"inline\",\n                                                color: \"#DC3545\",\n                                              }}\n                                              onClick={() =>\n                                                removeStudentFromGroup(\n                                                  group.groupId,\n                                                  memId\n                                                )\n                                              }\n                                            >\n                                              <abbr title=\"Remove member\">\n                                                <RemoveCircleOutlineIcon />\n                                              </abbr>\n                                            </Link>\n                                          </div>\n                                          <div style={{ clear: \"both\" }}></div>\n                                        </div>\n                                      ) : (\n                                        <div></div>\n                                      )}\n                                    </div>\n                                  )\n                                )}\n                                {group.members.length > 2 ? (\n                                  <Button\n                                    variant=\"contained\"\n                                    style={{\n                                      // width: \"fit-content\",\n                                      boxShadow: \"5px 5px 5px 0 #bbb\",\n                                      backgroundColor: \"#DC3545\",\n                                      color: \"white\",\n                                      float: \"right\",\n                                    }}\n                                    onClick={() =>\n                                      removeAllOtherMembersFromGroup(\n                                        group.groupId\n                                      )\n                                    }\n                                  >\n                                    Remove All Members\n                                  </Button>\n                                ) : (\n                                  <div></div>\n                                )}\n                              </div>\n                            )}\n                          </CardContent>\n\n                          {show && (\n                            <div>\n                              <div style={{ clear: \"both\" }} />\n\n                              <div>\n                                <CardActions style={{ float: \"left\" }}>\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"secondary\"\n                                    style={\n                                      group.members.length > 1\n                                        ? {\n                                            float: \"left\",\n                                            minWidth: \"20px\",\n                                            backgroundColor: \"green\",\n                                            opacity: \"0.4\",\n                                          }\n                                        : {\n                                            float: \"left\",\n                                            minWidth: \"20px\",\n                                            backgroundColor: \"green\",\n                                            opacity: \"1\",\n                                            boxShadow: \"5px 5px 5px 0 #bbb\",\n                                          }\n                                    }\n                                    onClick={() =>\n                                      deleteGroup(\n                                        group.groupId,\n                                        group.members.length\n                                      )\n                                    }\n                                    disabled={\n                                      group.members.length > 1 ? true : false\n                                    }\n                                  >\n                                    <DeleteIcon />\n                                  </Button>\n                                </CardActions>\n\n                                <CardActions\n                                  style={{\n                                    float: \"right\",\n                                  }}\n                                >\n                                  <Button\n                                    variant=\"contained\"\n                                    style={{\n                                      // width: \"fit-content\",\n                                      boxShadow: \"5px 5px 5px 0 #bbb\",\n                                      backgroundColor: \"#DC3545\",\n                                      color: \"white\",\n                                    }}\n                                    onClick={() =>\n                                      removeStudentFromGroup(\n                                        group.groupId,\n                                        localStorage.getItem(\"studentId\")\n                                      )\n                                    }\n                                  >\n                                    Leave Group\n                                  </Button>\n\n                                  <Button\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    style={{\n                                      // width: \"fit-content\"\n                                      boxShadow: \"5px 5px 5px 0 #bbb\",\n                                    }}\n                                    onClick={() => {\n                                      openAddMemberModal(\n                                        group.groupId,\n                                        group.groupName\n                                      );\n                                    }}\n                                  >\n                                    Add Member\n                                  </Button>\n                                </CardActions>\n                              </div>\n                            </div>\n                          )}\n                        </div>\n                      </div>\n                      <div></div>\n                    </Card>\n                  ) : (\n                    <div>\n                      {archivedGroups === undefined &&\n                      archivedGroups === null &&\n                      !archivedGroups.includes(group.groupId) ? (\n                        <Card\n                          className={classes.root}\n                          style={{\n                            width: \"100%\",\n                            display: \"table\",\n                            // minWidth: \"25%\",\n                            // margin: \"0% 10% 10%\",\n                          }}\n                        >\n                          <div>\n                            <Tooltip\n                              title={\n                                <em>{\"Click here to archive the group\"}</em>\n                              }\n                            >\n                              <Link\n                                onClick={() => {\n                                  archiveGroup(group.groupId);\n                                }}\n                                style={{ position: \"absolute\" }}\n                              >\n                                <ArchiveIcon />\n                              </Link>\n                            </Tooltip>\n                            <div style={{ clear: \"both\" }} />\n                            <div className=\"cardRow\">\n                              <CardContent className={classes.cardColumn}>\n                                <Typography\n                                  gutterBottom\n                                  variant=\"h5\"\n                                  component=\"h2\"\n                                  style={{\n                                    backgroundColor: \"#80808026\",\n                                    padding: \"2%\",\n                                    overflow: \"auto\",\n                                    minWidth: \"250px !important\",\n                                  }}\n                                >\n                                  #{groupNameTextboxArr[i].groupId} -{\" \"}\n                                  <input\n                                    type=\"text\"\n                                    disabled={groupNameTextboxArr[i].disable}\n                                    value={groupNameTextboxArr[i].val}\n                                    onChange={editGroupName}\n                                    readOnly={groupNameTextboxArr[i].readOnly}\n                                    size={groupNameTextboxArr[i].val.length - 2}\n                                    style={\n                                      groupNameTextboxArr[i].readOnly === false\n                                        ? {\n                                            padding: \"4px 4px 4px 4px\",\n                                            borderRadius: \"4px\",\n                                            outline: \"none\",\n                                            border: \"1px solid #da337a\",\n                                            boxShadow: \"0px 0px 8px #da337a\",\n                                            backgroundColor:\n                                              \"initial !important\",\n                                          }\n                                        : {\n                                            width: \"50%\",\n                                            backgroundColor: \"initial\",\n                                          }\n                                    }\n                                  ></input>\n                                  {groupNameTextboxArr[i].readOnly === true ? (\n                                    <Link\n                                      onClick={() => {\n                                        enableGroupNameEdit(i);\n                                      }}\n                                    >\n                                      <span\n                                        style={{\n                                          color: \"black\",\n                                          float: \"right\",\n                                        }}\n                                      >\n                                        <CreateIcon />\n                                      </span>\n                                    </Link>\n                                  ) : (\n                                    <Link\n                                      onClick={() => {\n                                        updateGroupName(i);\n                                      }}\n                                    >\n                                      <span\n                                        style={{\n                                          color: \"black\",\n                                          float: \"right\",\n                                        }}\n                                      >\n                                        <SaveIcon />\n                                      </span>\n                                    </Link>\n                                  )}\n                                  {/* Undo group name */}\n                                  {groupNameTextboxArr[i].allowUndo === true &&\n                                  localStorage.getItem(\"originalGroupName\") !==\n                                    groupNameTextboxArr[i].val ? (\n                                    <span style={{ float: \"right\" }}>\n                                      <Link\n                                        onClick={() => {\n                                          undoGroupRename(i);\n                                        }}\n                                      >\n                                        <UndoIcon />\n                                      </Link>\n                                    </span>\n                                  ) : (\n                                    <span></span>\n                                  )}\n                                </Typography>\n\n                                {show && (\n                                  <div>\n                                    Other Members:\n                                    {Object.values(group.members).map(\n                                      (memId, i) => (\n                                        <div>\n                                          {memId !=\n                                          localStorage.getItem(\"studentId\") ? (\n                                            <div>\n                                              <div style={{ float: \"left\" }}>\n                                                <PersonIcon /> #\n                                                {memId + \", \" + getGMN(memId)}\n                                              </div>\n                                              {\"      \"}\n\n                                              <div style={{ float: \"right\" }}>\n                                                <Link\n                                                  style={{\n                                                    width: \"fit-content\",\n                                                    float: \"right\",\n                                                    display: \"inline\",\n                                                    color: \"#DC3545\",\n                                                  }}\n                                                  onClick={() =>\n                                                    removeStudentFromGroup(\n                                                      group.groupId,\n                                                      memId\n                                                    )\n                                                  }\n                                                >\n                                                  <abbr title=\"Remove member\">\n                                                    <RemoveCircleOutlineIcon />\n                                                  </abbr>\n                                                </Link>\n                                              </div>\n                                              <div\n                                                style={{ clear: \"both\" }}\n                                              ></div>\n                                            </div>\n                                          ) : (\n                                            <div></div>\n                                          )}\n                                        </div>\n                                      )\n                                    )}\n                                  </div>\n                                )}\n                              </CardContent>\n\n                              {show && (\n                                <div>\n                                  <div style={{ clear: \"both\" }} />\n\n                                  <div>\n                                    <CardActions style={{ float: \"left\" }}>\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"secondary\"\n                                        style={\n                                          group.members.length > 1\n                                            ? {\n                                                float: \"left\",\n                                                minWidth: \"20px\",\n                                                backgroundColor: \"green\",\n                                                opacity: \"0.4\",\n                                              }\n                                            : {\n                                                float: \"left\",\n                                                minWidth: \"20px\",\n                                                backgroundColor: \"green\",\n                                                opacity: \"1\",\n                                                boxShadow: \"5px 5px 5px 0 #bbb\",\n                                              }\n                                        }\n                                        onClick={() =>\n                                          deleteGroup(\n                                            group.groupId,\n                                            group.members.length\n                                          )\n                                        }\n                                        disabled={\n                                          group.members.length > 1\n                                            ? true\n                                            : false\n                                        }\n                                      >\n                                        <DeleteIcon />\n                                      </Button>\n                                    </CardActions>\n\n                                    <CardActions\n                                      style={{\n                                        float: \"right\",\n                                      }}\n                                    >\n                                      <Button\n                                        variant=\"contained\"\n                                        style={{\n                                          // width: \"fit-content\",\n                                          boxShadow: \"5px 5px 5px 0 #bbb\",\n                                          backgroundColor: \"#DC3545\",\n                                          color: \"white\",\n                                        }}\n                                        onClick={() =>\n                                          removeStudentFromGroup(\n                                            group.groupId,\n                                            localStorage.getItem(\"studentId\")\n                                          )\n                                        }\n                                      >\n                                        Leave Group\n                                      </Button>\n\n                                      <Button\n                                        variant=\"contained\"\n                                        color=\"primary\"\n                                        style={{\n                                          // width: \"fit-content\"\n                                          boxShadow: \"5px 5px 5px 0 #bbb\",\n                                        }}\n                                        onClick={() => {\n                                          openAddMemberModal(\n                                            group.groupId,\n                                            group.groupName\n                                          );\n                                        }}\n                                      >\n                                        Add Member\n                                      </Button>\n                                    </CardActions>\n                                  </div>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                          <div></div>\n                        </Card>\n                      ) : (\n                        <div></div>\n                      )}\n                    </div>\n                  )}\n                </div>\n              ))}\n            </div>\n          ) : (\n            <div></div>\n          )}\n        </div>\n      </div>\n      <Dialog\n        open={addMemberModalIsOpen}\n        onClose={() => {\n          closeAddMemberModal();\n        }}\n        fullWidth={300}\n      >\n        <DialogTitle>\n          <Typography\n            gutterBottom\n            variant=\"h5\"\n            component=\"h2\"\n            style={{\n              backgroundColor: \"#80808026\",\n              padding: \"2%\",\n              overflow: \"auto\",\n            }}\n          >\n            <div>\n              Add Members for Group #{addMemberModalGroupId}:{\" \"}\n              {addMemberModalGroupName}\n            </div>\n          </Typography>\n        </DialogTitle>\n        <DialogContent>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <div style={{ marginBottom: 30 }}>\n              <div style={{ marginBottom: 10 }}>\n                Share the following URL to your group mates to invite them to\n                the group\n              </div>\n              <div style={{ display: \"flex\", flexDirection: \"row\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                  }}\n                >\n                  <input\n                    style={{\n                      flexGrow: 1,\n                      marginRight: 20,\n                      padding: \"4px 4px 4px 4px\",\n                      borderRadius: \"4px\",\n                      outline: \"none\",\n                      border: \"1px solid\",\n                      backgroundColor: \"lightGray\",\n                    }}\n                    value={\n                      windowLocationHost + \"/JoinGroup/\" + addMemberModalGroupId\n                    }\n                    onFocus={(event) => {\n                      event.target.select();\n                    }}\n                  ></input>\n                  <CopyToClipboard\n                    text={\n                      \"Use the link to join my MixTime Group\" +\n                      \"\\n\" +\n                      windowLocationHost +\n                      \"/JoinGroup/\" +\n                      addMemberModalGroupId\n                    }\n                    onCopy={() => {\n                      toast.success(\"The sharing link has been copied\");\n                      setLinkCopied(true);\n                    }}\n                  >\n                    <div>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{\n                          width: \"fit-content\",\n                          boxShadow: \"5px 5px 5px 0 #bbb\",\n                        }}\n                      >\n                        Copy To Clipboard\n                      </Button>\n                    </div>\n                  </CopyToClipboard>\n                </div>\n              </div>\n            </div>\n\n            <div\n              style={{\n                marginBottom: 30,\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <div\n                style={{\n                  marginRight: 15,\n                }}\n              >\n                Share Via:\n              </div>\n              <div\n                style={{\n                  marginRight: 15,\n                }}\n              >\n                <WhatsappShareButton\n                  style={{\n                    borderRadius: \"32px\",\n                    boxShadow: \"3px 3px 3px 0 #bbb\",\n                  }}\n                  url={\n                    \"Use the link to join my MixTime Group\" +\n                    \"\\n\" +\n                    windowLocationHost +\n                    \"/JoinGroup/\" +\n                    addMemberModalGroupId\n                  }\n                >\n                  <WhatsappIcon size={32} round={true} />\n                </WhatsappShareButton>\n              </div>\n              <div\n                style={{\n                  marginRight: 15,\n                }}\n              >\n                <TelegramShareButton\n                  style={{\n                    borderRadius: \"32px\",\n                    boxShadow: \"3px 3px 3px 0 #bbb\",\n                  }}\n                  url={\n                    \"Use the link to join my MixTime Group\" +\n                    \"\\n\" +\n                    windowLocationHost +\n                    \"/JoinGroup/\" +\n                    addMemberModalGroupId\n                  }\n                >\n                  <TelegramIcon size={32} round={true} />\n                </TelegramShareButton>\n              </div>\n              {/*\n              <div\n                style={{\n                  marginRight: 15,\n                }}\n              >\n                <EmailShareButton\n                  url={\n                    \"Use the link to join my MixTime Group\" +\n                    \"\\n\" +\n                    windowLocationHost +\n                    \"/JoinGroup/\" +\n                    addMemberModalGroupId\n                  }\n                  subject={\"Join me on MixTime\"}\n                  body={\n                    \"Use the link to join my MixTime Group\" +\n                    \"\\n\" +\n                    windowLocationHost +\n                    \"/JoinGroup/\" +\n                    addMemberModalGroupId\n                  }\n                  separator={\" \"}\n                >\n                  <EmailIcon size={32} round={true} />\n                </EmailShareButton>\n              </div>\n            */}\n            </div>\n\n            <div style={{ marginBottom: 30 }}>\n              Current Members:\n              {groupMembers ? JSON.stringify(groupMembers) : \"beep\"}\n            </div>\n\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                alignItems: \"center\",\n              }}\n            >\n              <div style={{}}>Enter member ID: </div>\n              <input\n                type=\"text\"\n                placeholder=\"Enter Group Member ID to add\"\n                style={{\n                  flexGrow: 1,\n                  marginLeft: 20,\n                  marginRight: 20,\n                  padding: \"4px 4px 4px 4px\",\n                  borderRadius: \"4px\",\n                  outline: \"none\",\n                  border: \"1px solid #da337a\",\n                  backgroundColor: \"initial !important\",\n                  boxShadow: \"0 0 8px 0 #da337a\",\n                }}\n                value={modalMemberId}\n                onChange={(e) => {\n                  handleChangeAddMemberModal(e);\n                  // setModalMemberId(e.target.value);\n                }}\n              ></input>\n              <Button\n                disabled={addMemberDisabled === true ? true : false}\n                variant=\"contained\"\n                color=\"primary\"\n                style={{\n                  width: \"fit-content\",\n                  boxShadow:\n                    addMemberDisabled === true ? \"\" : \"5px 5px 5px 0 #bbb\",\n                }}\n                onClick={() => {\n                  addMemberToGroupUsingModal();\n                }}\n              >\n                Add Member\n              </Button>\n            </div>\n            <div>Note: You do not need to add your own ID.</div>\n            <div>\n              Your ID is displayed on the top right hand corner beside your\n              name.\n            </div>\n          </div>\n        </DialogContent>\n      </Dialog>\n    </Paper>\n  );\n}\n\nexport default GroupManagement;\n","import { React } from \"react\";\nimport { Button } from \"@material-ui/core\";\n\nfunction Body(props) {\n\n  return (\n    <div\n      style={{\n        textAlign: \"center\",\n        display: \"flex\",\n        flexDirection: \"column\",\n        height: \"100%\",\n        wigth: \"100%\",\n      }}\n    >\n      <div\n        style={{\n          marginTop: 50,\n        }}\n      >\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            if (props.getUsers !== undefined) {\n              props.getUsers();\n            } else console.log(\"lmao it didnt work\");\n          }}\n        >\n          Get user information from firebase\n        </Button>\n      </div>\n      <div>\n        {props.userList && props.userList.length > 0 ? (\n          props.userList.map((val) => {\n            return <div>{JSON.stringify(val)}</div>;\n          })\n        ) : (\n          <div></div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","// converts valid NUSMODS timetable into a 2d array of mods and slots\n// throws error message --> Should catch in parent\nexport const convertURLtoArray = (URL) => {\n  // validation for URL to ensure its the right URL\n  if (\n    // Checks is NUSMods Timetable URL\n    URL.includes(\"https://nusmods.com/timetable/\") &&\n    // Checks if its NUSMods Sharing URL\n    URL.includes(\"/share?\") &&\n    // Ensure that there are modules to be added\n    URL.split(\"?\")[1] !== undefined\n  ) {\n    let split = URL.split(\"?\")[1];\n    if (!split) {\n      return [];\n    }\n    let mods = URL.split(\"?\")[1];\n\n    // formats url into array of module codes and slots into a single string\n    // [\"ACC3619=SEC:A3\", \"GES1041=TUT:D6,LEC:1\", \"IS4100=TUT:2,LEC:1\", \"IS4234=TUT:2,LEC:1\", \"IS4261=LEC:1\"]\n    let modsArray = mods.split(\"&\");\n\n    // breaks previous array into sub arrays where each array has [0] being module code, [>0] being slots taken\n    // 00: (2) [\"ACC3619\", \"SEC:A3\"]\n    // 01: (3) [\"GES1041\", \"TUT:D6\", \"LEC:1\"]\n    // 02: (3) [\"IS4100\", \"TUT:2\", \"LEC:1\"]\n    // 03: (3) [\"IS4234\", \"TUT:2\", \"LEC:1\"]\n    // 04: (2) [\"IS4261\", \"LEC:1\"]\n    return modsArray.map((mod) => {\n      return mod.split(/=|,/);\n    });\n  } else {\n    console.log(\"Invalid URL entered\");\n    throw \"Invalid URL entered\";\n  }\n};\n\n// uses  arry of modandclasses: [\"ACC3619\", \"SEC:A3\"]\n// and correct specific class details from nusmods to find the correct time slot\n// returns [{moduleCode, lessonType, startTime, endTime, weeks, day}]\nexport const findCorrectTimeslot = (\n  modAndClass,\n  specificClassDetails,\n  semester\n) => {\n  // removes module code\n  let correctTimeSlots = modAndClass.slice(1).map((classSlot, index) => {\n    // obtain \"SEC\" \"A3\" from mod and class array\n    let typeAndSlot = classSlot.split(\":\");\n    let semesterSpecificTimetable;\n\n    specificClassDetails.semesterData.forEach((semesterData) => {\n      // check data for correct semester information\n      if (semesterData.semester === semester) {\n        semesterSpecificTimetable = semesterData.timetable;\n      }\n    });\n\n    // console.log(typeAndSlot);\n    // console.log(semesterSpecificTimetable);\n\n    let correctTimeSlot;\n    if (semesterSpecificTimetable === undefined) {\n      correctTimeSlot = [];\n    } else {\n      semesterSpecificTimetable.forEach((classTimeTable) => {\n        // compares LEC with lecture\n        // compares SEC with sectional\n        // compares TUT with tutorial\n        // compares LAB with laboratory\n        if (\n          JSON.stringify(classTimeTable.lessonType)\n            .substring(1, 4)\n            .toLowerCase() ===\n            JSON.stringify(typeAndSlot[0]).substring(1, 4).toLowerCase() &&\n          classTimeTable.classNo === typeAndSlot[1]\n        ) {\n          if (\n            classTimeTable.lessonType !== undefined &&\n            classTimeTable.startTime !== undefined &&\n            classTimeTable.endTime !== undefined &&\n            classTimeTable.weeks !== undefined &&\n            classTimeTable.day !== undefined\n          ) {\n            correctTimeSlot = {\n              moduleCode: modAndClass[0],\n              lessonType: classTimeTable.lessonType,\n              startTime: classTimeTable.startTime,\n              endTime: classTimeTable.endTime,\n              weeks: classTimeTable.weeks,\n              day: classTimeTable.day,\n            };\n          }\n        }\n      });\n    }\n    return correctTimeSlot;\n  });\n  //console.log(correctTimeSlots)\n  return correctTimeSlots;\n};\n\n// week 1 day 1: Mon 11 Jan 2021\nexport const convertWeekDayTimeToTimestamp = (weekNumber, day, time) => {\n  let basedate = new Date(\"Jan 11 2021 0:00 GMT+8\");\n  // map accomodate for lowercase first letter as well incase of formatting issue on NUSMODs api\n  let dayMap = {\n    Monday: 0,\n    monday: 0,\n    Tuesday: 1,\n    tuesday: 1,\n    Wednesday: 2,\n    wednesday: 2,\n    Thursday: 3,\n    thursday: 3,\n    Friday: 4,\n    friday: 4,\n    Saturday: 5,\n    saturday: 5,\n    Sunday: 6,\n    sunday: 6,\n  };\n  // setting days, accounting for recess week\n  if (weekNumber > 6) {\n    basedate.setDate(basedate.getDate() + 7 * weekNumber + dayMap[day]);\n  } else {\n    basedate.setDate(basedate.getDate() + 7 * (weekNumber - 1) + dayMap[day]);\n  }\n\n  let hoursOffset = time.substring(0, 2);\n  let minutesOffset = time.substring(2, 4);\n  // convert time into minutes then find number of milliseconds total (60,000 ms/min)\n  let timeoffset =\n    (parseInt(hoursOffset) * 60 + parseInt(minutesOffset)) * 60000;\n  var calculatedDate = new Date(basedate.getTime() + timeoffset);\n\n  // console.log(calculatedDate);\n  return calculatedDate.getTime();\n};\n","import {React, Fragment, useState, useEffect} from 'react';\nimport { Button, Input } from \"@material-ui/core\";\n\nimport Body from './Body';\nimport {\n  convertURLtoArray,\n  findCorrectTimeslot,\n  convertWeekDayTimeToTimestamp,\n} from '../Functions/urlFunctions.js';\nimport {getModDetails} from '../Functions/apiFunctions.js';\nimport { useDatabase } from \"../Contexts/DatabaseContext\";\n\nfunction UserProfile(props) {\n  const database = useDatabase();\n  const [userList, setUserList] = useState({});\n  const [enteredURL, setEnteredURL] = useState('');\n  const [errorMessage, setErrorMessage] = useState('');\n  // Array which contains array of classes and slots occupied for the module\n  // 00: (2) [\"ACC3619\", \"SEC:A3\"]\n  // 01: (3) [\"GES1041\", \"TUT:D6\", \"LEC:1\"]\n  // 02: (3) [\"IS4100\", \"TUT:2\", \"LEC:1\"]\n  // 03: (3) [\"IS4234\", \"TUT:2\", \"LEC:1\"]\n  // 04: (2) [\"IS4261\", \"LEC:1\"]\n  const [modAndClassArray, setModAndClassArray] = useState([]);\n  // Array which contains resolved promises with either details of the module in .value or error message in .reason\n  const [modAndClassDetails, setModAndClassDetails] = useState([]);\n\n  // Contains user event array\n  const [userEventArray, setUserEventArray] = useState([]);\n\n  // hard coded  value until we find a way to properly implement semester recording\n  const [currentSemester] = useState(2);\n\n  // checker to see if api is set, can be removed later on\n  useEffect(() => {\n    // console.log(modAndClassArray);\n    // console.log(modAndClassDetails);\n    // console.log(userEventArray);\n  }, [modAndClassDetails, userEventArray]);\n\n  // waits for response and sets\n  const getModuleDetails = async () => {\n    let apiPromises = modAndClassArray.map(modAndClasses => {\n      // only need module code for api to ping details\n      // safeguard for button\n      if (\n        modAndClasses &&\n        modAndClasses.length > 0 &&\n        modAndClasses[0].length > 0\n      ) {\n        return getModDetails(modAndClasses[0]);\n      } else {\n        console.log('no timetable loaded');\n        return null;\n      }\n    });\n    // .allSettled() used instead of .all()\n    // allowed failed requests to go through but prevents immediate failure\n    // additional implmentation to catch errors is required\n    Promise.allSettled(apiPromises).then(details => {\n      setModAndClassDetails(details);\n    });\n  };\n\n  // user modAndClassArray and modAndClassDetails to parse the timetable into an array of events\n  const convertModsIntoEvents = () => {\n    // parses for each mod\n    let timeslotArray = modAndClassArray.map(modAndClass => {\n      let specificClassDetails;\n      modAndClassDetails.forEach(modAndClassDetail => {\n        if (\n          JSON.stringify(modAndClassDetail.status) === '\"fulfilled\"' &&\n          JSON.stringify(modAndClassDetail.value.moduleCode) ===\n            JSON.stringify(modAndClass[0])\n        ) {\n          specificClassDetails = modAndClassDetail.value;\n        }\n      });\n      // converts the unparsed data into timeslots\n      let correctTimeSlots = undefined;\n      if (specificClassDetails !== undefined) {\n        correctTimeSlots = findCorrectTimeslot(\n          modAndClass,\n          specificClassDetails,\n          currentSemester,\n        );\n      }\n      return correctTimeSlots;\n    });\n\n    let newtimeslotArray = [];\n    timeslotArray.forEach(events => {\n      if (events !== undefined) {\n        newtimeslotArray.push(...events);\n      }\n    });\n    let newEventArray = [];\n    newtimeslotArray.forEach(timeslot => {\n      if (\n        timeslot !== undefined &&\n        timeslot.weeks !== undefined &&\n        timeslot.day !== undefined &&\n        timeslot.endTime !== undefined\n      ) {\n        timeslot.weeks.forEach(week => {\n          let startTimestamp = convertWeekDayTimeToTimestamp(\n            week,\n            timeslot.day,\n            timeslot.startTime,\n          );\n          let endTimestamp = convertWeekDayTimeToTimestamp(\n            week,\n            timeslot.day,\n            timeslot.endTime,\n          );\n          newEventArray.push({\n            name: timeslot.moduleCode,\n            eventType: timeslot.lessonType,\n            startTime: startTimestamp,\n            endTime: endTimestamp,\n          });\n        });\n      }\n    });\n\n    // console.log(newEventArray);\n    // console.log(newtimeslotArray);\n\n    setUserEventArray(newEventArray);\n  };\n\n  let getUsers = () => {\n    var usersRef = database.ref('users/');\n    usersRef.once('value').then(snapshot => {\n      snapshot.val() ? setUserList(snapshot.val()) : console.log('missing');\n    });\n  };\n\n  return (\n    <Fragment>\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'column',\n          height: '100%',\n          wigth: '100%',\n          padding: '2%',\n        }}>\n        User Profile\n      </div>\n\n      <Body getUsers={getUsers} userList={userList} />\n\n      <div>entered URL : {enteredURL}</div>\n      <div\n        style={{\n          textAlign: 'center',\n          display: 'flex',\n          flexDirection: 'row',\n          marginTop: 50,\n        }}>\n        Enter URL:\n        <div style={{color: 'red'}}>{errorMessage}</div>\n        <Input\n          style={{width: 300}}\n          value={enteredURL}\n          onChange={e => {\n            setEnteredURL(e.target.value);\n            setErrorMessage('');\n          }}></Input>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            // catches invalid URLs\n            try {\n              setModAndClassArray(convertURLtoArray(enteredURL));\n            } catch (error) {\n              setErrorMessage(error);\n            }\n          }}>\n          parse timetable\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            // catches api catastrophic api errors, though it should never be triggered as there promise.allSettled helps handle Errors\n            try {\n              getModuleDetails();\n            } catch (error) {\n              setErrorMessage(error);\n            }\n          }}>\n          Ping timetable\n        </Button>\n        <Button\n          variant=\"contained\"\n          onClick={() => {\n            // catches invalid URLs\n            try {\n              convertModsIntoEvents();\n            } catch (error) {\n              setErrorMessage(error);\n            }\n          }}>\n          Find occupied time\n        </Button>\n      </div>\n\n      {/* Currently displays the pulled data of all time slots, can cleanup for less mess */}\n      <div style={{marginTop: 100}}>\n        [\n        {userEventArray && userEventArray.length > 1\n          ? userEventArray.map(events => {\n              return (\n                <div>\n                  <div>{JSON.stringify(events)},</div>\n                </div>\n              );\n            })\n          : ''}\n        ]\n      </div>\n    </Fragment>\n  );\n}\n\nexport default UserProfile;\n","import React from \"react\";\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nimport \"./timetable.css\";\n\nconst Legend = () => {\n  return (\n    <div>\n      <div className=\"center\">\n        Colour Legend\n        <Tooltip\n          title={\n            <div>\n              <em style={{ fontSize: \"12px\" }}>{\"What is this?\"}</em>\n              <p></p>\n              <em style={{ fontSize: \"12px\" }}>\n                {\n                  \"Each timeblock in your personal timetable will have their respective colour representation depending on the type of event.\"\n                }\n              </em>\n            </div>\n          }\n        >\n          <IconButton aria-label=\"delete\">\n            <HelpIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n      </div>\n      <table style={{ display: \"flex\" }}>\n        <tbody>\n          <tr>\n            <th style={{ background: \"#FDDFDF\", color: \"#000000\" }}>Lecture</th>\n            <th style={{ background: \"#F0DEFD\", color: \"#000000\" }}>\n              Tutorial\n            </th>\n            <th style={{ background: \"#DEFDE0\", color: \"#000000\" }}>Private</th>\n            <th style={{ background: \"#DEF3FD\", color: \"#000000\" }}>Others</th>\n            <th\n              style={{\n                background: \"#FFFFFF\",\n                color: \"#000000\",\n                border: \"1px solid lightgrey\",\n              }}\n            >\n              Available\n            </th>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  );\n};\n\nexport default Legend;\n","export default __webpack_public_path__ + \"static/media/ImportURL.c37dbb9a.mp4\";","export default __webpack_public_path__ + \"static/media/CreateGroup.a28e0f86.mp4\";","import { React, useState, useEffect } from \"react\";\nimport Modal from \"react-bootstrap/Modal\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\n// import \"./Stylesheet/Layout.css\";\n\nimport {\n  Button,\n  OutlinedInput,\n  Stepper,\n  Step,\n  StepLabel,\n  Typography,\n} from \"@material-ui/core\";\n\nimport urlTut from \"./tutorialGIFs/ImportURL.mp4\";\nimport groupTut from \"./tutorialGIFs/CreateGroup.mp4\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { ChangeHistoryOutlined } from \"@material-ui/icons\";\n\n//Toast\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { useDatabase } from \"../Contexts/DatabaseContext\";\n\nexport function UserLogin(props) {\n  const [refreshKey, setRefreshKey] = useState(0);\n  const [studentName, setStudentName] = useState(\n    localStorage.getItem(\"studentName\")\n  );\n  const [studentId, setStudentId] = useState(localStorage.getItem(\"studentId\"));\n  const [show, setShow] = useState(false);\n  const handleClose = () => setShow(false);\n  const handleShow = () => setShow(true);\n\n  //Stepper consts\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n    },\n    backButton: {\n      marginRight: theme.spacing(1),\n      boxShadow: \"grey 5px 5px 5px 0px\",\n    },\n\n    nextButton: {\n      boxShadow: \"grey 5px 5px 5px 0px\",\n    },\n\n    instructions: {\n      marginTop: theme.spacing(1),\n      marginBottom: theme.spacing(1),\n    },\n  }));\n\n  const database = useDatabase();\n\n  const classes = useStyles();\n  const [activeStep, setActiveStep] = useState(0);\n  const steps = getSteps();\n\n  const handleNext = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\n  };\n\n  const handleBack = () => {\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\n  };\n\n  const handleReset = () => {\n    setActiveStep(0);\n  };\n\n  //Step Title\n  function getSteps() {\n    return [\n      \"Enter Your MixTime Username\",\n      \"Importing Your NUSMods Timetable\",\n      \"Forming A MixTime Group\",\n    ];\n  }\n\n  function userNameModal() {\n    return (\n      <div>\n        <p>\n          It seems like this is the first time here. Please enter your name to\n          begin.\n        </p>\n        <div>\n          Enter Your Name:\n          <OutlinedInput\n            required\n            placeholder={\"e.g, John Doe\"}\n            defaultValue={localStorage.getItem(\"inputName\")}\n            autoFocus={\n              typeof localStorage.getItem(\"inputName\") !== \"undefined\" &&\n              localStorage.getItem(\"inputName\") !== null &&\n              localStorage.getItem(\"inputName\") !== \"\"\n                ? true\n                : false\n            }\n            style={{\n              width: 300,\n              marginLeft: 30,\n              marginRight: 30,\n              marginTop: 20,\n              boxShadow: \"0px 0px 8px #da337a\",\n            }}\n            onChange={(name) => {\n              localStorage.setItem(\"inputName\", name.target.value);\n            }}\n          ></OutlinedInput>\n          <div>\n            <Button disabled className={classes.backButton}>\n              Back\n            </Button>\n\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.nextButton}\n              onClick={() => {\n                var value = localStorage.getItem(\"inputName\");\n                if (\n                  typeof value !== \"undefined\" &&\n                  value !== null &&\n                  value !== \"\"\n                ) {\n                  dismissAll();\n                  handleNext();\n                } else {\n                  notify();\n                }\n              }}\n            >\n              {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n            </Button>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  function importTimetableModal() {\n    return (\n      <div>\n        <p>\n          You <b>must</b> import your NUSMods timetable into MixTime, to see it\n          on your MixTime timetable page.\n        </p>\n        <br></br>\n        <p>\n          To <b>import your timetable</b>, follow these steps:\n        </p>\n        <ol>\n          <li>1. Click on the \"Share/Sync\" button.</li>\n          <li>2. Click on the Copy icon.</li>\n          <li>3. Paste your link into our URL text-box below.</li>\n          <li>4. Click on the Update Timetable button.</li>\n          <li>\n            5. Your timetable has been successfully added. You can see it from\n            the \"My Timetable\" tab.\n          </li>\n        </ol>\n        <br></br>\n        <p>\n          See video <b>here</b> for steps:\n        </p>\n        <video controls>\n          <source src={urlTut} type=\"video/mp4\" />\n        </video>\n\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleBack}\n            className={classes.backButton}\n          >\n            Back\n          </Button>\n\n          <Button\n            className={classes.nextButton}\n            variant=\"contained\"\n            color=\"primary\"\n            onClick={handleNext}\n          >\n            {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  function createGroup() {\n    return (\n      <div>\n        <div>\n          <p>\n            You can create a group on MixTime, by adding your group members\n            MixTime IDs. Your own ID is found on the top right corner of the\n            window.\n          </p>\n          <br></br>\n          <p>\n            To <b>create a group</b>, follow these steps:\n          </p>\n          <ol>\n            <li>1. Head over to the \"Manage Groups\" page.</li>\n            <li>2. Click on the (+) icon.</li>\n            <li>\n              3. A pop-up window will appear, enter your group name first.\n            </li>\n            <li>\n              4. Enter your group size (Note, the group size includes you).\n            </li>\n            <li>5. Enter your group members IDs.</li>\n          </ol>\n          <br></br>\n          <p>\n            See video <b>here</b> for steps:\n          </p>\n          <video controls>\n            <source src={groupTut} type=\"video/mp4\" />\n          </video>\n        </div>\n        <div>\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            disabled={activeStep === 0}\n            onClick={handleBack}\n            className={classes.backButton}\n          >\n            Back\n          </Button>\n\n          <Button\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.nextButton}\n            onClick={() => {\n              handleNext();\n              handleClose();\n              dismissAll();\n              createStudentId(localStorage.getItem(\"inputName\"));\n            }}\n          >\n            {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\n          </Button>\n        </div>\n      </div>\n    );\n  }\n\n  //Step Content\n  function getStepContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return userNameModal();\n      case 1:\n        return importTimetableModal();\n      case 2:\n        return createGroup();\n      default:\n        return userNameModal();\n    }\n  }\n\n  //Toast\n  const notify = () => {\n    toast.error(\"Please input a name!\", {\n      position: toast.POSITION.TOP_RIGHT,\n      toastId: \"001\",\n    });\n  };\n\n  const dismissAll = () => {\n    toast.dismiss();\n  };\n\n  useEffect(() => {\n    setRefreshKey(0);\n    if (localStorage.getItem(\"studentId\") == null) {\n      handleShow();\n    } else {\n      getStudentName(localStorage.getItem(\"studentId\"));\n    }\n  }, [refreshKey]);\n\n  let getStudentName = (studentId) => {\n    var studentsRef = database.ref(\n      `Students/${localStorage.getItem(\"studentId\")}/name`\n    );\n    studentsRef.once(\"value\").then((snapshot) => {\n      setStudentName(snapshot.val());\n    });\n  };\n\n  let createStudentId = (studentName) => {\n    console.log(\"studentName: \" + studentName);\n    var query = database.ref(\"Students/\").orderByKey();\n\n    console.log(\"1: \" + query);\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key;\n        setStudentId(parseInt(key) + 1);\n        localStorage.setItem(\"studentId\", parseInt(key) + 1);\n      });\n      createStudentRecord(studentName);\n    });\n  };\n\n  let createStudentRecord = (studentName) => {\n    var studentsRef = database.ref(`Students/`);\n    studentsRef\n      .child(localStorage.getItem(\"studentId\"))\n      .child(\"name\")\n      .set(studentName);\n    setRefreshKey(refreshKey + 1);\n    localStorage.setItem(\"studentName\", studentName);\n\n    if (props.triggerNameRefresh !== undefined) {\n      props.triggerNameRefresh();\n\n      toast.success(\"You have successfully signed up.\");\n    }\n  };\n\n  let inputStyle = {\n    variant: \"contained\",\n  };\n\n  return (\n    <Modal\n      show={show}\n      onHide={handleClose}\n      backdrop=\"static\"\n      keyboard={false}\n      {...props}\n      size=\"lg\"\n      aria-labelledby=\"contained-modal-title-vcenter\"\n      centered\n    >\n      <Modal.Header>\n        <Modal.Title id=\"contained-modal-title-vcenter\">\n          Welcome to MixTime!\n        </Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <div className={classes.root}>\n          <Stepper activeStep={activeStep} alternativeLabel>\n            {steps.map((label) => (\n              <Step key={label}>\n                <StepLabel>{label}</StepLabel>\n              </Step>\n            ))}\n          </Stepper>\n          <hr></hr>\n          <br></br>\n          <div>\n            {activeStep === steps.length ? (\n              <div></div>\n            ) : (\n              <div>\n                <Typography className={classes.instructions}>\n                  {getStepContent(activeStep)}\n                </Typography>\n              </div>\n            )}\n          </div>\n        </div>\n      </Modal.Body>\n    </Modal>\n  );\n}\n\nexport default UserLogin;\n","export default __webpack_public_path__ + \"static/media/FullImportStep.df2a478b.mp4\";","import { React, useState, useEffect } from \"react\";\nimport PNGtooltip from \"react-png-tooltip\";\nimport urlTut from \"./tutorialGIFs/FullImportStep.mp4\";\nimport OndemandVideoIcon from \"@material-ui/icons/OndemandVideo\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport \"./Stylesheet/Layout.css\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nexport function VisualTip(props) {\n  return (\n    <div>\n      <PNGtooltip\n        tooltip={<u class=\"confirm_selection\">What can I do here?</u>}\n      >\n        <div>\n          <p>\n            Follow this video to import your timetable. If you need more help,\n            visit our{\" \"}\n            <a href=\"./TutorialPage\">\n              <u>tutorial page</u>\n            </a>\n            .\n          </p>\n          <br></br>\n\n          <video autoPlay loop muted style={{ maxWidth: \"100%\" }}>\n            <source src={urlTut} type=\"video/mp4\" />\n          </video>\n        </div>\n      </PNGtooltip>\n    </div>\n  );\n}\n\nexport default VisualTip;\n","import { React, useState, useEffect } from \"react\";\nimport UserLogin from \"../UserLogin\";\n\nimport importURL from \"../tutorialGIFs/ImportURL.mp4\";\n\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport IconButton from \"@material-ui/core/IconButton\";\n\nimport VisualTip from \"../VisualTip\";\n\nimport {\n  convertURLtoArray,\n  findCorrectTimeslot,\n  convertWeekDayTimeToTimestamp,\n} from \"../../Functions/urlFunctions.js\";\n\nimport {\n  getModDetails,\n  addStudentEventsToDB,\n  overrideStudentEventsToDB,\n  loadTimetable,\n} from \"../../Functions/apiFunctions.js\";\n\nimport { useDatabase } from \"../../Contexts/DatabaseContext\";\nimport { useUpdateMyModules } from \"../../Contexts/MyModulesContext\";\n\nimport { Button, TextField } from \"@material-ui/core\";\nimport \"./timetable.css\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nconst exportLinkMessage = \"Export from NUSMods.com Share/Sync\";\n\nconst EnterURL = (props) => {\n  const database = useDatabase();\n  const updateMyModules = useUpdateMyModules();\n\n  const studentId = localStorage.getItem(\"studentId\");\n\n  // handle URL\n  const [enteredURL, setEnteredURL] = useState(\"\");\n  const [helperText, setHelperText] = useState(exportLinkMessage);\n  const [error, setError] = useState(false);\n  // Array which contains array of classes and slots occupied for the module\n  // 00: (2) [\"ACC3619\", \"SEC:A3\"]\n  // 01: (3) [\"GES1041\", \"TUT:D6\", \"LEC:1\"]\n  // 02: (3) [\"IS4100\", \"TUT:2\", \"LEC:1\"]\n  // 03: (3) [\"IS4234\", \"TUT:2\", \"LEC:1\"]\n  // 04: (2) [\"IS4261\", \"LEC:1\"]\n  const [modAndClassArray, setModAndClassArray] = useState([]);\n  // Array which contains resolved promises with either details of the module in .value or error message in .reason\n  const [modAndClassDetails, setModAndClassDetails] = useState([]);\n\n  // Contains user's existing event array\n  const [existingEvents, setExistingEvents] = useState([]);\n  // Contains new user event array\n  const [userEventArray, setUserEventArray] = useState([]);\n  const [functionSelector, setFunctionSelector] = useState(1);\n\n  // hard coded  value until we find a way to properly implement semester recording\n  const [currentSemester, setCurrentSemester] = useState(2);\n\n  // tooltip mouseover\n  const [mouseOver, setMouseOver] = useState(false);\n\n  const [errorMessage, setErrorMessage] = useState(false);\n\n  // checker to see if api is set, can be removed later on\n  useEffect(() => {\n    // console.log(modAndClassArray);\n    // console.log(modAndClassDetails);\n    // console.log(userEventArray);\n  }, [modAndClassDetails, userEventArray]);\n  useEffect(() => {\n    console.log(functionSelector);\n  }, [functionSelector]);\n\n  useEffect(() => {\n    // catches api catastrophic api errors, though it should never be triggered as there promise.allSettled helps handle Errors\n    if (modAndClassArray !== undefined && modAndClassArray.length > 0)\n      try {\n        getModuleDetails();\n      } catch (err) {\n        setError(true);\n        setHelperText(err);\n      }\n    else {\n      setHelperText(exportLinkMessage);\n    }\n  }, [modAndClassArray]);\n\n  useEffect(() => {\n    if (errorMessage !== undefined && errorMessage.length > 1)\n      toast.error(errorMessage);\n  }, [errorMessage]);\n\n  useEffect(() => {\n    var studentsRef = database.ref(`Students/${studentId}/events`);\n    studentsRef.once(\"value\").then((snapshot) => {\n      setExistingEvents(snapshot.val());\n    });\n  }, [userEventArray]);\n\n  useEffect(() => {\n    // catches invalid URLs\n    try {\n      convertModsIntoEvents();\n    } catch (err) {\n      setError(true);\n      setHelperText(err);\n    }\n  }, [modAndClassDetails]);\n\n  useEffect(() => {\n    if (userEventArray && userEventArray.length > 0) {\n      if (functionSelector === 1) {\n        addStudentEventsToDB(\n          localStorage.getItem(\"studentId\"),\n          userEventArray,\n          existingEvents,\n          database\n        );\n        toast.success(\"Your NUSMods timetable has been updated.\");\n        setFunctionSelector(0);\n      } else if (functionSelector === 2) {\n        overrideStudentEventsToDB(\n          localStorage.getItem(\"studentId\"),\n          userEventArray,\n          database\n        );\n        toast.success(\"Your NUSMods timetable has been replaced.\");\n        setFunctionSelector(0);\n      }\n    }\n    // usereventarray can be empty\n    if (functionSelector === 3) {\n      overrideStudentEventsToDB(\n        localStorage.getItem(\"studentId\"),\n        userEventArray,\n        database\n      );\n      toast.success(\"Your NUSMods timetable has been cleared.\");\n      setFunctionSelector(0);\n    }\n  }, [userEventArray]);\n\n  // waits for response and sets\n  const getModuleDetails = async () => {\n    let apiPromises = modAndClassArray.map((modAndClasses) => {\n      // only need module code for api to ping details\n      if (\n        modAndClasses &&\n        modAndClasses.length > 0 &&\n        modAndClasses[0].length > 0\n      ) {\n        return getModDetails(modAndClasses[0]);\n      } else {\n        console.log(\"no timetable loaded\");\n      }\n    });\n    // .allSettled() used instead of .all()\n    // safeguards for invalid/dirty Mod&class pairs\n    // allowed failed requests to go through but prevents immediate failure\n    Promise.allSettled(apiPromises).then((details) => {\n      setModAndClassDetails(details);\n    });\n  };\n\n  // user modAndClassArray and modAndClassDetails to parse the timetable into an array of events\n  const convertModsIntoEvents = () => {\n    // parses for each mod\n    let timeslotArray = modAndClassArray.map((modAndClass) => {\n      let specificClassDetails;\n      modAndClassDetails.forEach((modAndClassDetail) => {\n        if (\n          JSON.stringify(modAndClassDetail.status) === '\"fulfilled\"' &&\n          JSON.stringify(modAndClassDetail.value.moduleCode) ==\n            JSON.stringify(modAndClass[0])\n        ) {\n          specificClassDetails = modAndClassDetail.value;\n        }\n      });\n      // converts the unparsed data into timeslots\n      let correctTimeSlots = undefined;\n      if (specificClassDetails !== undefined) {\n        correctTimeSlots = findCorrectTimeslot(\n          modAndClass,\n          specificClassDetails,\n          currentSemester\n        );\n      }\n      return correctTimeSlots;\n    });\n\n    let newtimeslotArray = [];\n    timeslotArray.forEach((events) => {\n      if (events !== undefined) {\n        newtimeslotArray.push(...events);\n      }\n    });\n    let newEventArray = [];\n    newtimeslotArray.forEach((timeslot) => {\n      if (\n        studentId !== undefined &&\n        timeslot !== undefined &&\n        timeslot.weeks !== undefined &&\n        timeslot.day !== undefined &&\n        timeslot.endTime !== undefined\n      ) {\n        timeslot.weeks.forEach((week) => {\n          let startTimestamp = convertWeekDayTimeToTimestamp(\n            week,\n            timeslot.day,\n            timeslot.startTime\n          );\n          let endTimestamp = convertWeekDayTimeToTimestamp(\n            week,\n            timeslot.day,\n            timeslot.endTime\n          );\n          newEventArray.push({\n            studentId: studentId,\n            eventName: timeslot.moduleCode,\n            eventType: timeslot.lessonType,\n            startTime: startTimestamp,\n            endTime: endTimestamp,\n          });\n        });\n      }\n    });\n\n    // console.log(newEventArray);\n    // console.log(newtimeslotArray);\n\n    setUserEventArray(newEventArray);\n  };\n\n  const clearNUSModsTimetable = () => {\n    let nonNUSModsEventArray = [];\n    if (existingEvents && existingEvents.length > 0) {\n      existingEvents.map((event) => {\n        // retain custom event types only\n        if (\n          event.eventType == \"Personal Events\" ||\n          event.eventType == \"Others\" ||\n          event.eventType == \"Private\"\n        ) {\n          nonNUSModsEventArray.push(event);\n        }\n      });\n    }\n    console.log(\"nonNUSModsEventArray\");\n    console.log(nonNUSModsEventArray);\n    setUserEventArray(nonNUSModsEventArray);\n  };\n\n  let triggerNameRefresh = () => {};\n\n  if (props.triggerLayoutForceRefresh !== undefined) {\n    triggerNameRefresh = () => {\n      props.triggerLayoutForceRefresh();\n    };\n  }\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flexDirection: \"row\",\n        color: \"red\",\n        alignItems: \"baseline\",\n        marginTop: \"1em\",\n        marginBottom: \"1em\",\n        width: \"70vw\",\n      }}\n    >\n      <UserLogin\n        triggerNameRefresh={() => {\n          triggerNameRefresh();\n        }}\n      />\n      <TextField\n        error={error}\n        style={{ margin: \"1em\" }}\n        id=\"outlined-basic\"\n        label=\"Share/Sync Timetable Link \"\n        fullWidth\n        margin=\"dense\"\n        helperText={helperText}\n        variant=\"outlined\"\n        defaultValue={\"https://nusmods.com/timetable/sem-2/share?GEM1000...\"}\n        placeholder={\"https://nusmods.com/timetable/sem-2/share?GEM1000...\"}\n        onChange={(e) => {\n          setEnteredURL(e.target.value);\n          setHelperText(exportLinkMessage);\n          setError(false);\n        }}\n      />\n      <Tooltip\n        title={\n          <em style={{ fontSize: \"1.2em\" }}>{\"Add Modules to Timetable\"}</em>\n        }\n      >\n        <Button\n          style={{\n            boxShadow: \"3px 3px 3px 0px #bbb\",\n            margin: \"1em\",\n            width: \"45em\",\n          }}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            setFunctionSelector(1);\n            // catches invalid URLs\n            try {\n              setModAndClassArray(convertURLtoArray(enteredURL));\n            } catch (err) {\n              setHelperText(err);\n              setError(true);\n            }\n          }}\n        >\n          Import NUSMODS Timetable\n        </Button>\n      </Tooltip>\n      {/*\n      <Tooltip\n        title={<em style={{ fontSize: \"1.5em\" }}>{\"Override Timetable\"}</em>}\n      >\n        <Button\n          style={{\n            boxShadow: \"3px 3px 3px 0px #bbb\",\n            margin: \"1em\",\n            width: \"15em\",\n          }}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            setFunctionSelector(2);\n            // catches invalid URLs\n            try {\n              setModAndClassArray(convertURLtoArray(enteredURL));\n            } catch (err) {\n              setHelperText(err);\n              setError(true);\n            }\n          }}\n        >\n          Replace All\n        </Button>\n      </Tooltip>\n      */}\n      <Tooltip\n        title={\n          <em style={{ fontSize: \"1.2em\" }}>\n            {\"Click here to clear your imported NUSMods timetable\"}\n          </em>\n        }\n      >\n        <Button\n          style={{\n            boxShadow: \"3px 3px 3px 0px #bbb\",\n            margin: \"1em\",\n            width: \"45em\",\n          }}\n          variant=\"contained\"\n          color=\"secondary\"\n          onClick={() => {\n            setFunctionSelector(3);\n            // catches invalid URLs\n            try {\n              clearNUSModsTimetable();\n            } catch (error) {\n              setErrorMessage(error);\n            }\n          }}\n        >\n          Clear Imported Timetable\n        </Button>\n      </Tooltip>\n    </div>\n  );\n};\n\nexport default EnterURL;\n","import { React, useState } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Button } from \"@material-ui/core\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport EditIcon from \"@material-ui/icons/Edit\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\n\nimport { useDatabase } from \"../../Contexts/DatabaseContext\";\nimport {\n  loadTimetable,\n  getStudentGroupEvents,\n  overrideStudentEventsToDB,\n} from \"../../Functions/apiFunctions\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport {\n  useUpdateMyModules,\n  useMyModules,\n} from \"../../Contexts/MyModulesContext\";\nimport { useUpdateGroupModules } from \"../../Contexts/GroupModulesContext\";\nimport { useMyGroups } from \"../../Contexts/MyGroupsContext\";\n\ntoast.configure();\n\nfunction pickColour(type) {\n  let colors = [\"#FDDFDF\", \"#F0DEFD\", \"#DEFDE0\", \"#DEF3FD\", \"#FCF7DE\"];\n  let setColor = \"#FFFFFF\";\n\n  if (type.includes(\"Lecture\")) {\n    setColor = colors[0];\n  } else if (type.includes(\"Tutorial\")) {\n    setColor = colors[1];\n  } else if (type == \"Private\") {\n    setColor = colors[2];\n  } else {\n    setColor = colors[3];\n  }\n  return setColor;\n}\n\nfunction getModalStyle() {\n  return {\n    padding: \"50px\",\n    background: \"#f9f9f9\",\n    marginTop: \"3rem\",\n    maxWidth: \"700px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  };\n}\n\nconst TimetableModule = (props) => {\n  const { moduleInfo, index } = props;\n  const { studentId, id, title, type, startTime, endTime } = moduleInfo;\n\n  const initialState = {\n    studentId: studentId,\n    endTime: endTime,\n    eventName: title,\n    eventType: type,\n    startTime: startTime,\n  };\n\n  const [module, setModule] = useState(initialState);\n\n  const database = useDatabase();\n  const updateGroupModules = useUpdateGroupModules();\n  const myGroups = useMyGroups();\n  const [modalStyle] = useState(getModalStyle);\n\n  const [open, setOpen] = useState(false);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setModule({ ...module, [name]: value });\n  };\n\n  function updateEvent(id, title, type, studentId) {\n    var updateEventPrompt = window.confirm(\n      `Are you sure you want to update the event?\\nYou cannot undo this.`\n    );\n\n    if (updateEventPrompt) {\n      const startTimeSplit = id.split(\"-\")[0];\n      const eventTypeSplit = id.split(\"-\")[2];\n      const endTimeSplit = id.split(\"-\")[4];\n      // console.log({ startTimeSplit });\n      // console.log({ endTimeSplit });\n      // console.log({ type });\n      // console.log({ title });\n\n      const studentEventsRef = database.ref(`Students/${studentId}/events`);\n      // this query is flawed, there is edge case if two modules have same\n      // start time - server only returns one result\n      const studentEventsQuery = studentEventsRef\n        .orderByChild(`startTime`)\n        .equalTo(Number(startTimeSplit));\n\n      const studentEventsListener = studentEventsQuery.on(\n        \"child_added\",\n        function (snapshot) {\n          const databaseModule = snapshot.val();\n          // console.log({ databaseModule });\n          if (\n            databaseModule.endTime === Number(endTimeSplit) &&\n            databaseModule.eventType === type &&\n            databaseModule.eventName === title\n          ) {\n            studentEventsQuery.off(\"child_added\");\n            studentEventsRef.child(`${snapshot.key}`).set({\n              ...snapshot.val(),\n              eventName: module.eventName,\n            });\n\n            // triggers update after execution\n            getStudentGroupEvents(updateGroupModules, myGroups, database);\n            console.log(\"[TimetableCell] Update module: Updated\");\n          } else {\n            studentEventsQuery.off(\"child_added\");\n            console.log(\"[TimetableCell] Update module: Module does not match\");\n          }\n        }\n      );\n\n      setOpen(false);\n\n      toast.success(\"Event has been updated sucessfully.\");\n    } else {\n      setOpen(false);\n      toast.success(\"Updating of event is cancelled.\");\n    }\n  }\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  function deleteEvent(id, title, type, studentId) {\n    var deleteEventPrompt = window.confirm(\n      `Are you sure you want to delete the event?\\nYou cannot undo this.`\n    );\n\n    if (deleteEventPrompt) {\n      const startTimeSplit = id.split(\"-\")[0];\n      const endTimeSplit = id.split(\"-\")[4];\n\n      const studentEventsRef = database.ref(`Students/${studentId}/events`);\n      // this query is flawed, there is edge case if two modules have same\n      // start time - server only returns one result\n      const studentEventsQuery = studentEventsRef\n        .orderByChild(`startTime`)\n        .equalTo(Number(startTimeSplit));\n      const studentEventsQueryListener = studentEventsQuery.on(\n        \"child_added\",\n        function (snapshot) {\n          const databaseModule = snapshot.val();\n          if (\n            databaseModule.endTime === Number(endTimeSplit) &&\n            databaseModule.eventType === type &&\n            databaseModule.eventName === title\n          ) {\n            // turn off listener if found matching event\n            studentEventsQuery.off(\"child_added\");\n            studentEventsRef.child(`${snapshot.key}`).remove();\n\n            // triggers update after execution\n            getStudentGroupEvents(updateGroupModules, myGroups, database);\n            console.log(\"[TimetableCell] Delete module: Removed\");\n          } else {\n            studentEventsQuery.off(\"child_added\");\n            console.log(\"[TimetableCell] Delete module: Module does not match\");\n          }\n        }\n      );\n\n      setOpen(false);\n\n      toast.success(\"The event has been deleted successfully.\");\n    } else {\n      setOpen(false);\n      toast.success(\"Deletion of event is cancelled.\");\n    }\n  }\n\n  const body = (\n    <div style={modalStyle}>\n      <p style={{ fontSize: \"25px\", color: \"#ff5138\" }}>\n        View Event Details\n        <Tooltip\n          title={\n            <em style={{ fontSize: \"12px\" }}>\n              {\n                \"Through this page, you are able to view the details of your event.\"\n              }\n            </em>\n          }\n        >\n          <IconButton aria-label=\"delete\">\n            <HelpIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Button\n          onClick={handleClose}\n          variant=\"contained\"\n          style={{\n            float: \"right\",\n            borderRadius: \"15px\",\n            boxShadow: \"5px 5px 5px 0px grey\",\n          }}\n          color=\"secondary\"\n        >\n          <ClearIcon fontSize=\"small\" />\n        </Button>\n      </p>{\" \"}\n      <p>\n        <form>\n          <label\n            for=\"eventName\"\n            style={{\n              textAlign: \"left\",\n              display: \"block\",\n              padding: \"0.5em 1.5em 0.5em 0\",\n            }}\n          >\n            Title: *{\" \"}\n          </label>\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            id=\"eventName\"\n            required=\"required\"\n            value={module.eventName}\n            onChange={handleInputChange}\n            name=\"eventName\"\n            placeholder=\"Example: IS4261 6UGs Submission...\"\n            style={{\n              width: \"100%\",\n              padding: \"0.7em\",\n              marginBottom: \"0.5rem\",\n              outline: \"1px solid #ff5138\",\n              boxShadow: \"3px 3px 3px 0px #ff5138\",\n            }}\n          ></input>\n          <br></br>\n          <Button\n            onClick={() => updateEvent(id, title, type, studentId)}\n            variant=\"contained\"\n            style={{ boxShadow: \"5px 5px 5px 0px grey\" }}\n            color=\"primary\"\n          >\n            <EditIcon fontSize=\"small\" />\n            Update\n          </Button>\n        </form>\n      </p>\n      <br></br>\n      {/* <p>ID: {id}</p> */}\n      <p>Event Title: {title}</p>\n      <p>Event Status: {type}</p>\n      <p>Start Time: {startTime}</p>\n      <p>End Time: {endTime}</p>\n      <p>Student Id: {studentId}</p>\n      <br></br>\n      <Tooltip\n        title={\n          <em style={{ fontSize: \"12px\" }}>\n            {\"Click here to delete an event\"}\n          </em>\n        }\n      >\n        <Button\n          onClick={() => deleteEvent(id, title, type, studentId)}\n          variant=\"contained\"\n          style={{ boxShadow: \"5px 5px 5px 0px grey\" }}\n          color=\"primary\"\n        >\n          <DeleteIcon fontSize=\"small\" />\n          Delete\n        </Button>\n      </Tooltip>\n      &nbsp;\n      <Button\n        onClick={handleClose}\n        variant=\"contained\"\n        style={{ boxShadow: \"5px 5px 5px 0px grey\" }}\n        color=\"secondary\"\n      >\n        Cancel\n      </Button>\n    </div>\n  );\n\n  return (\n    <div\n      key={`${id}-${index}`}\n      style={{\n        backgroundColor: pickColour(type),\n        boxShadow: \"2px 1px 2px grey\",\n      }}\n    >\n      <button onClick={handleOpen}>\n        <div>{title}</div>\n        <div>{type}</div>\n      </button>\n      <div>\n        <Modal open={open} onClose={handleClose}>\n          {body}\n        </Modal>\n      </div>\n    </div>\n  );\n};\n\nexport default TimetableModule;\n","import { React, useMemo } from \"react\";\n\nimport TimetableModule from \"./TimetableModule\";\n\nconst TimetableCell = (props) => {\n  const { data } = props;\n\n  // create a new component for modules\n  const modules = data.map((module, index) => (\n    <TimetableModule\n      key={`${module.id}-${index}`}\n      moduleInfo={module}\n      index={index}\n    />\n  ));\n\n  return (\n    <div style={{ display: \"flex\", flexDirection: \"column\", height: \"100%\" }}>\n      {modules}\n    </div>\n  );\n};\n\nexport { TimetableCell };\n","import { React } from \"react\";\nimport {\n  getModules,\n  getStartEndTimeByWeek,\n  generateRows,\n  filterModules,\n} from \"./utils.js\";\nimport { TimetableCell } from \"./TimetableCell\";\n\nimport \"./timetable.css\";\n\nfunction createDay(name, modules) {\n  return { name, modules };\n}\n\nconst filterPrivateEventType = (timetableData) => {\n  return timetableData.filter((module) => {\n    if (module != null && module.eventType)\n      return module.eventType !== \"Private\";\n    return true;\n  });\n};\n\nexport default function Timetable(props) {\n  let {\n    weekNumber = 1,\n    timetableData: test,\n    children,\n    showPrivate = false,\n  } = props;\n  let timetableData = [];\n  if (test) timetableData = Object.values(test).flat();\n  if (!showPrivate) {\n    timetableData = filterPrivateEventType(timetableData);\n  }\n\n  weekNumber = parseInt(weekNumber);\n\n  // TimetableTimings\n  const modules = getModules(timetableData);\n  const weekTime = getStartEndTimeByWeek(modules, weekNumber);\n  const times = generateRows(weekTime.startTime, weekTime.endTime, 30, null);\n  // TimetableDays\n  const days = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\n  const timetableDays = days.map((day) => {\n    const dayArray = generateRows(\n      weekTime.startTime,\n      weekTime.endTime,\n      30,\n      filterModules(timetableData, weekNumber, day)\n    );\n    return createDay(day, dayArray);\n  });\n\n  return (\n    <>\n      {children}\n      <div\n        style={{\n          display: \"block\",\n          overflow: \"auto\",\n          margin: \"1em\",\n        }}\n      >\n        <table className=\"nice-table\" aria-label=\"customized table\">\n          <thead>\n            <tr>\n              <th></th>\n              {times.map((time) => (\n                <th align=\"center\" key={time}>\n                  {time}\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {timetableDays.map((day) => (\n              <tr key={`${day.name}-tr`}>\n                <th\n                  key={`${day.name}-th`}\n                  className=\"tdays\"\n                  style={{ textAlign: \"center\" }}\n                >\n                  {day.name}\n                </th>\n                {day.modules.map((cell, i) => (\n                  <td key={`${cell.id}-${i}`} align=\"center\">\n                    {<TimetableCell data={cell} fullData={timetableData} />}\n                  </td>\n                ))}\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Pagination from \"@material-ui/lab/Pagination\";\n\nconst useStyles = makeStyles(() => ({\n  ul: {\n    \"& .MuiPaginationItem-root\": {\n      boxShadow: \"0px 2px 2px 0px grey\",\n    },\n  },\n}));\n\nconst WeekSwitcher = (props) => {\n  // 14 weeks is the default NUS semester length, including recess\n  const { handleChange, week, maximumWeek = 14 } = props;\n  const classes = useStyles();\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        flexDirection: \"column\",\n        padding: \"0.5em\",\n      }}\n    >\n      <div>Semester 2 - Week {week}</div>\n      {/* Week */}\n      <Pagination\n        classes={{ ul: classes.ul }}\n        count={maximumWeek}\n        page={week}\n        siblingCount={0}\n        onChange={handleChange}\n        variant=\"outlined\"\n        // shape=\"rounded\"\n        boundaryCount={2}\n      >\n        Week\n      </Pagination>\n    </div>\n  );\n};\n\nexport default WeekSwitcher;\n","import { React, useState } from \"react\";\nimport Modal from \"@material-ui/core/Modal\";\nimport { Button } from \"@material-ui/core\";\nimport { Tooltip, IconButton } from \"@material-ui/core\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport ClearIcon from \"@material-ui/icons/Clear\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport moment from \"moment\";\n\nimport { useDatabase } from \"../../Contexts/DatabaseContext\";\nimport { getStudentGroupEvents } from \"../../Functions/apiFunctions\";\nimport { useMyGroups } from \"../../Contexts/MyGroupsContext\";\nimport { useUpdateGroupModules } from \"../../Contexts/GroupModulesContext\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\ntoast.configure();\n\nfunction getModalStyle() {\n  return {\n    padding: \"50px\",\n    background: \"#f9f9f9\",\n    marginTop: \"3rem\",\n    maxWidth: \"700px\",\n    marginLeft: \"auto\",\n    marginRight: \"auto\",\n  };\n}\n\nexport default function CreateEvent(props) {\n  const studentId = localStorage.getItem(\"studentId\");\n  const database = useDatabase();\n  const myGroups = useMyGroups();\n  const updateGroupModules = useUpdateGroupModules();\n  const { myGroup = null } = props;\n\n  const [modalStyle] = useState(getModalStyle);\n  const initialState = {\n    endTime: \"\",\n    eventName: \"\",\n    eventType: \"\",\n    startTime: \"\",\n  };\n\n  const [module, setModule] = useState(initialState);\n\n  const handleInputChange = (event) => {\n    const { name, value } = event.target;\n    setModule({ ...module, [name]: value });\n  };\n\n  const createModuleForStudent = (studentId) => {\n    let data = {\n      endTime: new Date(module.endTime).getTime(),\n      eventName: module.eventName,\n      eventType: module.eventType,\n      startTime: new Date(module.startTime).getTime(),\n      studentId: studentId,\n    };\n\n    // database reference student events\n    const createEventsRef = database.ref(`Students/${studentId}/events`);\n    const createEventsQuery = createEventsRef.orderByKey().limitToLast(1);\n\n    // create the module from data after the last event key\n    const createStudentEventsListenerCallback = () =>\n      createEventsQuery.on(\"child_added\", function (lastEvent) {\n        console.log(\n          \"[CreateEvent] createEventsQuery: create event - \",\n          lastEvent.key\n        );\n        let newEventKey = Number(lastEvent.key) + 1;\n        createEventsQuery.off(\"child_added\");\n        createEventsRef.child(newEventKey).set(data);\n      });\n\n    // check if any events exist\n    const checkExistingEventsListener = createEventsQuery.on(\n      \"value\",\n      function (snapshot) {\n        if (snapshot.val()) {\n          console.log(\n            `[CreateEvent] createEventsQuery: found at least one event`\n          );\n          createEventsQuery.off(\"value\");\n          createStudentEventsListenerCallback();\n        } else {\n          console.log(`[CreateEvent] createEventsQuery: found no events`);\n          createEventsQuery.off(\"value\");\n          createEventsRef\n            .child(\"0\")\n            .set(data)\n            .then(\n              console.log(\n                \"[CreateEvent] createEventsQuery: created first event\"\n              )\n            )\n            .catch((err) => {\n              console.error(err);\n              console.log(\n                `[CreateEvent] createEventsQuery: event creation error`\n              );\n            });\n        }\n      }\n    );\n  };\n\n  const saveModule = async (e) => {\n    e.preventDefault();\n    var addEventPrompt = window.confirm(\n      `Are you sure you want to add the event?\\nYou cannot undo this.`\n    );\n\n    if (addEventPrompt) {\n      if (myGroup) {\n        const myMembers = myGroup?.members;\n        if (Array.isArray(myMembers)) {\n          myMembers.forEach((memberId) => {\n            if (memberId) createModuleForStudent(memberId);\n          });\n        }\n      } else {\n        createModuleForStudent(studentId);\n      }\n\n      setOpen(false);\n      toast.success(\n        `A new ${myGroup ? \"group \" : \"\"}event has been sucessfully added.`\n      );\n      if (myGroup) {\n        getStudentGroupEvents(updateGroupModules, myGroups, database);\n      }\n    } else {\n      setOpen(false);\n      toast.success(\"Adding of event is cancelled.\");\n    }\n  };\n\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const timetableTypeMessage = (myGroup) => {\n    if (myGroup) return \"Add a group event to your group timetable.\";\n    return \"Add an event to your personal timetable, you may choose either a 'Private' event status for your personal commitment or 'Others' event status for general event.\";\n  };\n\n  let newDate = new Date();\n  let todayDate = moment(newDate).format(\"DD-MM-YYYY\");\n  let day = moment().format(\"dddd\");\n  const body = (\n    <div style={modalStyle}>\n      <p style={{ fontSize: \"25px\", color: \"#ff5138\" }}>\n        Add a 30 Minutes {myGroup ? \"Group \" : \"\"}Time Block Interval Event\n        <Tooltip\n          title={\n            <em style={{ fontSize: \"12px\" }}>\n              {timetableTypeMessage(myGroup)}\n            </em>\n          }\n        >\n          <IconButton aria-label=\"delete\">\n            <HelpIcon fontSize=\"small\" />\n          </IconButton>\n        </Tooltip>\n        <Button\n          onClick={handleClose}\n          variant=\"contained\"\n          style={{\n            float: \"right\",\n            borderRadius: \"15px\",\n            boxShadow: \"5px 5px 5px 0px grey\",\n          }}\n          color=\"secondary\"\n        >\n          <ClearIcon fontSize=\"small\" />\n        </Button>\n      </p>\n      <p>\n        Today's Date: {todayDate}, {day}\n      </p>\n      <form onSubmit={saveModule}>\n        <label\n          for=\"eventName\"\n          style={{\n            textAlign: \"left\",\n            display: \"block\",\n            padding: \"0.5em 1.5em 0.5em 0\",\n          }}\n        >\n          Title: *{\" \"}\n        </label>\n        <input\n          type=\"text\"\n          className=\"form-control\"\n          id=\"eventName\"\n          required=\"required\"\n          value={module.eventName}\n          onChange={handleInputChange}\n          name=\"eventName\"\n          placeholder=\"Example: IS4261 6UGs Submission...\"\n          style={{\n            width: \"100%\",\n            padding: \"0.7em\",\n            marginBottom: \"0.5rem\",\n            outline: \"1px solid #ff5138\",\n            boxShadow: \"3px 3px 3px 0px #ff5138\",\n          }}\n        />\n        <label\n          for=\"eventType\"\n          style={{\n            textAlign: \"left\",\n            display: \"block\",\n            padding: \"0.5em 1.5em 0.5em 0\",\n          }}\n        >\n          Event Status: *{\" \"}\n        </label>\n        <select\n          name=\"eventType\"\n          id=\"eventType\"\n          required=\"required\"\n          onChange={handleInputChange}\n          style={{\n            width: \"100%\",\n            padding: \"0.7em\",\n            marginBottom: \"0.5rem\",\n            outline: \"1px solid #ff5138\",\n            boxShadow: \"3px 3px 3px 0px #ff5138\",\n          }}\n        >\n          <option selected hidden>\n            Select your event status\n          </option>\n          {!myGroup && <option value=\"Private\">Private</option>}\n          <option value=\"Others\">Others</option>\n        </select>\n        <label\n          for=\"startTime\"\n          style={{\n            textAlign: \"left\",\n            display: \"block\",\n            padding: \"0.5em 1.5em 0.5em 0\",\n          }}\n        >\n          Start Date and Time (Input in 30 Minutes Time Block Interval): *{\" \"}\n        </label>\n        <input\n          type=\"datetime-local\"\n          step=\"1800\"\n          className=\"form-control\"\n          id=\"startTime\"\n          required={true}\n          value={module.startTime}\n          onChange={handleInputChange}\n          name=\"startTime\"\n          min=\"2021-01-10T00:00\"\n          max=\"2021-12-31T00:00\"\n          style={{\n            width: \"100%\",\n            padding: \"0.7em\",\n            marginBottom: \"0.5rem\",\n            outline: \"1px solid #ff5138\",\n            boxShadow: \"3px 3px 3px 0px #ff5138\",\n          }}\n        />\n        <label\n          for=\"endTime\"\n          style={{\n            textAlign: \"left\",\n            display: \"block\",\n            padding: \"0.5em 1.5em 0.5em 0\",\n          }}\n        >\n          End Date and Time (Input in 30 Minutes Time Block Interval): *{\" \"}\n        </label>\n        <input\n          type=\"datetime-local\"\n          step=\"1800\"\n          className=\"form-control\"\n          id=\"endTime\"\n          required={true}\n          value={module.endTime}\n          onChange={handleInputChange}\n          name=\"endTime\"\n          min={module.startTime}\n          max=\"2021-12-31T00:00\"\n          style={{\n            width: \"100%\",\n            padding: \"0.7em\",\n            marginBottom: \"0.5rem\",\n            outline: \"1px solid #ff5138\",\n            boxShadow: \"3px 3px 3px 0px #ff5138\",\n          }}\n        />\n        <br></br>\n        <Tooltip\n          title={\n            <em style={{ fontSize: \"12px\" }}>\n              {\"Click here to submit the form\"}\n            </em>\n          }\n        >\n          <Button\n            variant=\"contained\"\n            style={{ boxShadow: \"5px 5px 5px 0px grey\" }}\n            color=\"primary\"\n          >\n            <input\n              type=\"submit\"\n              value=\"SUBMIT\"\n              style={{ background: \"none\" }}\n            ></input>\n          </Button>\n        </Tooltip>\n        &nbsp;\n        <Button\n          onClick={handleClose}\n          variant=\"contained\"\n          style={{ boxShadow: \"5px 5px 5px 0px grey\" }}\n          color=\"secondary\"\n        >\n          Cancel\n        </Button>\n      </form>\n    </div>\n  );\n\n  return (\n    <div className=\"submit-form\">\n      <span>\n        <Tooltip\n          title={\n            <em style={{ fontSize: \"12px\" }}>\n              {\"Click here to add a new event to your personal timetable\"}\n            </em>\n          }\n        >\n          <Button\n            onClick={handleOpen}\n            variant=\"contained\"\n            color=\"primary\"\n            style={{ boxShadow: \"5px 5px 5px 0px grey\" }}\n          >\n            <AddIcon fontSize=\"small\" style={{ color: \"white\" }} />\n            {myGroup ? \"Add Group Event\" : \"Add Event\"}\n          </Button>\n        </Tooltip>\n      </span>\n      <Modal open={open} onClose={handleClose}>\n        {body}\n      </Modal>\n    </div>\n  );\n}\n","import { React, Fragment, useState, useMemo } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tab from \"@material-ui/core/Tab\";\nimport TabContext from \"@material-ui/lab/TabContext\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport TabPanel from \"@material-ui/lab/TabPanel\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport {\n  useMyGroups,\n  useGroupsWeek,\n  useUpdateGroupsWeek,\n} from \"../../Contexts/MyGroupsContext\";\nimport { useGroupModules } from \"../../Contexts/GroupModulesContext\";\nimport { useMaximumWeek, useMyModules } from \"../../Contexts/MyModulesContext\";\n\nimport {\n  Timetable,\n  WeekSwitcher,\n  Legend,\n  CreateEvent,\n} from \"../../Components/Timetable\";\n\nexport default function GroupTimetable(props) {\n  const myModules = useMyModules();\n  const myGroups = useMyGroups();\n  const groupsWeek = useGroupsWeek();\n  const updateGroupsWeek = useUpdateGroupsWeek();\n  const [value, setValue] = useState(0);\n  const studentEvents = useGroupModules();\n  const maximumWeek = useMaximumWeek();\n\n  const handleWeekChange = (event, value) => {\n    // use event as first element, ordering requirement to extract value\n    updateGroupsWeek(value);\n  };\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n\n  const anyGroups =\n    myGroups !== null && myGroups !== undefined && myGroups.length > 0;\n\n  const legend = useMemo(() => <Legend />, [Legend]);\n  const createPersonalEvent = useMemo(\n    () => <CreateEvent myGroup={Object.values(myGroups)[value]} />,\n    [value, myModules]\n  );\n  const weekSwitcher = useMemo(\n    () => (\n      <WeekSwitcher\n        handleChange={handleWeekChange}\n        week={groupsWeek}\n        maximumWeek={maximumWeek}\n      />\n    ),\n    [groupsWeek]\n  );\n\n  const classes = makeStyles({\n    paper: {\n      marginTop: \"-0.5em\",\n      backgroundColor: \"#FFF\",\n    },\n  })();\n\n  return (\n    <Fragment>\n      <Paper className={classes.paper} square>\n        {anyGroups && (\n          <div className=\"header\">\n            <div id=\"legend\">{legend}</div>\n            <div id=\"week-switcher\">{weekSwitcher}</div>\n            <div id=\"action-button\">{createPersonalEvent}</div>\n          </div>\n        )}\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            wigth: \"100%\",\n          }}\n        >\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"Project Group Tabs\"\n            centered\n          >\n            {anyGroups ? (\n              myGroups.map((studentGroup) => {\n                return (\n                  <Tab\n                    key={studentGroup.groupId}\n                    label={studentGroup.groupName}\n                    id={studentGroup.groupId}\n                  />\n                );\n              })\n            ) : (\n              <Tab label=\"No Groups\" />\n            )}\n          </Tabs>\n          <TabContext value={JSON.stringify(value)}>\n            {anyGroups && studentEvents ? (\n              myGroups.map((studentGroup, index) => {\n                return (\n                  <TabPanel\n                    key={studentGroup.groupId}\n                    value={JSON.stringify(index)}\n                  >\n                    {studentEvents[studentGroup.groupId] !== undefined ? (\n                      <Timetable\n                        key={studentGroup.groupId}\n                        weekNumber={groupsWeek}\n                        timetableData={studentEvents[studentGroup.groupId]}\n                      />\n                    ) : (\n                      <div>No events found</div>\n                    )}\n                  </TabPanel>\n                );\n              })\n            ) : (\n              <div />\n            )}\n          </TabContext>\n        </div>\n      </Paper>\n    </Fragment>\n  );\n}\n","import { React, useState, useMemo } from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport VisualTip from \"../../Components/VisualTip\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  useMyModules,\n  useMyWeek,\n  useUpdateMyWeek,\n  useMaximumWeek,\n} from \"../../Contexts/MyModulesContext\";\n\nimport {\n  Legend,\n  EnterURL,\n  Timetable,\n  WeekSwitcher,\n  CreateEvent,\n} from \"../../Components/Timetable\";\n\nimport \"../../Components/Timetable/timetable.css\";\n\nexport default function MyTimetable(props) {\n  const myWeek = useMyWeek();\n  const updateMyWeek = useUpdateMyWeek();\n  const myModules = useMyModules();\n  const myStudentId = localStorage.getItem(\"studentId\");\n  const maximumWeek = useMaximumWeek();\n\n  const legend = useMemo(() => <Legend />, [Legend]);\n  const createPersonalEvent = useMemo(() => <CreateEvent />, [myModules]);\n\n  // TO FIX: for new student name force refresh\n  const { triggerLayoutForceRefresh } = props;\n\n  // lift week in WeekSwitcher\n  const handleWeekChange = (event, value) => {\n    // use event as first element, ordering requirement to extract value\n    updateMyWeek(value);\n  };\n\n  const weekSwitcher = useMemo(\n    () => (\n      <WeekSwitcher\n        handleChange={handleWeekChange}\n        week={myWeek}\n        maximumWeek={maximumWeek}\n      />\n    ),\n    [myWeek]\n  );\n\n  const classes = makeStyles({\n    paper: {\n      marginTop: \"-0.5em\",\n      backgroundColor: \"#FFF\",\n    },\n  })();\n\n  return (\n    <Paper className={classes.paper} square>\n      {\" \"}\n      <Timetable\n        weekNumber={myWeek}\n        timetableData={myModules}\n        showPrivate={true}\n      >\n        <div className=\"header\">\n          <div id=\"legend\">{legend}</div>\n          <div id=\"week-switcher\">{weekSwitcher}</div>\n          <div id=\"action-button\">{createPersonalEvent}</div>\n        </div>\n      </Timetable>\n      <div id=\"url-input\">\n        <div>\n          <Tooltip\n            title={\n              <div>\n                <em style={{ fontSize: \"1.2em\" }}>\n                  {\"How to get NUSMods Share/Sync?\"}\n                </em>\n              </div>\n            }\n          >\n            <IconButton>\n              <VisualTip />\n            </IconButton>\n            {/* <HelpIcon fontSize=\"small\" /> */}\n          </Tooltip>\n        </div>\n        <EnterURL\n          triggerLayoutForceRefresh={() => {\n            triggerLayoutForceRefresh();\n          }}\n        />\n      </div>\n    </Paper>\n  );\n}\n","import { React, Fragment, useState, useEffect } from \"react\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport MenuList from \"@material-ui/core/MenuList\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\n\nimport { Link } from \"react-router-dom\";\n\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport ScheduleIcon from \"@material-ui/icons/Schedule\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport DoneIcon from \"@material-ui/icons/Done\";\nimport SaveIcon from '@material-ui/icons/Save';\n\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport HelpIcon from \"@material-ui/icons/Help\";\nimport DirectionsIcon from '@material-ui/icons/Directions';\n\nimport \"./Stylesheet/Layout.css\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\ntoast.configure();\n\nconst useStyles = makeStyles({\n  topNavBar: {\n    background: \"white\",\n    backgroundColor: \"#fbfbfb\",\n  },\n  sideNavBar: {\n    padding: \"10px 10px\",\n    backgroundColor: \"#fbfbfb\",\n    borderRadius: \"45px\",\n  },\n  sideNavBarActive: {\n    borderBottom: \"5px solid #ff5138 !important\",\n    backgroundColor: \"#fbfbfb\",\n  },\n  buttonDesign: {\n    boxShadow: \"0px 8px 15px rgba(0, 0, 0, 0.1)\",\n    color: \"#000\",\n    padding: \"10px 10px\",\n    backgroundColor: \"#fbfbfb\",\n    border: \"none\",\n    borderRadius: \"45px\",\n    transition: \"all 0.3s ease 0s\",\n    cursor: \"pointer\",\n    outline: \"none\",\n    \"&:hover\": {\n      boxShadow: \"0px 10px 15px #ff5138\",\n      transform: \"translateY(-7px)\",\n    },\n  },\n});\n\nfunction Layout(props) {\n  const classes = useStyles();\n  const history = useHistory();\n  const location = useLocation();\n\n  const [studentId, setStudentId] = useState(localStorage.getItem(\"studentId\"));\n  const [studentName, setStudentName] = useState(\n    localStorage.getItem(\"studentName\")\n  );\n\n  useEffect(() => {\n    setStudentId(localStorage.getItem(\"studentId\"));\n    setStudentName(localStorage.getItem(\"studentName\"));\n  }, [props.forceRefresh]);\n\n  const [updateStudentNameDisabled, setUpdateStudentNameDisabled] = useState(false);\n\n  function editStudentName(event) {\n    setUpdateStudentNameDisabled(false);\n\n    var studentNameInput = event.target.value;\n    if (studentNameInput.includes(\",\") || studentNameInput.includes(\".\") || studentNameInput.includes(\"!\") || \n    studentNameInput.includes(\"@\") || studentNameInput.includes(\"#\") || studentNameInput.includes(\"$\") || studentNameInput.includes(\"&\") \n    || studentNameInput.includes(\"'\") || studentNameInput.includes(\"(\") || studentNameInput.includes(\")\") || studentNameInput.includes(\"*\") || studentNameInput.includes(\"+\")\n    || studentNameInput.includes(\"/\") || studentNameInput.includes(\":\") || studentNameInput.includes(\";\") || studentNameInput.includes(\"<\") || studentNameInput.includes(\"=\")\n    || studentNameInput.includes(\">\") || studentNameInput.includes(\"?\") || studentNameInput.includes(\"[\") || studentNameInput.includes(\"]\") || studentNameInput.includes(\"_\")\n    || studentNameInput.includes(\"{\") || studentNameInput.includes(\"}\") || studentNameInput.includes(\"|\") || studentNameInput.includes(\"~\") || studentNameInput.includes(\"^\")) {\n      toast.error(\"You are not allowed to enter special characters (!#$%&'()*+,-./:;<=>?@[\\]^_`{|}~).\");\n      setUpdateStudentNameDisabled(true);\n      return;\n    } else if (studentNameInput.length === 0) {\n      toast.error(\"You are not allowed to leave the student name blank.\");\n      setUpdateStudentNameDisabled(true);\n      setStudentName(\"\");\n      return;\n    }\n\n    setStudentName(event.target.value);\n    setStudentNameTextbox({ disable: false, val: event.target.value });    \n    localStorage.setItem(\"studentName\", event.target.value);\n  }\n\n  const [studentNameTextbox, setStudentNameTextbox] = useState({\n    disable: true,\n    val: \"\",\n    readOnly: true,\n  });\n\n  const [refreshKey, setRefreshKey] = useState(0);\n\n  useEffect(() => {\n    setRefreshKey(0);\n    setStudentName(localStorage.getItem(\"studentName\"));\n  }, [refreshKey]);\n\n  function enableStudentNameEdit() {\n    setStudentNameTextbox({\n      disable: false,\n      val: localStorage.getItem(\"studentName\"),\n      readOnly: false,\n    });\n    setRefreshKey(refreshKey + 1);\n  }\n\n  function updateStudentName() {\n    setStudentNameTextbox({ disable: true, val: studentName, readOnly: true });\n\n    if (studentNameTextbox.val !== localStorage.getItem(\"studentName\") && updateStudentNameDisabled === false) {\n      toast.success(\"Student name has been updated successfully.\");\n    }\n\n    //To update in firebase for real logic [now is just update in client side]\n  }\n\n  return (\n    <Fragment>\n      <AppBar position=\"static\" className={classes.topNavBar}>\n        <Toolbar>\n          <div style={{ width: \"100%\" }}>\n            <Typography variant=\"h1\" color=\"inherit\">\n              <div style={{ color: \"#ff5138\" }}>\n                <div style={{ float: \"right\", marginTop: \"2%\" }}>\n                  <Typography variant=\"h5\">\n                    <Tooltip\n                      title={\n                        <em>\n                          {\"This is your Student Name. The number #\" +\n                            localStorage.getItem(\"studentId\") +\n                            \" is your User ID.\"}\n                        </em>\n                      }\n                    >\n                      <IconButton aria-label=\"delete\">\n                        <HelpIcon fontSize=\"small\" />\n                      </IconButton>\n                    </Tooltip>\n                    Hi,{\" \"}\n                    {localStorage.getItem(\"studentName\") !== null &&\n                    studentNameTextbox.val.length !== 0 ? (\n                      <input\n                        className=\"renameText\"\n                        type=\"text\"\n                        disabled={studentNameTextbox.disable}\n                        value={studentName}\n                        onChange={(e) => editStudentName(e)}\n                        readOnly={studentNameTextbox.readOnly}\n                        size={studentNameTextbox.val.length - 3}\n                        style={\n                          studentNameTextbox.readOnly === false ||\n                          updateStudentNameDisabled === true\n                            ? {\n                                padding: \"4px 4px 4px 4px\",\n                                borderRadius: \"4px\",\n                                outline: \"none\",\n                                border: \"1px solid #da337a\",\n                                boxShadow: \"0px 0px 8px #da337a\",\n                              }\n                            : {}\n                        }\n                      ></input>\n                    ) : (\n                      <span>{studentName}</span>\n                    )}\n                    (#{studentId})\n                    {\n                      studentNameTextbox.readOnly === true ? (\n                        //   <Button\n                        //   variant=\"contained\"\n                        //   color=\"primary\"\n                        //   style={{ width: \"fit-content\" }}\n                        // >\n                        <Link\n                          onClick={() => {\n                            enableStudentNameEdit();\n                          }}\n                        >\n                          <span style={{ color: \"black\" }}>\n                            {/* <abbr title=\"Edit Student Name\"><CreateIcon/></abbr> */}\n                            <CreateIcon />\n                          </span>\n                        </Link>\n                      ) : (\n                        // </Button>\n                        //   <Button\n                        //   variant=\"contained\"\n                        //   color=\"primary\"\n                        //   style={{ width: \"fit-content\" }}\n                        // >\n                        <Link\n                          onClick={(e) => {\n                            updateStudentName(e);\n                          }}\n                          style={\n                            updateStudentNameDisabled === true\n                              ? { pointerEvents: \"none\" }\n                              : {}\n                          }\n                        >\n                          {updateStudentNameDisabled === false ? (\n                            <span style={{ color: \"black\" }}>\n                              {/* <abbr title=\"Save Changes\"><SaveIcon /></abbr> */}\n                              <SaveIcon />\n                            </span>\n                          ) : (\n                            <span style={{ color: \"lightgrey\" }}>\n                              <SaveIcon />\n                            </span>\n                          )}\n                        </Link>\n                      )\n                      // </Button>\n                    }\n                  </Typography>\n                </div>\n                <Typography variant=\"h3\" component=\"h4\">\n                  MixTime\n                </Typography>\n                <Typography variant=\"body1\">\n                  <i>We mix your time to get the best mix of time available</i>\n                </Typography>\n              </div>\n            </Typography>\n            <br></br>\n          </div>\n        </Toolbar>\n        <div\n          style={{\n            display: \"inherit\",\n            padding: \"1%\",\n            textAlign: \"center\",\n            // width: \"100%\",\n          }}\n        >\n          <MenuList\n            style={{\n              display: \"contents\",\n              width: \"10%\",\n              boxShadow: \"0 3px 5px 2px rgb(0 0 0 / 15%)\",\n              // height: \"100vh\",\n              // float: \"left\",\n              color: \"black\",\n            }}\n            onSelect={({ itemID }) => {\n              history.push(itemID);\n            }}\n          >\n            <MenuItem\n              component={Link}\n              to=\"/Timetable\"\n              itemID=\"/Timetable\"\n              selected={\n                location.pathname === \"/Timetable\" || location.pathname === \"/\"\n                  ? true\n                  : false\n              }\n              classes={{\n                root: classes.buttonDesign,\n                selected: classes.sideNavBarActive,\n              }}\n              style={{ width: \"fit-content\" }}\n            >\n              <CalendarTodayIcon /> &nbsp;&nbsp; My Timetable\n            </MenuItem>\n            &nbsp; &nbsp;\n            <MenuItem\n              component={Link}\n              to=\"/GroupTimetable\"\n              itemID=\"/GroupTimetable\"\n              selected={location.pathname === \"/GroupTimetable\" ? true : false}\n              classes={{\n                root: classes.buttonDesign,\n                selected: classes.sideNavBarActive,\n              }}\n              style={{ width: \"fit-content\" }}\n            >\n              <ScheduleIcon /> &nbsp;&nbsp; Group Timetable\n            </MenuItem>\n            &nbsp; &nbsp;\n            <MenuItem\n              component={Link}\n              to=\"/GroupManagement\"\n              itemID=\"/GroupManagement\"\n              selected={\n                location.pathname === \"/GroupManagement\" ||\n                location.pathname === \"/ViewArchivedGroups\"\n                  ? true\n                  : false\n              }\n              classes={{\n                root: classes.buttonDesign,\n                selected: classes.sideNavBarActive,\n              }}\n              style={{ width: \"fit-content\" }}\n            >\n              <GroupIcon /> &nbsp;&nbsp; Manage Groups\n            </MenuItem>\n            &nbsp;&nbsp;\n            <span style={{ float: \"right\", display: \"inherit\" }}>\n              <MenuItem\n                classes={{\n                  root: classes.buttonDesign,\n                  selected: classes.sideNavBarActive,\n                }}\n                style={{ width: \"fit-content\", marginLeft: \"auto\" }}\n                component={Link}\n                to=\"/TutorialPage\"\n                itemID=\"/TutorialPage\"\n                selected={location.pathname === \"/TutorialPage\" ? true : false}\n              >\n                <div\n                  style={{\n                    color: \"black\",\n                  }}\n                >\n                  <DirectionsIcon /> &nbsp;&nbsp; Learning Guide\n                </div>\n              </MenuItem>\n            </span>\n          </MenuList>\n        </div>\n      </AppBar>\n    </Fragment>\n  );\n}\n\nexport default Layout;\n","import { React, useEffect, useState } from \"react\";\nimport { Redirect } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\nimport firebase from \"firebase\";\nimport firebaseConfig from \"../Firebase/firebaseConfig\";\nimport { Button } from \"@material-ui/core\";\nimport { toast } from \"react-toastify\";\nimport { useDatabase } from \"../Contexts/DatabaseContext\";\nimport { getGroupMembersOfGroup } from \"../Functions/apiFunctions\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport Box from \"@material-ui/core/Box\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\n\ntoast.configure();\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"2%\",\n    display: \"inline\",\n  },\n  media: {\n    height: 140,\n  },\n  cardColumn: {\n    padding: \"10px\",\n  },\n  boxDesign: {\n    transition: \"all 0.3s ease 0s\",\n    \"&:hover\": {\n      boxShadow: \"0px 10px 15px #ff5942\",\n      transform: \"translateY(-7px)\",\n    },\n  },\n});\n\nfunction JoinGroup(props) {\n  const classes = useStyles();\n  const [url, setURL] = useState(window.location.href);\n  const [groupIdToJoin, setGroupIdToJoin] = useState();\n  const [studentId, setStudentId] = useState(localStorage.getItem(\"studentId\"));\n  const [studentName, setStudentName] = useState(\n    localStorage.getItem(\"studentName\")\n  );\n  const [groupData, setGroupData] = useState([]);\n  const [toGroupManagement, setToGroupManagement] = useState(false);\n  const [isJoinGroupDisabled, setIsJoinGroupDisabled] = useState(true);\n  const [joinGroupUserInput, setJoinGroupUserInput] = useState(\"\");\n  const [\n    parsedGroupIdFromUserInput,\n    setParsedGroupIdFromUserInput,\n  ] = useState();\n  const [errorMessage, setErrorMessage] = useState(\"\");\n\n  const database = useDatabase();\n\n  // help make sure user is logged in\n  const [refreshKey, setRefreshKey] = useState(0);\n  useEffect(() => {\n    setRefreshKey(0);\n    if (localStorage.getItem(\"studentId\") == null) {\n      var studentName = prompt(\n        \"Hi! Seems like this is the first time you visited MixTime. \\nPlease enter your name and we'll tag it into your timetable.\"\n      );\n      createStudentId(studentName);\n    } else {\n      getStudentName(localStorage.getItem(\"studentId\"));\n    }\n  }, [refreshKey]);\n\n  let getStudentName = (studentId) => {\n    var studentsRef = database.ref(\n      `Students/${localStorage.getItem(\"studentId\")}/name`\n    );\n    studentsRef.once(\"value\").then((snapshot) => {\n      setStudentName(snapshot.val());\n    });\n  };\n\n  let createStudentId = (studentName) => {\n    var query = database.ref(\"Students/\").orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key;\n        setStudentId(parseInt(key) + 1);\n        localStorage.setItem(\"studentId\", parseInt(key) + 1);\n      });\n      createStudentRecord(studentName);\n    });\n  };\n\n  let createStudentRecord = (studentName) => {\n    var studentsRef = database.ref(`Students/`);\n    studentsRef\n      .child(localStorage.getItem(\"studentId\"))\n      .child(\"name\")\n      .set(studentName);\n    setRefreshKey(refreshKey + 1);\n    localStorage.setItem(\"studentName\", studentName);\n    if (props.triggerLayoutForceRefresh !== undefined) {\n      props.triggerLayoutForceRefresh();\n    }\n  };\n\n  useEffect(async () => {\n    let params = url.split(\"/\");\n    let groupIdToJoin = params[params.length - 1];\n    if (\n      localStorage.getItem(\"studentId\") != null &&\n      groupIdToJoin !== undefined\n    ) {\n      let groupMembers = await getGroupMembersOfGroup(groupIdToJoin, database);\n      setGroupData(groupMembers);\n      setGroupIdToJoin(groupIdToJoin);\n    }\n  }, []);\n\n  const addMemberToGroup = () => {\n    if (groupData !== undefined && groupData.members !== undefined) {\n      let groupMembers = groupData.members;\n      if (localStorage.getItem(\"studentId\") != null) {\n        if (groupMembers !== undefined && groupMembers.length > 0) {\n          if (\n            groupMembers.includes(parseInt(localStorage.getItem(\"studentId\")))\n          ) {\n            //already in groupa\n            toast.error(\"You are already in this group\");\n          } else {\n            groupMembers.push(parseInt(localStorage.getItem(\"studentId\")));\n            database\n              .ref(`Groups/`)\n              .child(groupIdToJoin)\n              .child(\"members\")\n              .set(groupMembers);\n            toast.success(\"You have sucessfully joined the group\");\n            setToGroupManagement(true);\n          }\n        } else {\n          console.log(\"here\");\n        }\n      }\n    }\n  };\n\n  // Parse and check user input for numeric group ID\n  useEffect(() => {\n    if (joinGroupUserInput !== undefined && joinGroupUserInput.length < 1) {\n      setIsJoinGroupDisabled(true);\n      return;\n    }\n    // is integer then ok\n    if (parseInt(joinGroupUserInput)) {\n      setParsedGroupIdFromUserInput(parseInt(joinGroupUserInput));\n      setIsJoinGroupDisabled(false);\n      return;\n    }\n    // check url inputs\n    // check if mixtime url is part of the included url\n    if (!joinGroupUserInput.includes(window.location.host)) {\n      setIsJoinGroupDisabled(true);\n      setErrorMessage(\"Wrong URL Entered\");\n      return;\n    }\n    // check if is joinGroup url\n    if (joinGroupUserInput.split(\"/JoinGroup/\"[1])) {\n      let val = joinGroupUserInput.split(\"/JoinGroup/\")[1];\n      if (parseInt(val)) {\n        setParsedGroupIdFromUserInput(parseInt(val));\n        setIsJoinGroupDisabled(false);\n        return;\n      }\n    }\n\n    setErrorMessage(\"Could not get group number, please check and try again\");\n    setIsJoinGroupDisabled(true);\n  }, [joinGroupUserInput]);\n\n  useEffect(() => {}, [parsedGroupIdFromUserInput]);\n\n  const triggerGroupCheck = async () => {\n    if (\n      localStorage.getItem(\"studentId\") != null &&\n      parsedGroupIdFromUserInput !== undefined\n    ) {\n      var database;\n      if (!firebase.apps.length) {\n      } else {\n        firebase.app();\n        var database = firebase.app().database();\n      }\n      let groupMembers = await getGroupMembersOfGroup(\n        parsedGroupIdFromUserInput,\n        database\n      );\n      if (groupMembers === undefined) {\n        toast.error(\"Group was not found, please check and try again.\");\n        setErrorMessage(\"Group was not found, please check and try again.\");\n      }\n      setGroupData(groupMembers);\n      setGroupIdToJoin(parsedGroupIdFromUserInput);\n    }\n  };\n\n  return (\n    <div>\n      <div\n        style={{\n          marginTop: \"3%\",\n          display: \"flex\",\n          flexDirection: \"row\",\n          justifyContent: \"space-around\",\n        }}\n      >\n        {studentId != undefined &&\n        groupData !== undefined &&\n        groupData.groupId !== undefined &&\n        groupData.members !== undefined ? (\n          groupData.members.includes(parseInt(studentId)) ? (\n            <Box\n              boxShadow={6}\n              style={{\n                margin: \"0% 3%\",\n                width: \"20%\",\n                backgroundColor: \"white\",\n              }}\n              className={classes.boxDesign}\n            >\n              <Card>\n                <CardContent>\n                  <Typography\n                    gutterBottom\n                    variant=\"h5\"\n                    component=\"h2\"\n                    style={{\n                      backgroundColor: \"#80808026\",\n                      padding: \"2%\",\n                      overflow: \"auto\",\n                      minWidth: \"250px !important\",\n                    }}\n                  >\n                    <div>\n                      <div></div>Joining Group: #{groupData.groupId}\n                    </div>\n                  </Typography>\n                  <div>You are already in this group </div>\n                </CardContent>\n                <CardActions\n                  style={{\n                    float: \"left\",\n                  }}\n                >\n                  <div styles={{ marginTop: 30, width: \"80%\" }}>\n                    <Button\n                      disabled={isJoinGroupDisabled}\n                      variant=\"contained\"\n                      style={{\n                        // width: \"fit-content\",\n                        backgroundColor: \"#DC3545\",\n                        boxShadow: \"5px 5px 5px 0 #bbb\",\n                        color: \"white\",\n                      }}\n                      onClick={() => {\n                        setGroupData([]);\n                        setGroupIdToJoin(undefined);\n                        setJoinGroupUserInput(\"\");\n                      }}\n                    >\n                      Join a different group\n                    </Button>\n                  </div>\n                </CardActions>\n                {/*\n                <CardActions\n                  style={{\n                    float: \"right\",\n                  }}\n                >\n                  <Link to=\"/GroupManagement\">\n                    <Button\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {}}\n                    >\n                      Return To Group Management\n                    </Button>\n                  </Link>\n                </CardActions>\n                */}\n              </Card>\n            </Box>\n          ) : (\n            <Box\n              boxShadow={6}\n              style={{\n                margin: \"0% 3%\",\n                width: \"24%\",\n                backgroundColor: \"white\",\n              }}\n              className={classes.boxDesign}\n            >\n              <Card>\n                <div>\n                  <CardContent>\n                    <Typography\n                      gutterBottom\n                      variant=\"h5\"\n                      component=\"h2\"\n                      style={{\n                        backgroundColor: \"#80808026\",\n                        padding: \"2%\",\n                        overflow: \"auto\",\n                        minWidth: \"250px !important\",\n                      }}\n                    >\n                      <div\n                        style={{\n                          flexDirection: \"column\",\n                          justifyContent: \"center\",\n                          alignItems: \"center\",\n                          alignContent: \"center\",\n                        }}\n                      >\n                        <div>\n                          <div></div>Joining Group: #{groupData.groupId}\n                        </div>\n                      </div>\n                    </Typography>\n                    <div>Members: </div>\n                    {groupData.members.map((memberId, index) => {\n                      if (memberId !== undefined && memberId !== null)\n                        return (\n                          <div>\n                            <PersonIcon /> #{memberId}\n                            {/*\n                            <PersonIcon /> #{memberId + \", \" + \"Namelol\"}\n                          */}\n                          </div>\n                        );\n                    })}\n                  </CardContent>\n                  <CardActions\n                    style={{\n                      float: \"left\",\n                    }}\n                  >\n                    <div styles={{ marginTop: 30, width: \"80%\" }}>\n                      <Button\n                        disabled={isJoinGroupDisabled}\n                        variant=\"contained\"\n                        style={{\n                          // width: \"fit-content\",\n                          backgroundColor: \"#DC3545\",\n                          boxShadow: \"5px 5px 5px 0 #bbb\",\n                          color: \"white\",\n                        }}\n                        onClick={() => {\n                          setGroupData([]);\n                          setGroupIdToJoin(undefined);\n                          setJoinGroupUserInput(\"\");\n                        }}\n                      >\n                        Join a different group\n                      </Button>\n                    </div>\n                  </CardActions>\n                  <CardActions\n                    style={{\n                      float: \"right\",\n                    }}\n                  >\n                    <div styles={{ marginTop: 30, width: \"80%\" }}>\n                      <Button\n                        variant=\"contained\"\n                        color=\"primary\"\n                        style={{\n                          boxShadow: \"5px 5px 5px 0 #bbb\",\n                        }}\n                        onClick={() => {\n                          addMemberToGroup();\n                        }}\n                      >\n                        Join Group\n                      </Button>\n                    </div>\n                  </CardActions>\n                </div>\n              </Card>\n            </Box>\n          )\n        ) : (\n          <div>\n            <Box\n              boxShadow={6}\n              style={{\n                backgroundColor: \"white\",\n              }}\n              className={classes.boxDesign}\n            >\n              <Card style={{ width: 500 }}>\n                <CardContent\n                  style={{\n                    display: \"flex\",\n                    flexDirection: \"column\",\n                    width: \"100%\",\n                    height: 150,\n                  }}\n                >\n                  <div style={{ marginBottom: 10 }}>\n                    Enter Group ID or Join Group URL\n                  </div>\n                  <input\n                    type=\"text\"\n                    placeholder=\"Enter Group ID to join\"\n                    style={{\n                      padding: \"4px 4px 4px 4px\",\n                      borderRadius: \"4px\",\n                      outline: \"none\",\n                      border: \"1px solid black\",\n                      backgroundColor: \"initial !important\",\n                    }}\n                    value={joinGroupUserInput}\n                    onChange={(e) => {\n                      setErrorMessage(\"\");\n                      setJoinGroupUserInput(e.target.value);\n                    }}\n                    onKeyDown={(e) => {\n                      try {\n                        let keypress = e.code;\n                        if (\n                          (keypress === \"Enter\" ||\n                            keypress === \"NumpadEnter\") &&\n                          !isJoinGroupDisabled\n                        ) {\n                          triggerGroupCheck();\n                        }\n                      } catch {\n                        // do nothing\n                      }\n                    }}\n                  ></input>\n                  <div style={{ marginTop: 20, color: \"red\" }}>\n                    {errorMessage !== undefined && errorMessage.length > 1\n                      ? errorMessage\n                      : \"\"}\n                  </div>\n                </CardContent>\n                <CardActions\n                  style={{\n                    float: \"right\",\n                  }}\n                >\n                  <div styles={{ marginTop: 30, width: \"80%\" }}>\n                    <Button\n                      disabled={isJoinGroupDisabled}\n                      variant=\"contained\"\n                      color=\"primary\"\n                      onClick={() => {\n                        triggerGroupCheck();\n                      }}\n                    >\n                      Find Group\n                    </Button>\n                  </div>\n                </CardActions>\n              </Card>\n            </Box>\n          </div>\n        )}\n      </div>\n      <div>{toGroupManagement ? <Redirect to=\"/GroupManagement\" /> : null}</div>\n    </div>\n  );\n}\n\nexport default JoinGroup;\n","export default __webpack_public_path__ + \"static/media/AddingMember.71d0669a.mp4\";","export default __webpack_public_path__ + \"static/media/DeletingGroup.564c5911.mp4\";","export default __webpack_public_path__ + \"static/media/ClickingWeeks.fd1591c6.mp4\";","export default __webpack_public_path__ + \"static/media/NameChangeVideo.1b65d4d9.mp4\";","import { React, useState, useEffect } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AccountBoxIcon from \"@material-ui/icons/AccountBox\";\nimport GroupIcon from \"@material-ui/icons/Group\";\nimport CalendarTodayIcon from \"@material-ui/icons/CalendarToday\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport urlTutVid from \"./tutorialGIFs/FullImportStep.mp4\";\nimport groupTutVid from \"./tutorialGIFs/CreateGroup.mp4\";\nimport addingMember from \"./tutorialGIFs/AddingMember.mp4\";\nimport deleteGroup from \"./tutorialGIFs/DeletingGroup.mp4\";\nimport weeksNav from \"./tutorialGIFs/ClickingWeeks.mp4\";\nimport nameChange from \"./tutorialGIFs/NameChangeVideo.mp4\";\nimport { MenuList } from \"@material-ui/core\";\n\nexport function TutorialPage() {\n  const [activeStep, setActiveStep] = useState();\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      minWidth: 275,\n    },\n    bullet: {\n      display: \"inline-block\",\n      margin: \"0 2px\",\n      transform: \"scale(0.8)\",\n    },\n    title: {\n      fontSize: 14,\n    },\n    pos: {\n      marginBottom: 12,\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      flexBasis: \"33.33%\",\n      flexShrink: 0,\n    },\n    secondaryHeading: {\n      fontSize: theme.typography.pxToRem(15),\n      color: theme.palette.text.secondary,\n    },\n    buttonDesign: {\n      boxShadow: \"0px 8px 15px rgba(0, 0, 0, 0.1)\",\n      color: \"#000\",\n      padding: \"10px 10px\",\n      backgroundColor: \"#fbfbfb\",\n      border: \"none\",\n      borderRadius: \"45px\",\n      transition: \"all 0.3s ease 0s\",\n      cursor: \"pointer\",\n      outline: \"none\",\n      \"&:hover\": {\n        boxShadow: \"0px 10px 15px #ff5138\",\n        transform: \"translateY(-7px)\",\n      },\n    },\n    sideNavBarActive: {\n      borderBottom: \"5px solid #ff5138 !important\",\n      backgroundColor: \"#fbfbfb\",\n    },\n    expandIconRoot: {\n      boxShadow: \"grey 5px 5px 5px 0px\",\n      transition: \"all 0.3s ease 0s\",\n      \"&:hover\": {\n        boxShadow: \"0px 10px 15px #ff5942\",\n        transform: \"translateY(-2px)\",\n      },\n    },\n  }));\n\n  const classes = useStyles();\n  const [expanded, setExpanded] = useState(false);\n\n  const handleChange = (panel) => (event, isExpanded) => {\n    setExpanded(isExpanded ? panel : false);\n  };\n\n  //Card Content\n  function getCardContent(stepIndex) {\n    switch (stepIndex) {\n      case 0:\n        return profileTut();\n      case 1:\n        return timetableTut();\n      case 2:\n        return groupTut();\n      default:\n        return (\n          <div>\n            <br></br>\n            <b>Click</b> on any tabs from the left, to find what you need.\n          </div>\n        );\n    }\n  }\n\n  function profileTut() {\n    return (\n      <div>\n        <p style={{ fontSize: \"2em\", paddingBottom: \"10px\" }}>Your Profile</p>\n\n        <div\n          style={{\n            padding: \"20px 30px 30px\",\n            backgroundColor: \"#f2f2f2\",\n          }}\n        >\n          <p style={{ fontSize: \"1.5em\", paddingBottom: \"10px\" }}>\n            Profile Overview\n          </p>\n\n          <p>\n            Your MixTime Profile provides you with visibility of your basic\n            account information. Each account, is uniquely assigned an ID when\n            you enter your name for the first time. The user ID for your profile\n            is essential, as that is what your group members can add and\n            recognise you via.\n          </p>\n          <br></br>\n          <p>\n            Depending on the groups you have joined, you can see each of the\n            overlaying timetables from the <b>Group Timetable</b> tab.\n          </p>\n          <br></br>\n          <p>\n            You <b>must</b> import your NUSMods timetable into MixTime, to see\n            it on your <b>Timetable Page</b>.\n          </p>\n          <br></br>\n\n          <Accordion\n            expanded={expanded === \"panel1\"}\n            onChange={handleChange(\"panel1\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1bh-content\"\n              id=\"panel1bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Your Account Details\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                Information on your <b>student ID</b>.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  Hello <b>{localStorage.getItem(\"studentName\")}</b>, your User\n                  ID is <b>{localStorage.getItem(\"studentId\")}</b>. \n                  <br></br>\n                  <br></br>\n                  Your User ID is tied\n                  to your profile and you cannot change it. Other MixTime users\n                  can add you via this ID number.\n                </p>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel2\"}\n            onChange={handleChange(\"panel2\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1bh-content\"\n              id=\"panel1bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Changing Names\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                How to <b>change names</b> on MixTime.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>You can change your name as you like on MixTime.</p>\n                <br></br>\n                <p>\n                  To <b>change</b> your name, follow these steps:\n                </p>\n                <ol>\n                  <li>\n                    1. On the top right of your screen, just beside your name,\n                    click on the <CreateIcon></CreateIcon> button.\n                  </li>\n                  <li>2. Your name will change into a textbox.</li>\n                  <li>3. Click on it, and change it to anything you need.</li>\n                  <li>\n                    4. When you are done, click on the <SaveIcon />.\n                  </li>\n                  <li>\n                    5. Your name has been successfully changed. You should be\n                    able to see the update now. If you can't, try to refresh\n                    your browser.\n                  </li>\n                </ol>\n                <br></br>\n                <p>\n                  See video steps <b>here</b>:\n                </p>\n                  <video key={nameChange} controls muted style={{ width: \"70%\" }}>\n                  <source src={nameChange} type=\"video/mp4\" />\n                </video>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n      </div>\n    );\n  }\n\n  function timetableTut() {\n    return (\n      <div>\n        <p style={{ fontSize: \"2em\", paddingBottom: \"10px\" }}>\n          Your MixTime Timetable\n        </p>\n\n        <div\n          style={{\n            padding: \"20px 30px 30px\",\n            backgroundColor: \"#f2f2f2\",\n          }}\n        >\n          <p style={{ fontSize: \"1.5em\", paddingBottom: \"10px\" }}>\n            Timetable Overview\n          </p>\n\n          <p>\n            Your MixTime Timetable is a display of your imported NUSMods\n            timetable. It allows you to add non-curricular events. These events\n            will be kept anonymous to other group members, and they will not be\n            able to see its description.\n          </p>\n          <br></br>\n          <p>\n            Depending on your schedule, the timetable will be able to display\n            weekend events, on top of your curricular events at NUS. Click on\n            one of the tabs below to find out more.\n          </p>\n          <br></br>\n          <Accordion\n            expanded={expanded === \"panel1\"}\n            onChange={handleChange(\"panel1\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1bh-content\"\n              id=\"panel1bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Importing Your Timetable\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                Steps on how to <b>import</b> your timetables from NUSMods.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  You <b>must</b> import your NUSMods timetable into MixTime, to\n                  see it on your <b>Timetable Page</b>.\n                </p>\n                <br></br>\n                <p>\n                  To <b>import your timetable</b>, follow these steps:\n                </p>\n                <ol>\n                  <li>\n                    1. Head over to{\" \"}\n                    <u>\n                      <a href=\"https://nusmods.com/\">NUSMods</a>\n                    </u>{\" \"}\n                    website.\n                  </li>\n                  <li>\n                    2. You should see your own timetable. Click on the\n                    \"Share/Sync\" button.\n                  </li>\n                  <li>3. Click on the Copy icon.</li>\n                  <li>\n                    4. Paste your link into MixTime, under the{\" \"}\n                    <b>Enter NUSMods Sharing URL</b> textbox.\n                  </li>\n                  <li>\n                    5. Head back to MixTime's website and navigate to the URL\n                    textbox on the <b>My Timetable</b> page.\n                  </li>\n                  <li>\n                    6. Place the copied NUSMods URL, and click on the{\" \"}\n                    <b>Update Timetable</b> button.\n                  </li>\n                  <li>\n                    7. Your timetable has been successfully added. You can see\n                    it from the \"My Timetable\" tab.\n                  </li>\n                </ol>\n                <br></br>\n                <p>\n                  See video steps <b>here</b>:\n                </p>\n                <video key={urlTutVid} controls muted style={{ width: \"70%\" }}>\n                  <source src={urlTutVid} type=\"video/mp4\" />\n                </video>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel2\"}\n            onChange={handleChange(\"panel2\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Adding New Events\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                You can <b>add events</b> into your timetable.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  You can <b>add an event</b> into your MixTime timetables, on\n                  top of your NUSMods timetable.\n                </p>\n                <br></br>\n                <p>\n                  To <b>add</b> new events, follow these steps:\n                </p>\n                <ol>\n                  <li>\n                    1. In the <b>My Timetable</b> page. On the right of your\n                    screen, click on the <b>Create Event</b> button.\n                  </li>\n                  <li>\n                    2. A prompt will appear. Enter the event details\n                    accordingly.\n                  </li>\n                  <li>\n                    3. When you are done, click on the <b>Submit</b> button.\n                  </li>\n                  <li>\n                    4. Your name has been successfully changed. You should be\n                    able to see the update now. If you can't, try to refresh\n                    your browser.\n                  </li>\n                </ol>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel3\"}\n            onChange={handleChange(\"panel3\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Navigating The Weeks\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                You can go through different <b>weeks</b> to check your\n                schedule.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  On MixTime, we follow the <b>same semestral periods</b> as\n                  NUS. You can go through each week by clicking on the week\n                  number.\n                </p>\n                <br></br>\n                <p>\n                  Each week should display your timetable schedules, based on\n                  your imported timetable. If you cannot see it, refer to{\" \"}\n                  <b>Importing Your Timetable</b> tab.\n                </p>\n\n                <br></br>\n                <p>\n                  Note that week 7 is also the recess week, hence there should\n                  be no lessons appearing on that page. To get to each page,\n                  simply click on the corresponding page number.\n                </p>\n                <video\n                  key={weeksNav}\n                  autoPlay\n                  loop\n                  muted\n                  style={{ width: \"70%\" }}\n                >\n                  <source src={weeksNav} type=\"video/mp4\" />\n                </video>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n          <br></br>\n        </div>\n      </div>\n    );\n  }\n\n  function groupTut() {\n    return (\n      <div>\n        <p style={{ fontSize: \"2em\", paddingBottom: \"10px\" }}>\n          Your MixTime Groups\n        </p>\n\n        <div\n          style={{\n            padding: \"20px 30px 30px\",\n            backgroundColor: \"#f2f2f2\",\n          }}\n        >\n          <p style={{ fontSize: \"1.5em\", paddingBottom: \"10px\" }}>\n            Manage Groups Overview\n          </p>\n\n          <p>\n            In MixTime, you are able to form groups. These groups will allow you\n            to see what are some timeslots that your group members are\n            unavailable. You can plan for meetings based on the free timeslots.\n          </p>\n          <br></br>\n          <p>\n            Additionally, you can manage your groups, remove members, add them,\n            or delete the group entirely. Click on one of the tabs below to find\n            out more.\n          </p>\n\n          <br></br>\n          <Accordion\n            expanded={expanded === \"panel1\"}\n            onChange={handleChange(\"panel1\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Creating A Group\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                Steps on how to <b>create</b> groups.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  To <b>create a group</b>, follow these steps:\n                </p>\n                <ol>\n                  <li>\n                    1. Head over to the <b>Manage Groups</b> page.\n                  </li>\n                  <li>2. Click on the big (+) icon.</li>\n                  <li>\n                    3. Enter your <b>Group Name</b>.\n                  </li>\n                  <li>\n                    4. Enter number of group members (I.e., 5 members, this\n                    includes you).\n                  </li>\n                  <li>\n                    5. Enter each group member's ID. Their IDs are found at the\n                    top right of their own screens.\n                  </li>\n                  <li>\n                    6. When you are done, click <b>OK</b>. You should see a new\n                    group appearing on the page. Wait for awhile or refresh if\n                    you don't see any.\n                  </li>\n                </ol>\n                <br></br>\n                <p>\n                  See video steps <b>here</b>:\n                </p>\n                <video\n                  key={groupTutVid}\n                  controls\n                  muted\n                  style={{ width: \"70%\" }}\n                >\n                  <source src={groupTutVid} type=\"video/mp4\" />\n                </video>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel2\"}\n            onChange={handleChange(\"panel2\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Adding Group Members\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                Adding members to your MixTime group.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  You can <b>add</b> other MixTime users into the groups you\n                  have formed.\n                </p>\n                <br></br>\n                <p>\n                  To <b>add other members</b>, follow these steps:\n                </p>\n                <ol>\n                  <li>\n                    1. Head over to the <b>Manage Groups</b> page.\n                  </li>\n                  <li>\n                    2. Click on the <b>Add Member</b> button, in the group that\n                    you wish to add your members.\n                  </li>\n                  <li>\n                    3. A dialog will appear at the top of your screen. Enter\n                    your member's <b>User ID</b>.\n                  </li>\n                  <li>\n                    4. When you are done, click on <b>OK</b>. You should see\n                    your member's name in the corresponding group card. Wait for\n                    awhile or refresh if you don't see any.\n                  </li>\n\n                  <br></br>\n                  <p>\n                    See video steps <b>here</b>:\n                  </p>\n                  <video\n                    key={addingMember}\n                    controls\n                    muted\n                    style={{ width: \"70%\" }}\n                  >\n                    <source src={addingMember} type=\"video/mp4\" />\n                  </video>\n                </ol>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel3\"}\n            onChange={handleChange(\"panel3\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Editing Your Group Name\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                Rename your group based on your preferences.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  You can <b>only</b> change your group name on the{\" \"}\n                  <b>Manage Groups page</b>.\n                </p>\n                <br></br>\n                <p>\n                  To <b>change your group name</b>, follow these steps:\n                </p>\n                <ol>\n                  <li>\n                    1. Head over to the <b>Manage Groups</b> page.\n                  </li>\n                  <li>\n                    2. Click on the <CreateIcon /> icon.\n                  </li>\n                  <li>\n                    3. Enter your <b>desired Group Name</b>.\n                  </li>\n                  <li>\n                    4. When you are done, click on the <SaveIcon />. You should\n                    see your new group name. Wait for awhile or refresh if you\n                    don't see any.\n                  </li>\n                </ol>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel4\"}\n            onChange={handleChange(\"panel4\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Leaving Your Group\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                You can <b>leave a MixTime group</b> when you no longer need it.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  When you leave a MixTime group, <b>only</b> you will be{\" \"}\n                  <b>removed</b> from the group. Everyone else inside the group\n                  will still remain there.\n                </p>\n                <br></br>\n                <p>\n                  To <b>leave a group</b>, follow these steps:\n                </p>\n                <br></br>\n\n                <ol>\n                  <li>\n                    1. Head over to the <b>Manage Groups</b> page.\n                  </li>\n                  <li>\n                    2. Click on the <b> Leave Group </b> button.\n                  </li>\n                  <li>\n                    3. A <b>prompt</b> will appear on the top of your screen.\n                  </li>\n                  <li>\n                    4. Click on <b>OK</b> if you really want to leave group.\n                  </li>\n                  <li>\n                    5. You will see a message on the top right of your screen.\n                    This will tell you whether you have left the group or not.\n                  </li>\n                </ol>\n\n                <br></br>\n                <p>\n                  If you have <b>left a group by accident</b>, simply tell your\n                  group members to add you back in via your User ID (\n                  {localStorage.getItem(\"studentId\")}).\n                </p>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n\n          <Accordion\n            expanded={expanded === \"panel5\"}\n            onChange={handleChange(\"panel5\")}\n          >\n            <AccordionSummary\n              className={classes.expandIconRoot}\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2bh-content\"\n              id=\"panel2bh-header\"\n            >\n              <Typography className={classes.heading}>\n                Deleting A Group\n              </Typography>\n              <Typography className={classes.secondaryHeading}>\n                Deleting a MixTime group which you don't need.\n              </Typography>\n            </AccordionSummary>\n            <Divider />\n            <AccordionDetails>\n              <Typography>\n                <p>\n                  When you delete a MixTime group, it is a permanent action. The\n                  group will <b>no longer</b> be available to anyone after\n                  deletion.\n                </p>\n                <br></br>\n                <p>\n                  You <b>must</b> remove everyone from the group first, before\n                  being able to delete the group.\n                </p>\n                <br></br>\n                <p>\n                  To <b>delete a group</b>, follow these steps:\n                </p>\n                <br></br>\n\n                <ol>\n                  <li>\n                    1. Head over to the <b>Manage Groups</b> page.\n                  </li>\n                  <li>\n                    2. Click on the <DeleteIcon /> icon.\n                  </li>\n                  <li>\n                    3. A <b>prompt</b> will appear on the top of your screen.\n                  </li>\n                  <li>\n                    4. Click on <b>OK</b> if you really want to delete the\n                    group.\n                  </li>\n                  <li>\n                    5. You will see a message on the top right of your screen.\n                    This will tell you whether the deletion is successful.\n                  </li>\n                  <br></br>\n                  <p>\n                    See video steps <b>here</b>:\n                  </p>\n                  <video\n                    key={deleteGroup}\n                    controls\n                    muted\n                    style={{ width: \"70%\" }}\n                  >\n                    <source src={deleteGroup} type=\"video/mp4\" />\n                  </video>\n                </ol>\n              </Typography>\n            </AccordionDetails>\n          </Accordion>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div>\n      <p\n        style={{\n          textAlign: \"center\",\n          marginTop: \"30px\",\n          fontWeight: \"600\",\n          fontSize: \"2em\",\n          fontFamily: \"Lato, sans-serif\",\n        }}\n      >\n        Hello {localStorage.getItem(\"studentName\")}. How can we help you?\n      </p>\n      <br></br>\n      <div\n        style={{\n          display: \"-webkit-inline-box\",\n          marginLeft: \"13%\",\n        }}\n      >\n        <div>\n          <MenuList\n            style={{\n              display: \"contents\",\n              width: \"10%\",\n              boxShadow: \"0 5px 10px 5px rgb(0 0 0 / 15%)\",\n              color: \"black\",\n            }}\n          >\n            <MenuItem\n              selected={activeStep === 0 ? true : false}\n              onClick={() => setActiveStep(0)}\n              classes={{\n                root: classes.buttonDesign,\n                selected: classes.sideNavBarActive,\n              }}\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n            >\n              <AccountBoxIcon /> &nbsp;&nbsp; About Profiles\n            </MenuItem>\n            <Divider />\n\n            <MenuItem\n              selected={activeStep === 1 ? true : false}\n              onClick={() => setActiveStep(1)}\n              classes={{\n                root: classes.buttonDesign,\n                selected: classes.sideNavBarActive,\n              }}\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n            >\n              <CalendarTodayIcon /> &nbsp;&nbsp; About Timetables\n            </MenuItem>\n            <Divider />\n\n            <MenuItem\n              selected={activeStep === 2 ? true : false}\n              onClick={() => setActiveStep(2)}\n              classes={{\n                root: classes.buttonDesign,\n                selected: classes.sideNavBarActive,\n              }}\n              style={{ marginTop: \"10px\", marginBottom: \"10px\" }}\n            >\n              <GroupIcon /> &nbsp;&nbsp; About Groups\n            </MenuItem>\n            <Divider />\n          </MenuList>\n        </div>\n\n        <div style={{ clear: \"both\" }} />\n\n        <div\n          style={{\n            width: \"80%\",\n            paddingLeft: \"20px\",\n          }}\n        >\n          <Typography>{getCardContent(activeStep)}</Typography>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default TutorialPage;\n","import { React, Fragment, useState, useEffect } from \"react\";\n\nimport { Button, setRef } from \"@material-ui/core\";\n\nimport Paper from \"@material-ui/core/Paper\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport PersonIcon from \"@material-ui/icons/Person\";\nimport RemoveCircleOutlineIcon from \"@material-ui/icons/RemoveCircleOutline\";\nimport CreateIcon from \"@material-ui/icons/Create\";\nimport SaveIcon from \"@material-ui/icons/Save\";\nimport UndoIcon from \"@material-ui/icons/Undo\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport UnarchiveIcon from \"@material-ui/icons/Unarchive\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport { Unarchive } from \"@material-ui/icons\";\n\nimport { useHistory } from \"react-router-dom\";\nimport { Link } from \"react-router-dom\";\n\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport { useDatabase } from \"../Contexts/DatabaseContext\";\n\ntoast.configure();\n\nconst useStyles = makeStyles({\n  root: {\n    margin: \"2%\",\n    //width: \"25%\",\n    display: \"inline\",\n  },\n  paper: {\n    backgroundColor: \"#FFF\",\n  },\n  media: {\n    height: 140,\n  },\n  cardColumn: {\n    padding: \"10px\",\n  },\n  boxDesign: {\n    transition: \"all 0.3s ease 0s\",\n    \"&:hover\": {\n      boxShadow: \"0px 10px 15px #ff5942\",\n      transform: \"translateY(-7px)\",\n    },\n  },\n});\n\nfunction ViewArchivedGroups(props) {\n  const database = useDatabase();\n  const classes = useStyles();\n  // ========================================================== STUDENTS ==========================================================\n  const [studentId, setStudentId] = useState(localStorage.getItem(\"studentId\"));\n  const [studentName, setStudentName] = useState(\n    localStorage.getItem(\"studentName\")\n  );\n\n  let createStudentId = (studentName) => {\n    var query = database.ref(\"Students/\").orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key;\n        setStudentId(parseInt(key) + 1);\n        localStorage.setItem(\"studentId\", parseInt(key) + 1);\n      });\n      createStudentRecord(studentName);\n    });\n  };\n\n  let createStudentRecord = (studentName) => {\n    var studentsRef = database.ref(`Students/`);\n    studentsRef\n      .child(localStorage.getItem(\"studentId\"))\n      .child(\"name\")\n      .set(studentName);\n    setRefreshKey(refreshKey + 1);\n    localStorage.setItem(\"studentName\", studentName);\n  };\n\n  let getStudentName = (studentId) => {\n    var studentsRef = database.ref(\n      `Students/${localStorage.getItem(\"studentId\")}/name`\n    );\n    studentsRef.once(\"value\").then((snapshot) => {\n      setStudentName(snapshot.val());\n    });\n  };\n\n  // ========================================================== GROUPS ==========================================================\n  const [studentGroups, setStudentGroups] = useState([]);\n  const [, setGroupId] = useState();\n  const [groupMembers, setGroupMembers] = useState([]);\n\n  // const [search, setSearch] = useState(\"\");\n\n  // const filteredStudentGroups = studentGroups.filter((g) => {\n  //   return g.groupName.toLowerCase().includes(search.toLowerCase());\n  // });\n\n  // useEffect(() => {\n  //   studentGroups.filter((g) => {\n  //     console.log(\">>>>>\" + g.groupName);\n  //     console.log(search + \"<<<<<<<<<<\");\n  //     console.log(g.groupName.toLowerCase().includes(search.toLowerCase()));\n  //   });\n  // }, [filteredStudentGroups]);\n\n  let getStudentGroups = () => {\n    setStudentGroups([]);\n\n    var tempStudentGroups = [];\n\n    var studentGroupRef = database.ref(`Groups/`);\n    studentGroupRef.once(\"value\").then((snapshot) => {\n      var data = snapshot.val();\n      for (var index in data) {\n        var element = data[index];\n        if (localStorage.getItem(\"studentId\") != null) {\n          if (element !== undefined && element.members !== undefined) {\n            Object.values(element.members).forEach((studID) => {\n              if (studID == localStorage.getItem(\"studentId\")) {\n                tempStudentGroups.push(element);\n              }\n            });\n          }\n        }\n      }\n      setStudentGroups(tempStudentGroups);\n    });\n  };\n\n  const [groupMemberName, setGroupMemName] = useState([]);\n  let getGroupMemberName = () => {\n    setGroupMemName([]);\n\n    var studentNameRef = database.ref(\"Students/\");\n    studentNameRef.once(\"value\").then((snapshot) => {\n      setGroupMemName(snapshot);\n    });\n  };\n\n  let getGMN = (studID) => {\n    var name = \"\";\n    groupMemberName.forEach((stud) => {\n      if (parseInt(stud.key) === parseInt(studID)) {\n        name = stud.val().name;\n      }\n    });\n    return name;\n  };\n\n  let createGroupId = () => {\n    var groupName = prompt(\"Enter group name\");\n    if (groupName == null) {\n      toast.success(\"The creation of group has been cancelled.\");\n      return;\n    }\n\n    var query = database.ref(\"Groups/\").orderByKey();\n    query.once(\"value\").then(function (snapshot) {\n      snapshot.forEach(function (childSnapshot) {\n        var key = childSnapshot.key;\n        localStorage.setItem(\"groupId\", parseInt(key) + 1);\n        setGroupId(parseInt(key) + 1);\n      });\n      //only create group entry without other members\n      groupMembers.push(parseInt(studentId)); //to set this will always be key = 0, to prevent error undefined members.0\n      var groupsRef = database.ref(`Groups/${localStorage.getItem(\"groupId\")}`);\n      groupsRef.child(\"groupId\").set(parseInt(localStorage.getItem(\"groupId\")));\n      groupsRef.child(\"groupName\").set(groupName);\n      setGroupMembers(groupMembers);\n      groupsRef.child(\"members\").set(groupMembers);\n      toast.success(\n        \"Group name: \" + groupName + \" has been created successfully.\"\n      );\n      setRefreshKey(refreshKey + 1);\n    });\n  };\n\n  //create group entry with other members\n  // let createGroup = (groupName, groupId) => {\n  //   var noOfGroupMembers = prompt(\"Enter the number of members you want to add\");\n  //   if (noOfGroupMembers == null) {\n  //     toast.success(\"The creation of group has been cancelled.\");\n  //     return;\n  //   }\n\n  //   groupMembers.push(parseInt(studentId)); //to set this will always be key = 0, to prevent error undefined members.0\n  //   if (parseInt(noOfGroupMembers) > 0) {\n  //     for (var i = 0; i < noOfGroupMembers; i++) {\n  //       var memberId = prompt(\"Enter member ID for member \" + (i+1));\n  //       if (memberId == null) {\n  //         toast.success(\"The creation of group has been cancelled.\");\n  //         return;\n  //       }\n\n  //       if (parseInt(memberId) == parseInt(studentId)) {\n  //         toast.success(\"You are not allowed to add your own Student ID.\");\n  //         return;\n  //       }\n\n  //       groupMembers.push(parseInt(memberId));\n  //     }\n  //   }\n\n  //   var groupsRef = database.ref(`Groups/${localStorage.getItem(\"groupId\")}`);\n  //   groupsRef.child(\"groupId\").set(parseInt(localStorage.getItem(\"groupId\")));\n  //   groupsRef.child(\"groupName\").set(groupName);\n\n  //   // groupMembers.push(parseInt(studentId));\n  //   setGroupMembers(groupMembers);\n  //   groupsRef.child(\"members\").set(groupMembers);\n\n  //   toast.success(\n  //     \"Group name: \" + groupName + \" has been created successfully.\"\n  //   );\n  //   setRefreshKey(refreshKey + 1);\n  // };\n\n  let addMemberToGroup = (groupId) => {\n    for (var i = 0; i < studentGroups.length; i++) {\n      if (studentGroups[i].groupId === groupId) {\n        var membersList = studentGroups[i].members;\n        for (var j = 0; j < membersList.length; j++) {\n          if (membersList[j] !== undefined) {\n            groupMembers.push(membersList[j]);\n          }\n        }\n      }\n    }\n    setGroupMembers(groupMembers);\n\n    var memberId = prompt(\n      \"Enter member ID.\\nNote: You do not need to add your own ID. \\nYour ID is displayed on the top right hand corner beside your name.\"\n    );\n    if (memberId == null) {\n      toast.success(\"Member addition has been cancelled.\");\n      return;\n    }\n\n    if (parseInt(memberId) == parseInt(studentId)) {\n      toast.error(\"You are not allowed to add your own Student ID\");\n      return;\n    }\n\n    //check if this memberId exist in the system\n    var newMemberName = getGMN(memberId);\n    if (newMemberName === undefined) {\n      toast.error(\"There is no record of this member.\");\n      return;\n    }\n\n    groupMembers.push(parseInt(memberId));\n\n    database.ref(`Groups/`).child(groupId).child(\"members\").set(groupMembers);\n\n    toast.success(\n      \"Member ID: \" +\n        memberId +\n        \" has been added to Group ID: \" +\n        groupId +\n        \" successfully.\"\n    );\n    getGroupMembersInAGroup(groupId);\n    setRefreshKey(refreshKey + 1);\n  };\n\n  const removeAllOtherMembersFromGroup = (groupId) => {\n    groupMembers.push(parseInt(localStorage.getItem(\"studentId\")));\n    setGroupMembers(groupMembers);\n\n    database.ref(`Groups/`).child(groupId).child(\"members\").set(groupMembers);\n\n    var removeAllMembersPrompt = window.confirm(\n      \"Are you sure you want to remove all other members from Group ID: #\" +\n        groupId +\n        \"?\"\n    );\n    if (!removeAllMembersPrompt) {\n      toast.success(\"Removal of all members has been cancelled.\");\n      return;\n    }\n    toast.success(\"All other group members have been removed successfully.\");\n    setRefreshKey(refreshKey + 1);\n  };\n\n  let removeStudentFromGroup = (groupId, removeStudentId) => {\n    //Leave Group\n    if (\n      parseInt(removeStudentId) == parseInt(localStorage.getItem(\"studentId\"))\n    ) {\n      var leaveGroupPrompt = window.confirm(\n        `Are you sure you want to leave the group? Leaving a group means all members will stay, but only you are removed.\\n\\nYou will not be able to view the group related information anymore.`\n      );\n      if (leaveGroupPrompt) {\n        var removeStudentRef = database.ref(`Groups/${groupId}/members/`);\n        removeStudentRef.once(\"value\").then((snapshot) => {\n          snapshot.forEach((studentID) => {\n            if (studentID.val() == removeStudentId) {\n              removeStudentRef.child(studentID.key).remove();\n            }\n          });\n        });\n      } else {\n        return;\n      }\n    } else {\n      //Remove student\n\n      var removeStudentPrompt = window.confirm(\n        `Are you sure you want to remove ${getGMN(\n          removeStudentId\n        )} (#${removeStudentId}) from the group?\\n\\nThe member will no longer be able to see the group related information.`\n      );\n      if (removeStudentPrompt) {\n        var removeStudentRef = database.ref(`Groups/${groupId}/members/`);\n        removeStudentRef.once(\"value\").then((snapshot) => {\n          snapshot.forEach((studentID) => {\n            if (studentID.val() == removeStudentId) {\n              removeStudentRef.child(studentID.key).remove();\n            }\n          });\n        });\n      } else {\n        return;\n      }\n    }\n    if (\n      parseInt(removeStudentId) == parseInt(localStorage.getItem(\"studentId\"))\n    ) {\n      toast.success(\"You have left group\" + groupId + \" successfully.\");\n    } else {\n      toast.success(\n        \"Member ID: \" +\n          removeStudentId +\n          \" has been removed from Group ID: \" +\n          groupId +\n          \" successfully.\"\n      );\n    }\n    setRefreshKey(refreshKey + 1);\n  };\n\n  let getGroupMembersInAGroup = (groupId) => {\n    setGroupMembers([]);\n\n    var tempGroupMembers = [];\n\n    for (var i = 0; i < studentGroups.length; i++) {\n      if (studentGroups[i].groupId === groupId) {\n        var membersList = studentGroups[i].members;\n        for (var j = 0; j < membersList.length; j++) {\n          groupMembers.push(membersList[j]);\n        }\n      }\n    }\n    setGroupMembers(tempGroupMembers);\n  };\n\n  const [refreshKey, setRefreshKey] = useState(0);\n  useEffect(() => {\n    setRefreshKey(0);\n\n    if (localStorage.getItem(\"studentId\") == null) {\n      var studentName = prompt(\n        \"Hi! Seems like this is the first time you visited MixTime. \\nPlease enter your name and we'll tag it into your timetable.\"\n      );\n      createStudentId(studentName);\n    } else {\n      getStudentName(localStorage.getItem(\"studentId\"));\n      getStudentGroups();\n      getGroupMemberName();\n      getGroupMembersInAGroup();\n\n      // getArchivedGroups();\n    }\n  }, [refreshKey]);\n\n  const [groupNameTextboxArr, setGroupNameTextboxArr] = useState();\n  useEffect(() => {\n    var tempArray = [];\n    for (var i = 0; i < studentGroups.length; i++) {\n      tempArray.push({\n        disable: true,\n        groupId: studentGroups[i].groupId,\n        val: studentGroups[i].groupName,\n        readOnly: true,\n        allowUndo: false,\n      });\n    }\n    setGroupNameTextboxArr(tempArray);\n  }, [studentGroups]);\n\n  const [selectedCardNumber, setSelectedCardNumber] = useState();\n\n  function editGroupName(event) {\n    var groupNameInput = event.target.value;\n\n    var newArr = [...groupNameTextboxArr];\n    newArr[selectedCardNumber] = {\n      ...newArr[selectedCardNumber],\n      disable: false,\n      val: groupNameInput,\n      allowUndo: false,\n    };\n    setGroupNameTextboxArr(newArr);\n  }\n\n  function enableGroupNameEdit(cardNumber) {\n    var newArr = [...groupNameTextboxArr];\n    newArr[cardNumber] = {\n      ...newArr[cardNumber],\n      disable: false,\n      readOnly: false,\n      allowUndo: false,\n    };\n    setGroupNameTextboxArr(newArr);\n    setSelectedCardNumber(cardNumber);\n\n    localStorage.setItem(\"originalGroupName\", newArr[cardNumber].val);\n  }\n\n  function updateGroupName(cardNumber) {\n    var newArr = [...groupNameTextboxArr];\n    newArr[cardNumber] = {\n      ...newArr[cardNumber],\n      disable: true,\n      readOnly: true,\n      allowUndo: true,\n    };\n    setGroupNameTextboxArr(newArr);\n\n    if (\n      groupNameTextboxArr[cardNumber].val !==\n      localStorage.getItem(\"originalGroupName\")\n    ) {\n      toast.success(\"Group name has been updated successfully.\");\n    }\n    //To update in firebase for real logic [now is just update in client side]\n  }\n\n  function undoGroupRename(cardNumber) {\n    setRefreshKey(1);\n    var newArr = [...groupNameTextboxArr];\n    newArr[cardNumber] = {\n      ...newArr[cardNumber],\n      disable: true,\n      readOnly: true,\n      allowUndo: false,\n      val: localStorage.getItem(\"originalGroupName\"),\n    };\n\n    if (\n      groupNameTextboxArr[cardNumber].val ===\n      localStorage.getItem(\"originalGroupName\")\n    ) {\n      toast.success(\"Undo change cancelled.\");\n    } else {\n      toast.success(\"You have successfully undo changes on group rename.\");\n    }\n    localStorage.setItem(\"originalGroupName\", null);\n    setGroupNameTextboxArr(newArr);\n    //To update in firebase for real logic [now is just update in client side]\n  }\n\n  function deleteGroup(groupId, sizeOfGroup) {\n    if (sizeOfGroup > 1) {\n      //logged in user himself\n      toast.warning(\n        \"You are not allowed to delete a group with members inside.\"\n      );\n    } else if (sizeOfGroup === 1) {\n      var leaveGroupPrompt = window.confirm(\n        `Are you sure you want to delete the group?\\nYou cannot undo this.`\n      );\n\n      if (leaveGroupPrompt) {\n        database.ref(`Groups/`).child(groupId).remove();\n        toast.success(\"You have successfully deleted the group.\");\n        setRefreshKey(refreshKey + 1);\n      } else {\n        toast.success(\"Deletion of group is cancelled.\");\n      }\n    }\n  }\n\n  const [show, toggleShow] = useState(true);\n\n  const [activeStudentGroups, setActiveStudentGroups] = useState([]);\n  const activeStudentGroupsDistinct = new Set();\n\n  const [archivedGroups, setArchivedGroups] = useState([]);\n\n  useEffect(() => {\n    getArchivedGroupsFromDB();\n  }, []);\n\n  function getArchivedGroupsFromDB() {\n    var studentsRef = database.ref(\n      `Students/${localStorage.getItem(\"studentId\")}/archivedGroups`\n    );\n    studentsRef.once(\"value\").then((snapshot) => {\n      setArchivedGroups(snapshot.val());\n    });\n    //   var studentsRef = database.ref(\n    //     `Students/${localStorage.getItem(\"studentId\")}/archivedGroups`\n    //   );\n    //   studentsRef.once(\"value\").then((snapshot) => {\n    //     setArchivedGroups(snapshot.val());\n    //   });\n\n    if (archivedGroups !== undefined && archivedGroups.length !== 0) {\n      for (var i = 0; i < studentGroups.length; i++) {\n        for (var j = 0; j < archivedGroups.length; j++) {\n          if (studentGroups[i].groupId !== archivedGroups[i]) {\n            if (!studentGroups.includes(archivedGroups[i])) {\n              activeStudentGroups.push(studentGroups[i].groupId);\n              activeStudentGroupsDistinct.add(studentGroups[i].groupId);\n            }\n          }\n        }\n      }\n    } else {\n      for (var i = 0; i < studentGroups.length; i++) {\n        activeStudentGroups.push(studentGroups[i].groupId);\n        activeStudentGroupsDistinct.add(studentGroups[i].groupId);\n      }\n    }\n\n    setActiveStudentGroups(Array.from(activeStudentGroupsDistinct));\n  }\n\n  function archiveGroup(groupId) {\n    archivedGroups.push(groupId);\n    setArchivedGroups(archivedGroups);\n\n    var studentsRef = database.ref(`Students/`);\n    studentsRef\n      .child(localStorage.getItem(\"studentId\"))\n      .child(\"archivedGroups\")\n      .set(archivedGroups);\n\n    // console.log(\"temp archivedGroups!!!\" + JSON.stringify(archivedGroups))\n    // console.log(\"temp studentGroups!!!\" + JSON.stringify(studentGroups))\n    // for(var i = 0; i < studentGroups.length; i++){\n    //   for (var j = 0; j < archivedGroups.length; j++){\n    //       if (studentGroups[i].groupId !== archivedGroups[i])\n    //       {\n    //         activeStudentGroups.push(studentGroups[i].groupId);\n    //       }\n    //   }\n    // }\n    // setActiveStudentGroups(activeStudentGroups);\n\n    for (var i = 0; i < studentGroups.length; i++) {\n      for (var j = 0; j < archivedGroups.length; j++) {\n        if (studentGroups[i].groupId !== archivedGroups[i]) {\n          if (!studentGroups.includes(archivedGroups[i])) {\n            activeStudentGroups.push(studentGroups[i].groupId);\n            activeStudentGroupsDistinct.add(studentGroups[i].groupId);\n          }\n        }\n      }\n    }\n    setActiveStudentGroups(Array.from(activeStudentGroupsDistinct));\n    setRefreshKey(refreshKey + 1);\n  }\n\n  const history = useHistory();\n\n  const routeChange = () => {\n    let path = `GroupManagement`;\n    history.push(path);\n  };\n\n  return (\n    <Paper className={classes.paper} square>\n      {groupNameTextboxArr !== undefined &&\n      groupNameTextboxArr.length === studentGroups.length ? (\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            height: \"100%\",\n            wigth: \"100%\",\n            padding: \"2%\",\n          }}\n        >\n          <div>\n            <div style={{ float: \"left\" }}>\n              You are currently enrolled in {studentGroups.length} groups.\n            </div>\n            <div style={{ clear: \"both\" }}></div>\n            <div style={{ float: \"right\" }}>\n              {/* <label style={{float: \"right\"}}>\n                Filter Groups: &nbsp; &nbsp;\n                <input\n                  type=\"text\"\n                  placeholder=\"Enter search term\"\n                  style={{\n                    padding: \"4px 4px 4px 4px\",\n                    borderRadius: \"4px\",\n                    outline: \"none\",\n                    border: \"1px solid #da337a\",\n                    boxShadow: \"0px 0px 8px #da337a\",\n                    backgroundColor: \"initial !important\",\n                  }}\n                  onChange={(e) => setSearch(e.target.value)}\n                ></input>\n              </label>\n              <br></br> */}\n              <Tooltip title={<em>{\"Click here to view active groups\"}</em>}>\n                <Button\n                  style={{\n                    boxShadow: \"5px 5px 5px 0px grey\",\n                    width: \"fit-content\",\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={routeChange}\n                >\n                  <UnarchiveIcon /> &nbsp; View Active Groups\n                </Button>\n              </Tooltip>\n              &nbsp; &nbsp;\n              <Tooltip\n                title={\n                  <em>{\"Click here to minimize or expand all your groups\"}</em>\n                }\n              >\n                <Button\n                  style={{\n                    boxShadow: \"5px 5px 5px 0px grey\",\n                    width: \"fit-content\",\n                  }}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  onClick={() => toggleShow(!show)}\n                >\n                  {show ? <ExpandLessIcon /> : <ExpandMoreIcon />}\n                  {show ? \"Minimize All Groups\" : \"Expand All Groups\"}\n                </Button>\n              </Tooltip>\n            </div>\n          </div>\n\n          <div\n            style={{\n              display: \"flex\",\n              flexWrap: \"wrap\",\n              margin: \"3% 2% 0% 15%\",\n              // justifyContent: \"space-between\",\n            }}\n          >\n            {studentGroups.map((group, i) => (\n              <div style={{ padding: \"0.5% 0.5%\" }}>\n                {archivedGroups !== undefined &&\n                archivedGroups !== null &&\n                archivedGroups.includes(group.groupId) ? (\n                  <Card\n                    className={classes.root}\n                    style={{\n                      display: \"table\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <div>\n                      {/* <Tooltip\n                        title={<em>{\"Click here to archive the group\"}</em>}\n                      >\n                        <Link\n                          onClick={() => {\n                            archiveGroup(group.groupId);\n                          }}\n                          style={{ position: \"absolute\" }}\n                        >\n                          <ArchiveIcon />\n                        </Link>\n                      </Tooltip> */}\n                      <div style={{ clear: \"both\" }} />\n                      <div className=\"cardRow\">\n                        <CardContent className={classes.cardColumn}>\n                          <Typography\n                            gutterBottom\n                            variant=\"h5\"\n                            component=\"h2\"\n                            style={{\n                              backgroundColor: \"#80808026\",\n                              padding: \"2%\",\n                              overflow: \"auto\",\n                            }}\n                          >\n                            #{groupNameTextboxArr[i].groupId} -{\" \"}\n                            <input\n                              type=\"text\"\n                              disabled={groupNameTextboxArr[i].disable}\n                              value={groupNameTextboxArr[i].val}\n                              onChange={editGroupName}\n                              readOnly={groupNameTextboxArr[i].readOnly}\n                              size={groupNameTextboxArr[i].val.length - 2}\n                              style={\n                                groupNameTextboxArr[i].readOnly === false\n                                  ? {\n                                      padding: \"4px 4px 4px 4px\",\n                                      borderRadius: \"4px\",\n                                      outline: \"none\",\n                                      border: \"1px solid #da337a\",\n                                      boxShadow: \"0px 0px 8px #da337a\",\n                                      backgroundColor: \"initial !important\",\n                                    }\n                                  : {\n                                      width: \"50%\",\n                                      backgroundColor: \"initial\",\n                                    }\n                              }\n                            ></input>\n                            {groupNameTextboxArr[i].readOnly === true ? (\n                              <Link\n                                onClick={() => {\n                                  enableGroupNameEdit(i);\n                                }}\n                              >\n                                <span\n                                  style={{ color: \"black\", float: \"right\" }}\n                                >\n                                  {/* <abbr title=\"Edit Student Name\"><CreateIcon/></abbr> */}\n                                  <CreateIcon />\n                                </span>\n                              </Link>\n                            ) : (\n                              <Link\n                                onClick={() => {\n                                  updateGroupName(i);\n                                }}\n                              >\n                                <span\n                                  style={{ color: \"black\", float: \"right\" }}\n                                >\n                                  {/* <abbr title=\"Save Changes\"><SaveIcon /></abbr> */}\n                                  <SaveIcon />\n                                </span>\n                              </Link>\n                            )}\n                            {/* For Iteration 2 - Undo group name */}\n                            {groupNameTextboxArr[i].allowUndo === true &&\n                            localStorage.getItem(\"originalGroupName\") !==\n                              groupNameTextboxArr[i].val ? (\n                              <span style={{ float: \"right\" }}>\n                                <Link\n                                  onClick={() => {\n                                    undoGroupRename(i);\n                                  }}\n                                >\n                                  <UndoIcon />\n                                </Link>\n                              </span>\n                            ) : (\n                              <span></span>\n                            )}\n                          </Typography>\n\n                          {show && (\n                            <div>\n                              Other Members:\n                              {Object.values(group.members).map((memId, i) => (\n                                <div>\n                                  {memId !=\n                                  localStorage.getItem(\"studentId\") ? (\n                                    <div>\n                                      <div style={{ float: \"left\" }}>\n                                        <PersonIcon /> #\n                                        {memId + \", \" + getGMN(memId)}\n                                      </div>\n                                      {\"      \"}\n\n                                      <div style={{ float: \"right\" }}>\n                                        <Link\n                                          style={{\n                                            width: \"fit-content\",\n                                            float: \"right\",\n                                            display: \"inline\",\n                                            color: \"#DC3545\",\n                                          }}\n                                          onClick={() =>\n                                            removeStudentFromGroup(\n                                              group.groupId,\n                                              memId\n                                            )\n                                          }\n                                        >\n                                          <abbr title=\"Remove member\">\n                                            <RemoveCircleOutlineIcon />\n                                          </abbr>\n                                        </Link>\n                                      </div>\n                                      <div style={{ clear: \"both\" }}></div>\n                                    </div>\n                                  ) : (\n                                    <div></div>\n                                  )}\n                                </div>\n                              ))}\n                              {group.members.length > 2 ? (\n                                <Button\n                                  variant=\"contained\"\n                                  style={{\n                                    // width: \"fit-content\",\n                                    backgroundColor: \"#DC3545\",\n                                    color: \"white\",\n                                    float: \"right\",\n                                  }}\n                                  onClick={() =>\n                                    removeAllOtherMembersFromGroup(\n                                      group.groupId\n                                    )\n                                  }\n                                >\n                                  Remove All Members\n                                </Button>\n                              ) : (\n                                <div></div>\n                              )}\n                            </div>\n                          )}\n                        </CardContent>\n\n                        {show && (\n                          <div>\n                            <div style={{ padding: \"2%\" }}>\n                              <div>Join Group URL:</div>\n                              <div\n                                onClick={() => {\n                                  // implement copy to clipboard\n                                  // am considering the library react-copy-to-clipboard\n                                }}\n                              >\n                                {console.log(window.location.host)}\n                                http://{window.location.host}/JoinGroup/\n                                {group.groupId}\n                              </div>\n                            </div>\n\n                            <div style={{ clear: \"both\" }} />\n\n                            <div>\n                              <CardActions style={{ float: \"left\" }}>\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"secondary\"\n                                  style={\n                                    group.members.length > 1\n                                      ? {\n                                          float: \"left\",\n                                          minWidth: \"20px\",\n                                          backgroundColor: \"green\",\n                                          opacity: \"0.4\",\n                                        }\n                                      : {\n                                          float: \"left\",\n                                          minWidth: \"20px\",\n                                          backgroundColor: \"green\",\n                                          opacity: \"1\",\n                                          boxShadow: \"5px 5px 5px 0 #bbb\",\n                                        }\n                                  }\n                                  onClick={() =>\n                                    deleteGroup(\n                                      group.groupId,\n                                      group.members.length\n                                    )\n                                  }\n                                  disabled={\n                                    group.members.length > 1 ? true : false\n                                  }\n                                >\n                                  <DeleteIcon />\n                                </Button>\n                              </CardActions>\n\n                              <CardActions\n                                style={\n                                  {\n                                    //   float: \"right\",\n                                  }\n                                }\n                              >\n                                <Button\n                                  variant=\"contained\"\n                                  //color=\"primary\"\n                                  style={{\n                                    // width: \"100px\",\n                                    backgroundColor: \"#DC3545\",\n                                    color: \"white\",\n                                  }}\n                                  onClick={() =>\n                                    removeStudentFromGroup(\n                                      group.groupId,\n                                      localStorage.getItem(\"studentId\")\n                                    )\n                                  }\n                                >\n                                  Leave Group\n                                </Button>\n\n                                <Button\n                                  variant=\"contained\"\n                                  color=\"primary\"\n                                  style={\n                                    {\n                                      // width: \"100px\",\n                                    }\n                                  }\n                                  onClick={() =>\n                                    addMemberToGroup(group.groupId)\n                                  }\n                                >\n                                  Add Member\n                                </Button>\n                              </CardActions>\n                            </div>\n                          </div>\n                        )}\n                      </div>\n                    </div>\n                    <div></div>\n                  </Card>\n                ) : (\n                  <div></div>\n                )}\n              </div>\n            ))}\n          </div>\n        </div>\n      ) : (\n        <div></div>\n      )}\n    </Paper>\n  );\n}\n\nexport default ViewArchivedGroups;\n","import { React, useState, useEffect } from \"react\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport firebase from \"firebase\";\n\nimport MyModulesContext from \"../Contexts/MyModulesContext\";\nimport MyGroupsContext from \"../Contexts/MyGroupsContext\";\nimport GroupModulesContext from \"../Contexts/GroupModulesContext\";\nimport GroupManagement from \"../Components/GroupManagement\";\nimport UserProfile from \"../Components/UserProfile\";\nimport GroupTimetable from \"../Pages/GroupTimetable\";\nimport MyTimetable from \"../Pages/MyTimetable\";\n\nimport Layout from \"../Components/Layout\";\nimport JoinGroup from \"../Components/JoinGroup\";\n\nimport TutorialPage from \"../Components/TutorialPage\";\n\nimport ViewArchivedGroups from \"../Components/ViewArchivedGroups\";\n\nexport default () => {\n  const [forceRefresh, setForceRefresh] = useState(0);\n  useEffect(() => {\n    console.log(\"forceRefresh\", forceRefresh);\n  }, [forceRefresh]);\n\n  let triggerLayoutForceRefresh = () => {\n    setForceRefresh((forceRefresh) => forceRefresh + 1);\n  };\n\n  firebase.database();\n\n  return (\n    <Router>\n      <div style={{ height: \"100vh\" }}>\n        <Layout forceRefresh={forceRefresh} />\n        <MyGroupsContext>\n          <GroupModulesContext>\n            <MyModulesContext>\n              <Switch>\n                <Route path=\"/\" exact>\n                  <MyTimetable\n                    triggerLayoutForceRefresh={() => {\n                      triggerLayoutForceRefresh();\n                    }}\n                  />\n                </Route>\n                <Route path=\"/GroupManagement\" exact>\n                  <GroupManagement />\n                </Route>\n                <Route\n                  path=\"/GroupTimetable\"\n                  exact\n                  component={GroupTimetable}\n                />\n                <Route path=\"/UserProfile\" exact component={UserProfile} />\n                <Route path=\"/Timetable\" exact component={MyTimetable} />\n                <Route path=\"/JoinGroup\">\n                  <JoinGroup\n                    triggerLayoutForceRefresh={() => {\n                      triggerLayoutForceRefresh();\n                    }}\n                  />\n                </Route>\n                <Route path=\"/TutorialPage\" exact component={TutorialPage} />\n                <Route\n                  path=\"/ViewArchivedGroups\"\n                  exact\n                  component={ViewArchivedGroups}\n                />\n              </Switch>\n            </MyModulesContext>\n          </GroupModulesContext>\n        </MyGroupsContext>\n      </div>\n    </Router>\n  );\n};\n","import React from \"react\";\n\nimport ErrorBoundary from \"./Components/ErrorBoundary\";\nimport DatabaseContext from \"./Contexts/DatabaseContext\";\nimport Routes from \"./Router/Routes\";\n\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div>\n      <ErrorBoundary>\n        <DatabaseContext>\n          <Routes />\n        </DatabaseContext>\n      </ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n      <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}